android.newland.AnalogSerialManager -> android.newland.AnalogSerialManager:
    void <init>(android.newland.IAnalogSerialManager) -> <init>
    int open() -> open
    boolean isValid() -> isValid
    java.lang.String getVersion() -> getVersion
    int setconfig(int,int,byte[]) -> setconfig
    int ioctl(int,byte[]) -> ioctl
    int read(byte[],int,int) -> read
    int write(byte[],int,int) -> write
    int close() -> close
android.newland.BootProvider -> android.newland.BootProvider:
    void <init>() -> <init>
    boolean bootmusic(java.lang.String) -> bootmusic
    boolean bootanimation(java.lang.String) -> bootanimation
    boolean SetCustomBootMusic(java.lang.String) -> SetCustomBootMusic
    boolean SetCustomBootAnimation(java.lang.String) -> SetCustomBootAnimation
    boolean RemoveCustomBootMusic() -> RemoveCustomBootMusic
    boolean RemoveCustomBootAnimation() -> RemoveCustomBootAnimation
android.newland.IAnalogSerialManager -> android.newland.IAnalogSerialManager:
    java.lang.String getVersion() -> getVersion
    boolean isValid() -> isValid
    int setconfig(int,int,byte[]) -> setconfig
    int read(byte[],int,int) -> read
    int write(byte[],int,int) -> write
    int ioctl(int,byte[]) -> ioctl
    int open() -> open
    int close() -> close
android.newland.ISettingsManager -> android.newland.ISettingsManager:
    boolean setScreenTimeout(int) -> setScreenTimeout
    boolean setScreenBrightness(int) -> setScreenBrightness
    int getScreenBrightness() -> getScreenBrightness
    boolean setAllApkVerifyDisable() -> setAllApkVerifyDisable
    boolean setAllApkVerifyEnable() -> setAllApkVerifyEnable
    boolean setDefaultInputMethod(java.lang.String) -> setDefaultInputMethod
    void setLauncher(java.lang.String) -> setLauncher
    void setSettingAppDispley(int) -> setSettingAppDispley
    void setSettingStorageDispley(int) -> setSettingStorageDispley
    void setSettingHomeDispley(int) -> setSettingHomeDispley
    void setSettingVpnDispley(int) -> setSettingVpnDispley
    void setSettingPrivacyDispley(int) -> setSettingPrivacyDispley
    void sendKeyEvent(java.lang.String,int) -> sendKeyEvent
    void setShowBatteryPercent(boolean) -> setShowBatteryPercent
    boolean isShowBatteryPercent() -> isShowBatteryPercent
    boolean setSettingApkNeedLogin(int) -> setSettingApkNeedLogin
    boolean setSettingDataUsageDispley(int) -> setSettingDataUsageDispley
    boolean setSettingBatteryDispley(int) -> setSettingBatteryDispley
    boolean setSettingAccessibilitySettingsDispley(int) -> setSettingAccessibilitySettingsDispley
    boolean setSettingDevelopmentSettingsDispley(int) -> setSettingDevelopmentSettingsDispley
    boolean setSettingLocationSettingsDispley(int) -> setSettingLocationSettingsDispley
    boolean setSettingSecuritySettingsDispley(int) -> setSettingSecuritySettingsDispley
    boolean setSettingPrintSettingsDispley(int) -> setSettingPrintSettingsDispley
    boolean setLoginPassword(java.lang.String) -> setLoginPassword
    boolean enableUnionpayCommonSign() -> enableUnionpayCommonSign
    boolean setAppSwitchKeyEnabled(boolean) -> setAppSwitchKeyEnabled
    boolean relayoutNavigationBar(int) -> relayoutNavigationBar
    boolean setDefaultHome(java.lang.String) -> setDefaultHome
android.newland.K21ControllerCmd -> android.newland.K21ControllerCmd:
    byte[] START_TRANS -> START_TRANS
    byte[] END_TRANS -> END_TRANS
    byte[] CMD_CANCEL -> CMD_CANCEL
    byte[] START_TRANS_SUCCESS -> START_TRANS_SUCCESS
    byte[] END_TRANS_SUCCESS -> END_TRANS_SUCCESS
    byte[] CMD_CANCEL_SUCCESS -> CMD_CANCEL_SUCCESS
    byte[] K21_BUSY -> K21_BUSY
    byte[] CMD_READ_SUCCESS -> CMD_READ_SUCCESS
    byte[] CMD_APP_SOCKET_CLOSE -> CMD_APP_SOCKET_CLOSE
    byte[] CMD_READ_POS_KEY -> CMD_READ_POS_KEY
    byte[] CMD_POS_SLEEP -> CMD_POS_SLEEP
    byte[] CMD_POS_WAKEUP -> CMD_POS_WAKEUP
    byte[] CMD_INQUIRE -> CMD_INQUIRE
    byte[] K21_NORMAL -> K21_NORMAL
    byte[] K21_ABNORMAL -> K21_ABNORMAL
    byte[] K21_SAFE_TIGGER -> K21_SAFE_TIGGER
    byte[] CMD_CANCEL_BUF -> CMD_CANCEL_BUF
    byte[] K21_TRANS_BUSY -> K21_TRANS_BUSY
    byte[] START_TRANS_ALREADY -> START_TRANS_ALREADY
    byte[] END_TRANS_ALREADY -> END_TRANS_ALREADY
    byte[] TRANS_TIMEOUT_FAIL -> TRANS_TIMEOUT_FAIL
    byte[] CMD_DATA_ERR -> CMD_DATA_ERR
    int SECURITY_ATTACK -> SECURITY_ATTACK
    int DEVICE_ABNORMALITY -> DEVICE_ABNORMALITY
    int DEVICE_NORMAL -> DEVICE_NORMAL
    int MPOS_LEN_OFFSET -> MPOS_LEN_OFFSET
    int MPOS_CMD_OFFSET -> MPOS_CMD_OFFSET
    java.lang.String FLAG_MPOS -> FLAG_MPOS
    java.lang.String FLAG_CMD_CANCEL -> FLAG_CMD_CANCEL
    java.lang.String FLAG_NDK -> FLAG_NDK
    java.lang.String NDK_SLEEP -> NDK_SLEEP
    java.lang.String NDK_WAKEUP -> NDK_WAKEUP
    void <init>() -> <init>
    byte _LRC(byte[]) -> _LRC
    void <clinit>() -> <clinit>
android.newland.NlEnvironment -> android.newland.NlEnvironment:
    java.lang.String NL_STORAGE_DIRECTORY -> NL_STORAGE_DIRECTORY
    void <init>() -> <init>
    java.io.File getParameterDirectory() -> getParameterDirectory
android.newland.NlManager -> android.newland.NlManager:
    android.newland.NlManager mInstance -> mInstance
    boolean bValid -> bValid
    void <init>() -> <init>
    android.newland.NlManager getInstance(android.content.Context) -> getInstance
    boolean isValid() -> isValid
    java.lang.String getVersion() -> getVersion
    int setconfig(int,int,byte[]) -> setconfig
    int ioctl(int,byte[]) -> ioctl
    int read0(byte[],int,int) -> read0
    int read(byte[],int,int) -> read
    int write(byte[],int,int) -> write
    int disconnect() -> disconnect
    boolean connect(boolean) -> connect
    android.net.LocalSocket connect(android.content.Context) -> connect
    int getK21Status() -> getK21Status
android.newland.SettingsManager -> android.newland.SettingsManager:
    boolean DEBUG -> DEBUG
    void <init>(android.newland.ISettingsManager,android.os.Handler) -> <init>
    boolean setScreenBrightness(int) -> setScreenBrightness
    int getScreenBrightness() -> getScreenBrightness
    boolean setScreenTimeout(int) -> setScreenTimeout
    boolean setAllApkVerifyEnable() -> setAllApkVerifyEnable
    boolean setAllApkVerifyDisable() -> setAllApkVerifyDisable
    boolean setDefaultInputMethod(java.lang.String) -> setDefaultInputMethod
    void setLauncher(java.lang.String) -> setLauncher
    int setProductPara(java.lang.String,java.lang.String,int) -> setProductPara
    java.lang.String getProductPara(java.lang.String,int) -> getProductPara
    void sendKeyEvent(java.lang.String,int) -> sendKeyEvent
    void setSettingAppDispley(int) -> setSettingAppDispley
    void setSettingStorageDispley(int) -> setSettingStorageDispley
    void setSettingHomeDispley(int) -> setSettingHomeDispley
    void setSettingVpnDispley(int) -> setSettingVpnDispley
    void setSettingPrivacyDispley(int) -> setSettingPrivacyDispley
    void setShowBatteryPercent(boolean) -> setShowBatteryPercent
    boolean isShowBatteryPercent() -> isShowBatteryPercent
    boolean setSettingApkNeedLogin(int) -> setSettingApkNeedLogin
    boolean setSettingDataUsageDispley(int) -> setSettingDataUsageDispley
    boolean setSettingBatteryDispley(int) -> setSettingBatteryDispley
    boolean setSettingAccessibilitySettingsDispley(int) -> setSettingAccessibilitySettingsDispley
    boolean setSettingDevelopmentSettingsDispley(int) -> setSettingDevelopmentSettingsDispley
    boolean setSettingLocationSettingsDispley(int) -> setSettingLocationSettingsDispley
    boolean setSettingSecuritySettingsDispley(int) -> setSettingSecuritySettingsDispley
    boolean setSettingPrintSettingsDispley(int) -> setSettingPrintSettingsDispley
    boolean setLoginPassword(java.lang.String) -> setLoginPassword
    boolean enableUnionpayCommonSign() -> enableUnionpayCommonSign
    boolean setAppSwitchKeyEnabled(boolean) -> setAppSwitchKeyEnabled
    boolean relayoutNavigationBar(int) -> relayoutNavigationBar
    boolean setDefaultHome(java.lang.String) -> setDefaultHome
android.newland.app.AppManager -> android.newland.app.AppManager:
    void <init>(android.content.Context) -> <init>
    void installAPP(java.lang.String) -> installAPP
    void uninstallHide(java.lang.String) -> uninstallHide
android.newland.content.NlContext -> android.newland.content.NlContext:
    java.lang.String K21_SERVICE -> K21_SERVICE
    java.lang.String UART3_SERVICE -> UART3_SERVICE
    java.lang.String ANALOG_SERIAL_SERVICE -> ANALOG_SERIAL_SERVICE
    java.lang.String SETTINGS_MANAGER_SERVICE -> SETTINGS_MANAGER_SERVICE
    void <init>() -> <init>
android.newland.content.NlIntent -> android.newland.content.NlIntent:
    java.lang.String ACTION_VIEW_HIDE -> ACTION_VIEW_HIDE
    java.lang.String ACTION_INSTALL_APP -> ACTION_INSTALL_APP
    java.lang.String ACTION_INSTALL_APP_HIDE -> ACTION_INSTALL_APP_HIDE
    java.lang.String ACTION_INSTALL_FAILED_INVALID_APK -> ACTION_INSTALL_FAILED_INVALID_APK
    java.lang.String ACTION_INSTALL_APK_PERMISSION_FAILED -> ACTION_INSTALL_APK_PERMISSION_FAILED
    java.lang.String ACTION_PACKAGE_SUCCESS -> ACTION_PACKAGE_SUCCESS
    java.lang.String ACTION_PACKAGE_FAIL -> ACTION_PACKAGE_FAIL
    java.lang.String ACTION_INSTALL_FAILED_INVALID_APK_HIDE -> ACTION_INSTALL_FAILED_INVALID_APK_HIDE
    java.lang.String ACTION_INSTALL_APK_PERMISSION_FAILED_HIDE -> ACTION_INSTALL_APK_PERMISSION_FAILED_HIDE
    java.lang.String ACTION_PACKAGE_SUCCESS_HIDE -> ACTION_PACKAGE_SUCCESS_HIDE
    java.lang.String ACTION_PACKAGE_FAIL_HIDE -> ACTION_PACKAGE_FAIL_HIDE
    java.lang.String ACTION_DELETE_HIDE -> ACTION_DELETE_HIDE
    java.lang.String ACTION_DELETE_APP -> ACTION_DELETE_APP
    java.lang.String ACTION_DELETE_APP_HIDE -> ACTION_DELETE_APP_HIDE
    java.lang.String ACTION_DELETE_APP_NOT_FOUND -> ACTION_DELETE_APP_NOT_FOUND
    java.lang.String ACTION_DELETE_NOT_PERMISSION -> ACTION_DELETE_NOT_PERMISSION
    java.lang.String ACTION_DELETE_SUCCESS -> ACTION_DELETE_SUCCESS
    java.lang.String ACTION_DELETE_FAIL -> ACTION_DELETE_FAIL
    java.lang.String ACTION_DELETE_APP_NOT_FOUND_HIDE -> ACTION_DELETE_APP_NOT_FOUND_HIDE
    java.lang.String ACTION_DELETE_NOT_PERMISSION_HIDE -> ACTION_DELETE_NOT_PERMISSION_HIDE
    java.lang.String ACTION_DELETE_SUCCESS_HIDE -> ACTION_DELETE_SUCCESS_HIDE
    java.lang.String ACTION_DELETE_FAIL_HIDE -> ACTION_DELETE_FAIL_HIDE
    void <init>() -> <init>
android.newland.ndk.security.NdkSecurityManager -> android.newland.ndk.security.NdkSecurityManager:
    void <init>() -> <init>
    int getSecTamperStatus(int[]) -> getSecTamperStatus
android.newland.net.wifi.GetWifiConfigDisableReason -> android.newland.net.wifi.GetWifiConfigDisableReason:
    void <init>(android.net.wifi.WifiConfiguration) -> <init>
    int getDisableReason() -> getDisableReason
android.newland.os.NlBuild -> android.newland.os.NlBuild:
    void <init>() -> <init>
android.newland.os.NlBuild$VERSION -> android.newland.os.NlBuild$VERSION:
    java.lang.String NL_FIRMWARE -> NL_FIRMWARE
    java.lang.String NL_HARDWARE_ID -> NL_HARDWARE_ID
    java.lang.String NL_HARDWARE_CONFIG -> NL_HARDWARE_CONFIG
    java.lang.String MODEL -> MODEL
    java.lang.String BOOTLOADER_VERSION -> BOOTLOADER_VERSION
    java.lang.String PROCESSOR_INFO -> PROCESSOR_INFO
    java.lang.String MANUFACTURE -> MANUFACTURE
    java.lang.String KERNEL_VERSION -> KERNEL_VERSION
    void <init>() -> <init>
    void <clinit>() -> <clinit>
android.newland.os.NlRecovery -> android.newland.os.NlRecovery:
    void <init>(android.content.Context) -> <init>
    void resetFactory() -> resetFactory
android.newland.os.SystemWakeupManager -> android.newland.os.SystemWakeupManager:
    void <init>() -> <init>
    boolean systemWakeup() -> systemWakeup
android.newland.scan.ScanUtil -> android.newland.scan.ScanUtil:
    int SUCCESS -> SUCCESS
    int FAULT -> FAULT
    int DEFAULT_SCAN_TIME -> DEFAULT_SCAN_TIME
    int MODE_ONCE -> MODE_ONCE
    int MODE_CONTINUALLY -> MODE_CONTINUALLY
    int MODE_MANUALLY -> MODE_MANUALLY
    int FOCUS_OFF -> FOCUS_OFF
    int FOCUS_READING -> FOCUS_READING
    int FOCUS_ON -> FOCUS_ON
    int CONTINUOUS_GAP_TIME -> CONTINUOUS_GAP_TIME
    int CONTINUOUS_COUNT -> CONTINUOUS_COUNT
    void <init>(android.content.Context) -> <init>
    int init(int,int,int,boolean) -> init
    int init() -> init
    int setModeContinuous(int,int) -> setModeContinuous
    java.lang.Object doScan() -> doScan
    void stopScan() -> stopScan
    void relese() -> relese
android.newland.security.CertificateChainVerification -> android.newland.security.CertificateChainVerification:
    void <init>() -> <init>
    int getVerityCertificateChainResult() -> getVerityCertificateChainResult
android.newland.security.CertificateInfo -> android.newland.security.CertificateInfo:
    void <init>(android.content.Context) -> <init>
    java.security.cert.X509Certificate getCertificateInfo() -> getCertificateInfo
    java.lang.String getMtmsCommonName() -> getMtmsCommonName
android.newland.security.SecureStorageSpace -> android.newland.security.SecureStorageSpace:
    void <init>(android.content.Context) -> <init>
    java.lang.String ApplicationStroageSpace(java.lang.String) -> ApplicationStroageSpace
android.newland.security.SignatureComparison -> android.newland.security.SignatureComparison:
    void <init>() -> <init>
    int init_x509(java.lang.String,java.lang.String) -> init_x509
android.newland.telephony.ApnEntity -> android.newland.telephony.ApnEntity:
    void <init>() -> <init>
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getApn() -> getApn
    void setApn(java.lang.String) -> setApn
    java.lang.String getProxy() -> getProxy
    void setProxy(java.lang.String) -> setProxy
    java.lang.String getPort() -> getPort
    void setPort(java.lang.String) -> setPort
    java.lang.String getMmsProxy() -> getMmsProxy
    void setMmsProxy(java.lang.String) -> setMmsProxy
    java.lang.String getMmsPort() -> getMmsPort
    void setMmsPort(java.lang.String) -> setMmsPort
    java.lang.String getServer() -> getServer
    void setServer(java.lang.String) -> setServer
    java.lang.String getUser() -> getUser
    void setUser(java.lang.String) -> setUser
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getMmsc() -> getMmsc
    void setMmsc(java.lang.String) -> setMmsc
    java.lang.String getMcc() -> getMcc
    void setMcc(java.lang.String) -> setMcc
    java.lang.String getMnc() -> getMnc
    void setMnc(java.lang.String) -> setMnc
    java.lang.String getNumeric() -> getNumeric
    void setNumeric(java.lang.String) -> setNumeric
    java.lang.String getAuthType() -> getAuthType
    void setAuthType(java.lang.String) -> setAuthType
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getProtocol() -> getProtocol
    void setProtocol(java.lang.String) -> setProtocol
    java.lang.String getRoamingProtocol() -> getRoamingProtocol
    void setRoamingProtocol(java.lang.String) -> setRoamingProtocol
    java.lang.String getCurrent() -> getCurrent
    void setCurrent(java.lang.String) -> setCurrent
    java.lang.String getCarrierEnabled() -> getCarrierEnabled
    void setCarrierEnabled(java.lang.String) -> setCarrierEnabled
    java.lang.String getBearer() -> getBearer
    void setBearer(java.lang.String) -> setBearer
    java.lang.String getMvnoType() -> getMvnoType
    void setMvnoType(java.lang.String) -> setMvnoType
    java.lang.String getMvnoMatchData() -> getMvnoMatchData
    void setMvnoMatchData(java.lang.String) -> setMvnoMatchData
    java.lang.String getPppNumber() -> getPppNumber
    void setPppNumber(java.lang.String) -> setPppNumber
    int getId() -> getId
    void setId(int) -> setId
android.newland.telephony.ApnUtils -> android.newland.telephony.ApnUtils:
    void <init>(android.content.Context) -> <init>
    int addNewApn(android.newland.telephony.ApnEntity) -> addNewApn
    android.newland.telephony.ApnEntity getPreferApn() -> getPreferApn
    java.util.List getAllApnList() -> getAllApnList
    boolean removeApn(int) -> removeApn
    int setDefault(int) -> setDefault
android.newland.telephony.TelephonyManager -> android.newland.telephony.TelephonyManager:
    void <init>(android.content.Context) -> <init>
    void setMobileDataEnabled(boolean) -> setMobileDataEnabled
    boolean getMobileDataEnabled() -> getMobileDataEnabled
com.lidroid.xutils.BitmapUtils -> com.lidroid.xutils.BitmapUtils:
    boolean pauseTask -> pauseTask
    boolean cancelAllTask -> cancelAllTask
    java.lang.Object pauseTaskLock -> pauseTaskLock
    android.content.Context context -> context
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    com.lidroid.xutils.bitmap.BitmapDisplayConfig defaultDisplayConfig -> defaultDisplayConfig
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,java.lang.String) -> <init>
    void <init>(android.content.Context,java.lang.String,int) -> <init>
    void <init>(android.content.Context,java.lang.String,int,int) -> <init>
    void <init>(android.content.Context,java.lang.String,float) -> <init>
    void <init>(android.content.Context,java.lang.String,float,int) -> <init>
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.drawable.Drawable) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(int) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.Bitmap) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.drawable.Drawable) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(int) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.Bitmap) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(int,int) -> configDefaultBitmapMaxSize
    com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> configDefaultBitmapMaxSize
    com.lidroid.xutils.BitmapUtils configDefaultImageLoadAnimation(android.view.animation.Animation) -> configDefaultImageLoadAnimation
    com.lidroid.xutils.BitmapUtils configDefaultAutoRotation(boolean) -> configDefaultAutoRotation
    com.lidroid.xutils.BitmapUtils configDefaultShowOriginal(boolean) -> configDefaultShowOriginal
    com.lidroid.xutils.BitmapUtils configDefaultBitmapConfig(android.graphics.Bitmap$Config) -> configDefaultBitmapConfig
    com.lidroid.xutils.BitmapUtils configDefaultDisplayConfig(com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> configDefaultDisplayConfig
    com.lidroid.xutils.BitmapUtils configDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> configDownloader
    com.lidroid.xutils.BitmapUtils configDefaultCacheExpiry(long) -> configDefaultCacheExpiry
    com.lidroid.xutils.BitmapUtils configDefaultConnectTimeout(int) -> configDefaultConnectTimeout
    com.lidroid.xutils.BitmapUtils configDefaultReadTimeout(int) -> configDefaultReadTimeout
    com.lidroid.xutils.BitmapUtils configThreadPoolSize(int) -> configThreadPoolSize
    com.lidroid.xutils.BitmapUtils configMemoryCacheEnabled(boolean) -> configMemoryCacheEnabled
    com.lidroid.xutils.BitmapUtils configDiskCacheEnabled(boolean) -> configDiskCacheEnabled
    com.lidroid.xutils.BitmapUtils configDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> configDiskCacheFileNameGenerator
    com.lidroid.xutils.BitmapUtils configBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> configBitmapCacheListener
    void display(android.view.View,java.lang.String) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapTaskFromContainer(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> getBitmapTaskFromContainer
    boolean bitmapLoadTaskExist(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> bitmapLoadTaskExist
    java.lang.Object access$0(com.lidroid.xutils.BitmapUtils) -> access$0
    boolean access$1(com.lidroid.xutils.BitmapUtils) -> access$1
    boolean access$2(com.lidroid.xutils.BitmapUtils) -> access$2
    com.lidroid.xutils.bitmap.BitmapGlobalConfig access$3(com.lidroid.xutils.BitmapUtils) -> access$3
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask access$4(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> access$4
com.lidroid.xutils.BitmapUtils$BitmapLoadTask -> com.lidroid.xutils.BitmapUtils$BitmapLoadTask:
    java.lang.String uri -> uri
    java.lang.ref.WeakReference containerReference -> containerReference
    com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack callBack -> callBack
    com.lidroid.xutils.bitmap.BitmapDisplayConfig displayConfig -> displayConfig
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom from -> from
    int PROGRESS_LOAD_STARTED -> PROGRESS_LOAD_STARTED
    int PROGRESS_LOADING -> PROGRESS_LOADING
    com.lidroid.xutils.BitmapUtils this$0 -> this$0
    void <init>(com.lidroid.xutils.BitmapUtils,android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> <init>
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> doInBackground
    void updateProgress(long,long) -> updateProgress
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    android.view.View getTargetContainer() -> getTargetContainer
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$3(com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> access$3
com.lidroid.xutils.DbUtils -> com.lidroid.xutils.DbUtils:
    java.util.HashMap daoMap -> daoMap
    android.database.sqlite.SQLiteDatabase database -> database
    com.lidroid.xutils.DbUtils$DaoConfig daoConfig -> daoConfig
    boolean debug -> debug
    boolean allowTransaction -> allowTransaction
    java.util.concurrent.locks.Lock writeLock -> writeLock
    boolean writeLocked -> writeLocked
    com.lidroid.xutils.DbUtils$FindTempCache findTempCache -> findTempCache
    void <clinit>() -> <clinit>
    void <init>(com.lidroid.xutils.DbUtils$DaoConfig) -> <init>
    com.lidroid.xutils.DbUtils getInstance(com.lidroid.xutils.DbUtils$DaoConfig) -> getInstance
    com.lidroid.xutils.DbUtils create(android.content.Context) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    com.lidroid.xutils.DbUtils create(com.lidroid.xutils.DbUtils$DaoConfig) -> create
    com.lidroid.xutils.DbUtils configDebug(boolean) -> configDebug
    com.lidroid.xutils.DbUtils configAllowTransaction(boolean) -> configAllowTransaction
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    com.lidroid.xutils.DbUtils$DaoConfig getDaoConfig() -> getDaoConfig
    void saveOrUpdate(java.lang.Object) -> saveOrUpdate
    void saveOrUpdateAll(java.util.List) -> saveOrUpdateAll
    void replace(java.lang.Object) -> replace
    void replaceAll(java.util.List) -> replaceAll
    void save(java.lang.Object) -> save
    void saveAll(java.util.List) -> saveAll
    boolean saveBindingId(java.lang.Object) -> saveBindingId
    void saveBindingIdAll(java.util.List) -> saveBindingIdAll
    void deleteById(java.lang.Class,java.lang.Object) -> deleteById
    void delete(java.lang.Object) -> delete
    void delete(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> delete
    void deleteAll(java.util.List) -> deleteAll
    void deleteAll(java.lang.Class) -> deleteAll
    void update(java.lang.Object,java.lang.String[]) -> update
    void update(java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> update
    void updateAll(java.util.List,java.lang.String[]) -> updateAll
    void updateAll(java.util.List,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> updateAll
    java.lang.Object findById(java.lang.Class,java.lang.Object) -> findById
    java.lang.Object findFirst(com.lidroid.xutils.db.sqlite.Selector) -> findFirst
    java.lang.Object findFirst(java.lang.Class) -> findFirst
    java.util.List findAll(com.lidroid.xutils.db.sqlite.Selector) -> findAll
    java.util.List findAll(java.lang.Class) -> findAll
    com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelFirst
    com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelFirst
    java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelAll
    java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelAll
    long count(com.lidroid.xutils.db.sqlite.Selector) -> count
    long count(java.lang.Class) -> count
    android.database.sqlite.SQLiteDatabase createDatabase(com.lidroid.xutils.DbUtils$DaoConfig) -> createDatabase
    void saveOrUpdateWithoutTransaction(java.lang.Object) -> saveOrUpdateWithoutTransaction
    boolean saveBindingIdWithoutTransaction(java.lang.Object) -> saveBindingIdWithoutTransaction
    long getLastAutoIncrementId(java.lang.String) -> getLastAutoIncrementId
    void createTableIfNotExist(java.lang.Class) -> createTableIfNotExist
    boolean tableIsExist(java.lang.Class) -> tableIsExist
    void dropDb() -> dropDb
    void dropTable(java.lang.Class) -> dropTable
    void close() -> close
    void debugSql(java.lang.String) -> debugSql
    void beginTransaction() -> beginTransaction
    void setTransactionSuccessful() -> setTransactionSuccessful
    void endTransaction() -> endTransaction
    void execNonQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execNonQuery
    void execNonQuery(java.lang.String) -> execNonQuery
    android.database.Cursor execQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execQuery
    android.database.Cursor execQuery(java.lang.String) -> execQuery
com.lidroid.xutils.DbUtils$DaoConfig -> com.lidroid.xutils.DbUtils$DaoConfig:
    android.content.Context context -> context
    java.lang.String dbName -> dbName
    int dbVersion -> dbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener dbUpgradeListener -> dbUpgradeListener
    java.lang.String dbDir -> dbDir
    void <init>(android.content.Context) -> <init>
    android.content.Context getContext() -> getContext
    java.lang.String getDbName() -> getDbName
    void setDbName(java.lang.String) -> setDbName
    int getDbVersion() -> getDbVersion
    void setDbVersion(int) -> setDbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener getDbUpgradeListener() -> getDbUpgradeListener
    void setDbUpgradeListener(com.lidroid.xutils.DbUtils$DbUpgradeListener) -> setDbUpgradeListener
    java.lang.String getDbDir() -> getDbDir
    void setDbDir(java.lang.String) -> setDbDir
com.lidroid.xutils.DbUtils$DbUpgradeListener -> com.lidroid.xutils.DbUtils$DbUpgradeListener:
    void onUpgrade(com.lidroid.xutils.DbUtils,int,int) -> onUpgrade
com.lidroid.xutils.DbUtils$FindTempCache -> com.lidroid.xutils.DbUtils$FindTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    com.lidroid.xutils.DbUtils this$0 -> this$0
    void <init>(com.lidroid.xutils.DbUtils) -> <init>
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void setSeq(long) -> setSeq
    void <init>(com.lidroid.xutils.DbUtils,com.lidroid.xutils.DbUtils$FindTempCache) -> <init>
com.lidroid.xutils.HttpUtils -> com.lidroid.xutils.HttpUtils:
    com.lidroid.xutils.http.HttpCache sHttpCache -> sHttpCache
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String responseTextCharset -> responseTextCharset
    long currentRequestExpiry -> currentRequestExpiry
    int DEFAULT_CONN_TIMEOUT -> DEFAULT_CONN_TIMEOUT
    int DEFAULT_RETRY_TIMES -> DEFAULT_RETRY_TIMES
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor EXECUTOR -> EXECUTOR
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(int,java.lang.String) -> <init>
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    com.lidroid.xutils.HttpUtils configResponseTextCharset(java.lang.String) -> configResponseTextCharset
    com.lidroid.xutils.HttpUtils configHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> configHttpRedirectHandler
    com.lidroid.xutils.HttpUtils configHttpCacheSize(int) -> configHttpCacheSize
    com.lidroid.xutils.HttpUtils configDefaultHttpCacheExpiry(long) -> configDefaultHttpCacheExpiry
    com.lidroid.xutils.HttpUtils configCurrentHttpCacheExpiry(long) -> configCurrentHttpCacheExpiry
    com.lidroid.xutils.HttpUtils configCookieStore(org.apache.http.client.CookieStore) -> configCookieStore
    com.lidroid.xutils.HttpUtils configUserAgent(java.lang.String) -> configUserAgent
    com.lidroid.xutils.HttpUtils configTimeout(int) -> configTimeout
    com.lidroid.xutils.HttpUtils configSoTimeout(int) -> configSoTimeout
    com.lidroid.xutils.HttpUtils configRegisterScheme(org.apache.http.conn.scheme.Scheme) -> configRegisterScheme
    com.lidroid.xutils.HttpUtils configSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> configSSLSocketFactory
    com.lidroid.xutils.HttpUtils configRequestRetryCount(int) -> configRequestRetryCount
    com.lidroid.xutils.HttpUtils configRequestThreadPoolSize(int) -> configRequestThreadPoolSize
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String) -> sendSync
    com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams) -> sendSync
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler sendRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> sendRequest
    com.lidroid.xutils.http.ResponseStream sendSyncRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams) -> sendSyncRequest
com.lidroid.xutils.HttpUtils$1 -> com.lidroid.xutils.HttpUtils$1:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    void <init>(com.lidroid.xutils.HttpUtils) -> <init>
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.HttpUtils$2 -> com.lidroid.xutils.HttpUtils$2:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    void <init>(com.lidroid.xutils.HttpUtils) -> <init>
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.ViewUtils -> com.lidroid.xutils.ViewUtils:
    void <init>() -> <init>
    void inject(android.view.View) -> inject
    void inject(android.app.Activity) -> inject
    void inject(android.preference.PreferenceActivity) -> inject
    void inject(java.lang.Object,android.view.View) -> inject
    void inject(java.lang.Object,android.app.Activity) -> inject
    void inject(java.lang.Object,android.preference.PreferenceGroup) -> inject
    void inject(java.lang.Object,android.preference.PreferenceActivity) -> inject
    void injectObject(java.lang.Object,com.lidroid.xutils.view.ViewFinder) -> injectObject
com.lidroid.xutils.bitmap.BitmapCacheListener -> com.lidroid.xutils.bitmap.BitmapCacheListener:
    void onInitMemoryCacheFinished() -> onInitMemoryCacheFinished
    void onInitDiskFinished() -> onInitDiskFinished
    void onClearCacheFinished() -> onClearCacheFinished
    void onClearMemoryCacheFinished() -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished() -> onClearDiskCacheFinished
    void onClearCacheFinished(java.lang.String) -> onClearCacheFinished
    void onClearMemoryCacheFinished(java.lang.String) -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished(java.lang.String) -> onClearDiskCacheFinished
    void onFlushCacheFinished() -> onFlushCacheFinished
    void onCloseCacheFinished() -> onCloseCacheFinished
com.lidroid.xutils.bitmap.BitmapCommonUtils -> com.lidroid.xutils.bitmap.BitmapCommonUtils:
    com.lidroid.xutils.bitmap.core.BitmapSize screenSize -> screenSize
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    com.lidroid.xutils.bitmap.core.BitmapSize getScreenSize(android.content.Context) -> getScreenSize
    com.lidroid.xutils.bitmap.core.BitmapSize optimizeMaxSizeByView(android.view.View,int,int) -> optimizeMaxSizeByView
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
com.lidroid.xutils.bitmap.BitmapDisplayConfig -> com.lidroid.xutils.bitmap.BitmapDisplayConfig:
    com.lidroid.xutils.bitmap.core.BitmapSize bitmapMaxSize -> bitmapMaxSize
    android.view.animation.Animation animation -> animation
    android.graphics.drawable.Drawable loadingDrawable -> loadingDrawable
    android.graphics.drawable.Drawable loadFailedDrawable -> loadFailedDrawable
    boolean autoRotation -> autoRotation
    boolean showOriginal -> showOriginal
    android.graphics.Bitmap$Config bitmapConfig -> bitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory bitmapFactory -> bitmapFactory
    com.lidroid.xutils.task.Priority priority -> priority
    void <init>() -> <init>
    com.lidroid.xutils.bitmap.core.BitmapSize getBitmapMaxSize() -> getBitmapMaxSize
    void setBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> setBitmapMaxSize
    android.view.animation.Animation getAnimation() -> getAnimation
    void setAnimation(android.view.animation.Animation) -> setAnimation
    android.graphics.drawable.Drawable getLoadingDrawable() -> getLoadingDrawable
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    android.graphics.drawable.Drawable getLoadFailedDrawable() -> getLoadFailedDrawable
    void setLoadFailedDrawable(android.graphics.drawable.Drawable) -> setLoadFailedDrawable
    boolean isAutoRotation() -> isAutoRotation
    void setAutoRotation(boolean) -> setAutoRotation
    boolean isShowOriginal() -> isShowOriginal
    void setShowOriginal(boolean) -> setShowOriginal
    android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    void setBitmapConfig(android.graphics.Bitmap$Config) -> setBitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory getBitmapFactory() -> getBitmapFactory
    void setBitmapFactory(com.lidroid.xutils.bitmap.factory.BitmapFactory) -> setBitmapFactory
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    java.lang.String toString() -> toString
    com.lidroid.xutils.bitmap.BitmapDisplayConfig cloneNew() -> cloneNew
com.lidroid.xutils.bitmap.BitmapGlobalConfig -> com.lidroid.xutils.bitmap.BitmapGlobalConfig:
    java.lang.String diskCachePath -> diskCachePath
    int MIN_MEMORY_CACHE_SIZE -> MIN_MEMORY_CACHE_SIZE
    int memoryCacheSize -> memoryCacheSize
    int MIN_DISK_CACHE_SIZE -> MIN_DISK_CACHE_SIZE
    int diskCacheSize -> diskCacheSize
    boolean memoryCacheEnabled -> memoryCacheEnabled
    boolean diskCacheEnabled -> diskCacheEnabled
    com.lidroid.xutils.bitmap.download.Downloader downloader -> downloader
    com.lidroid.xutils.bitmap.core.BitmapCache bitmapCache -> bitmapCache
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor BITMAP_LOAD_EXECUTOR -> BITMAP_LOAD_EXECUTOR
    com.lidroid.xutils.task.PriorityExecutor DISK_CACHE_EXECUTOR -> DISK_CACHE_EXECUTOR
    long defaultCacheExpiry -> defaultCacheExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener bitmapCacheListener -> bitmapCacheListener
    android.content.Context mContext -> mContext
    java.util.HashMap configMap -> configMap
    void <clinit>() -> <clinit>
    void <init>(android.content.Context,java.lang.String) -> <init>
    com.lidroid.xutils.bitmap.BitmapGlobalConfig getInstance(android.content.Context,java.lang.String) -> getInstance
    void initBitmapCache() -> initBitmapCache
    java.lang.String getDiskCachePath() -> getDiskCachePath
    com.lidroid.xutils.bitmap.download.Downloader getDownloader() -> getDownloader
    void setDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> setDownloader
    long getDefaultCacheExpiry() -> getDefaultCacheExpiry
    void setDefaultCacheExpiry(long) -> setDefaultCacheExpiry
    int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    int getDefaultReadTimeout() -> getDefaultReadTimeout
    void setDefaultReadTimeout(int) -> setDefaultReadTimeout
    com.lidroid.xutils.bitmap.core.BitmapCache getBitmapCache() -> getBitmapCache
    int getMemoryCacheSize() -> getMemoryCacheSize
    void setMemoryCacheSize(int) -> setMemoryCacheSize
    void setMemCacheSizePercent(float) -> setMemCacheSizePercent
    int getDiskCacheSize() -> getDiskCacheSize
    void setDiskCacheSize(int) -> setDiskCacheSize
    int getThreadPoolSize() -> getThreadPoolSize
    void setThreadPoolSize(int) -> setThreadPoolSize
    com.lidroid.xutils.task.PriorityExecutor getBitmapLoadExecutor() -> getBitmapLoadExecutor
    com.lidroid.xutils.task.PriorityExecutor getDiskCacheExecutor() -> getDiskCacheExecutor
    boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    void setMemoryCacheEnabled(boolean) -> setMemoryCacheEnabled
    boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    void setDiskCacheEnabled(boolean) -> setDiskCacheEnabled
    com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener getBitmapCacheListener() -> getBitmapCacheListener
    void setBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> setBitmapCacheListener
    int getMemoryClass() -> getMemoryClass
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    com.lidroid.xutils.bitmap.BitmapCacheListener access$0(com.lidroid.xutils.bitmap.BitmapGlobalConfig) -> access$0
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask -> com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask:
    int MESSAGE_INIT_MEMORY_CACHE -> MESSAGE_INIT_MEMORY_CACHE
    int MESSAGE_INIT_DISK_CACHE -> MESSAGE_INIT_DISK_CACHE
    int MESSAGE_FLUSH -> MESSAGE_FLUSH
    int MESSAGE_CLOSE -> MESSAGE_CLOSE
    int MESSAGE_CLEAR -> MESSAGE_CLEAR
    int MESSAGE_CLEAR_MEMORY -> MESSAGE_CLEAR_MEMORY
    int MESSAGE_CLEAR_DISK -> MESSAGE_CLEAR_DISK
    int MESSAGE_CLEAR_BY_KEY -> MESSAGE_CLEAR_BY_KEY
    int MESSAGE_CLEAR_MEMORY_BY_KEY -> MESSAGE_CLEAR_MEMORY_BY_KEY
    int MESSAGE_CLEAR_DISK_BY_KEY -> MESSAGE_CLEAR_DISK_BY_KEY
    com.lidroid.xutils.bitmap.BitmapGlobalConfig this$0 -> this$0
    void <init>(com.lidroid.xutils.bitmap.BitmapGlobalConfig) -> <init>
    java.lang.Object[] doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(com.lidroid.xutils.bitmap.BitmapGlobalConfig,com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask) -> <init>
com.lidroid.xutils.bitmap.PauseOnScrollListener -> com.lidroid.xutils.bitmap.PauseOnScrollListener:
    com.lidroid.xutils.task.TaskHandler taskHandler -> taskHandler
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void <init>(com.lidroid.xutils.task.TaskHandler,boolean,boolean) -> <init>
    void <init>(com.lidroid.xutils.task.TaskHandler,boolean,boolean,android.widget.AbsListView$OnScrollListener) -> <init>
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack:
    com.lidroid.xutils.bitmap.callback.BitmapSetter bitmapSetter -> bitmapSetter
    void <init>() -> <init>
    void onPreLoad(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onPreLoad
    void onLoadStarted(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onLoadStarted
    void onLoading(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,long,long) -> onLoading
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    void setBitmapSetter(com.lidroid.xutils.bitmap.callback.BitmapSetter) -> setBitmapSetter
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom -> com.lidroid.xutils.bitmap.callback.BitmapLoadFrom:
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom MEMORY_CACHE -> MEMORY_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom DISK_CACHE -> DISK_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom URI -> URI
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] values() -> values
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.bitmap.callback.BitmapSetter -> com.lidroid.xutils.bitmap.callback.BitmapSetter:
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack:
    void <init>() -> <init>
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    void animationDisplay(android.view.View,android.view.animation.Animation) -> animationDisplay
com.lidroid.xutils.bitmap.core.AsyncDrawable -> com.lidroid.xutils.bitmap.core.AsyncDrawable:
    java.lang.ref.WeakReference bitmapLoadTaskReference -> bitmapLoadTaskReference
    android.graphics.drawable.Drawable baseDrawable -> baseDrawable
    void <init>(android.graphics.drawable.Drawable,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> <init>
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapWorkerTask() -> getBitmapWorkerTask
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void setBounds(int,int,int,int) -> setBounds
    void setBounds(android.graphics.Rect) -> setBounds
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void invalidateSelf() -> invalidateSelf
    void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
com.lidroid.xutils.bitmap.core.BitmapCache -> com.lidroid.xutils.bitmap.core.BitmapCache:
    int DISK_CACHE_INDEX -> DISK_CACHE_INDEX
    com.lidroid.xutils.cache.LruDiskCache mDiskLruCache -> mDiskLruCache
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    java.lang.Object mDiskCacheLock -> mDiskCacheLock
    boolean isDiskCacheReady -> isDiskCacheReady
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    void <init>(com.lidroid.xutils.bitmap.BitmapGlobalConfig) -> <init>
    void initMemoryCache() -> initMemoryCache
    void initDiskCache() -> initDiskCache
    void setMemoryCacheSize(int) -> setMemoryCacheSize
    void setDiskCacheSize(int) -> setDiskCacheSize
    void setDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setDiskCacheFileNameGenerator
    android.graphics.Bitmap downloadBitmap(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadBitmap
    android.graphics.Bitmap addBitmapToMemoryCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap,long) -> addBitmapToMemoryCache
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromDiskCache
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flush() -> flush
    void close() -> close
    android.graphics.Bitmap decodeBitmapMeta(com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> decodeBitmapMeta
    android.graphics.Bitmap rotateBitmapIfNeeded(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap) -> rotateBitmapIfNeeded
com.lidroid.xutils.bitmap.core.BitmapCache$1 -> com.lidroid.xutils.bitmap.core.BitmapCache$1:
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    void <init>(com.lidroid.xutils.bitmap.core.BitmapCache,int) -> <init>
    int sizeOf(com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey,android.graphics.Bitmap) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta -> com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta:
    java.io.FileInputStream inputStream -> inputStream
    byte[] data -> data
    long expiryTimestamp -> expiryTimestamp
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    void <init>(com.lidroid.xutils.bitmap.core.BitmapCache) -> <init>
    void <init>(com.lidroid.xutils.bitmap.core.BitmapCache,com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta) -> <init>
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey -> com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey:
    java.lang.String uri -> uri
    java.lang.String subKey -> subKey
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    void <init>(com.lidroid.xutils.bitmap.core.BitmapCache,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void <init>(com.lidroid.xutils.bitmap.core.BitmapCache,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey) -> <init>
com.lidroid.xutils.bitmap.core.BitmapDecoder -> com.lidroid.xutils.bitmap.core.BitmapDecoder:
    java.lang.Object lock -> lock
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromResource
    android.graphics.Bitmap decodeSampledBitmapFromFile(java.lang.String,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromFile
    android.graphics.Bitmap decodeSampledBitmapFromDescriptor(java.io.FileDescriptor,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromDescriptor
    android.graphics.Bitmap decodeSampledBitmapFromByteArray(byte[],com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromByteArray
    android.graphics.Bitmap decodeResource(android.content.res.Resources,int) -> decodeResource
    android.graphics.Bitmap decodeFile(java.lang.String) -> decodeFile
    android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor) -> decodeFileDescriptor
    android.graphics.Bitmap decodeByteArray(byte[]) -> decodeByteArray
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> calculateInSampleSize
com.lidroid.xutils.bitmap.core.BitmapSize -> com.lidroid.xutils.bitmap.core.BitmapSize:
    com.lidroid.xutils.bitmap.core.BitmapSize ZERO -> ZERO
    int width -> width
    int height -> height
    void <clinit>() -> <clinit>
    void <init>(int,int) -> <init>
    com.lidroid.xutils.bitmap.core.BitmapSize scaleDown(int) -> scaleDown
    com.lidroid.xutils.bitmap.core.BitmapSize scale(float) -> scale
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    java.lang.String toString() -> toString
com.lidroid.xutils.bitmap.download.DefaultDownloader -> com.lidroid.xutils.bitmap.download.DefaultDownloader:
    void <init>() -> <init>
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
com.lidroid.xutils.bitmap.download.Downloader -> com.lidroid.xutils.bitmap.download.Downloader:
    android.content.Context context -> context
    long defaultExpiry -> defaultExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    void <init>() -> <init>
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    void setDefaultExpiry(long) -> setDefaultExpiry
    long getDefaultExpiry() -> getDefaultExpiry
    int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    int getDefaultReadTimeout() -> getDefaultReadTimeout
    void setDefaultReadTimeout(int) -> setDefaultReadTimeout
com.lidroid.xutils.bitmap.factory.BitmapFactory -> com.lidroid.xutils.bitmap.factory.BitmapFactory:
    com.lidroid.xutils.bitmap.factory.BitmapFactory cloneNew() -> cloneNew
    android.graphics.Bitmap createBitmap(android.graphics.Bitmap) -> createBitmap
com.lidroid.xutils.cache.FileNameGenerator -> com.lidroid.xutils.cache.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.lidroid.xutils.cache.KeyExpiryMap -> com.lidroid.xutils.cache.KeyExpiryMap:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    void <init>(int,float,int) -> <init>
    void <init>(int,float) -> <init>
    void <init>(int) -> <init>
    void <init>() -> <init>
    java.lang.Long get(java.lang.Object) -> get
    java.lang.Long put(java.lang.Object,java.lang.Long) -> put
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Long remove(java.lang.Object) -> remove
    void clear() -> clear
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.lidroid.xutils.cache.LruDiskCache -> com.lidroid.xutils.cache.LruDiskCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION -> VERSION
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    char CLEAN -> CLEAN
    char UPDATE -> UPDATE
    char DELETE -> DELETE
    char READ -> READ
    char EXPIRY_PREFIX -> EXPIRY_PREFIX
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int valueCount -> valueCount
    long size -> size
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    void <clinit>() -> <clinit>
    void <init>(java.io.File,int,int,long) -> <init>
    com.lidroid.xutils.cache.LruDiskCache open(java.io.File,int,int,long) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    long getExpiryTimestamp(java.lang.String) -> getExpiryTimestamp
    java.io.File getCacheFile(java.lang.String,int) -> getCacheFile
    com.lidroid.xutils.cache.LruDiskCache$Snapshot get(java.lang.String) -> get
    com.lidroid.xutils.cache.LruDiskCache$Snapshot getByDiskKey(java.lang.String) -> getByDiskKey
    com.lidroid.xutils.cache.LruDiskCache$Editor edit(java.lang.String) -> edit
    com.lidroid.xutils.cache.LruDiskCache$Editor editByDiskKey(java.lang.String,long) -> editByDiskKey
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    void completeEdit(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean removeByDiskKey(java.lang.String) -> removeByDiskKey
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void delete() -> delete
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    java.io.Writer access$0(com.lidroid.xutils.cache.LruDiskCache) -> access$0
    void access$1(com.lidroid.xutils.cache.LruDiskCache) -> access$1
    boolean access$2(com.lidroid.xutils.cache.LruDiskCache) -> access$2
    void access$3(com.lidroid.xutils.cache.LruDiskCache) -> access$3
    void access$4(com.lidroid.xutils.cache.LruDiskCache,int) -> access$4
    com.lidroid.xutils.cache.LruDiskCache$Editor access$5(com.lidroid.xutils.cache.LruDiskCache,java.lang.String,long) -> access$5
    java.lang.String access$6(java.io.InputStream) -> access$6
    int access$7(com.lidroid.xutils.cache.LruDiskCache) -> access$7
    java.io.File access$8(com.lidroid.xutils.cache.LruDiskCache) -> access$8
    java.io.OutputStream access$9() -> access$9
    void access$10(com.lidroid.xutils.cache.LruDiskCache,com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$10
    boolean access$11(com.lidroid.xutils.cache.LruDiskCache,java.lang.String) -> access$11
com.lidroid.xutils.cache.LruDiskCache$1 -> com.lidroid.xutils.cache.LruDiskCache$1:
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void <init>(com.lidroid.xutils.cache.LruDiskCache) -> <init>
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.lidroid.xutils.cache.LruDiskCache$2 -> com.lidroid.xutils.cache.LruDiskCache$2:
    void <init>() -> <init>
    void write(int) -> write
com.lidroid.xutils.cache.LruDiskCache$Editor -> com.lidroid.xutils.cache.LruDiskCache$Editor:
    com.lidroid.xutils.cache.LruDiskCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void <init>(com.lidroid.xutils.cache.LruDiskCache,com.lidroid.xutils.cache.LruDiskCache$Entry) -> <init>
    void setEntryExpiryTimestamp(long) -> setEntryExpiryTimestamp
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    void access$0(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$0
    void <init>(com.lidroid.xutils.cache.LruDiskCache,com.lidroid.xutils.cache.LruDiskCache$Entry,com.lidroid.xutils.cache.LruDiskCache$Editor) -> <init>
    com.lidroid.xutils.cache.LruDiskCache$Entry access$2(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$2
    boolean[] access$3(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$3
com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream -> com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream:
    com.lidroid.xutils.cache.LruDiskCache$Editor this$1 -> this$1
    void <init>(com.lidroid.xutils.cache.LruDiskCache$Editor,java.io.OutputStream) -> <init>
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
    void <init>(com.lidroid.xutils.cache.LruDiskCache$Editor,java.io.OutputStream,com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream) -> <init>
com.lidroid.xutils.cache.LruDiskCache$Entry -> com.lidroid.xutils.cache.LruDiskCache$Entry:
    java.lang.String diskKey -> diskKey
    long expiryTimestamp -> expiryTimestamp
    long[] lengths -> lengths
    boolean readable -> readable
    com.lidroid.xutils.cache.LruDiskCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void <init>(com.lidroid.xutils.cache.LruDiskCache,java.lang.String) -> <init>
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[],int) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$0(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$0
    void access$1(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$1
    com.lidroid.xutils.cache.LruDiskCache$Editor access$2(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$2
    java.lang.String access$3(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$3
    void <init>(com.lidroid.xutils.cache.LruDiskCache,java.lang.String,com.lidroid.xutils.cache.LruDiskCache$Entry) -> <init>
    void access$5(com.lidroid.xutils.cache.LruDiskCache$Entry,boolean) -> access$5
    void access$6(com.lidroid.xutils.cache.LruDiskCache$Entry,com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$6
    void access$7(com.lidroid.xutils.cache.LruDiskCache$Entry,java.lang.String[],int) -> access$7
    long[] access$8(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$8
    long access$9(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$9
    long access$10(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$10
    void access$11(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$11
com.lidroid.xutils.cache.LruDiskCache$Snapshot -> com.lidroid.xutils.cache.LruDiskCache$Snapshot:
    java.lang.String diskKey -> diskKey
    long sequenceNumber -> sequenceNumber
    java.io.FileInputStream[] ins -> ins
    long[] lengths -> lengths
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void <init>(com.lidroid.xutils.cache.LruDiskCache,java.lang.String,long,java.io.FileInputStream[],long[]) -> <init>
    com.lidroid.xutils.cache.LruDiskCache$Editor edit() -> edit
    java.io.FileInputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
    void <init>(com.lidroid.xutils.cache.LruDiskCache,java.lang.String,long,java.io.FileInputStream[],long[],com.lidroid.xutils.cache.LruDiskCache$Snapshot) -> <init>
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void <init>(com.lidroid.xutils.cache.LruDiskCache,java.io.InputStream) -> <init>
    void <init>(com.lidroid.xutils.cache.LruDiskCache,java.io.InputStream,int) -> <init>
    void close() -> close
    java.lang.String readLine() -> readLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$0(com.lidroid.xutils.cache.LruDiskCache$StrictLineReader) -> access$0
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1 -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1:
    com.lidroid.xutils.cache.LruDiskCache$StrictLineReader this$1 -> this$1
    void <init>(com.lidroid.xutils.cache.LruDiskCache$StrictLineReader,int) -> <init>
    java.lang.String toString() -> toString
com.lidroid.xutils.cache.LruMemoryCache -> com.lidroid.xutils.cache.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    com.lidroid.xutils.cache.KeyExpiryMap keyExpiryMap -> keyExpiryMap
    void <init>(int) -> <init>
    void setMaxSize(int) -> setMaxSize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put(java.lang.Object,java.lang.Object,long) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    boolean containsKey(java.lang.Object) -> containsKey
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
com.lidroid.xutils.cache.MD5FileNameGenerator -> com.lidroid.xutils.cache.MD5FileNameGenerator:
    void <init>() -> <init>
    java.lang.String generate(java.lang.String) -> generate
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.lidroid.xutils.db.annotation.Check -> com.lidroid.xutils.db.annotation.Check:
    java.lang.String value() -> value
com.lidroid.xutils.db.annotation.Column -> com.lidroid.xutils.db.annotation.Column:
    java.lang.String column() -> column
    java.lang.String defaultValue() -> defaultValue
com.lidroid.xutils.db.annotation.Finder -> com.lidroid.xutils.db.annotation.Finder:
    java.lang.String valueColumn() -> valueColumn
    java.lang.String targetColumn() -> targetColumn
com.lidroid.xutils.db.annotation.Foreign -> com.lidroid.xutils.db.annotation.Foreign:
    java.lang.String column() -> column
    java.lang.String foreign() -> foreign
com.lidroid.xutils.db.annotation.Id -> com.lidroid.xutils.db.annotation.Id:
    java.lang.String column() -> column
com.lidroid.xutils.db.annotation.NoAutoIncrement -> com.lidroid.xutils.db.annotation.NoAutoIncrement:
com.lidroid.xutils.db.annotation.NotNull -> com.lidroid.xutils.db.annotation.NotNull:
com.lidroid.xutils.db.annotation.Table -> com.lidroid.xutils.db.annotation.Table:
    java.lang.String name() -> name
    java.lang.String execAfterTableCreated() -> execAfterTableCreated
com.lidroid.xutils.db.annotation.Transient -> com.lidroid.xutils.db.annotation.Transient:
com.lidroid.xutils.db.annotation.Unique -> com.lidroid.xutils.db.annotation.Unique:
com.lidroid.xutils.db.converter.BooleanColumnConverter -> com.lidroid.xutils.db.converter.BooleanColumnConverter:
    void <init>() -> <init>
    java.lang.Boolean getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Boolean getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Boolean) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteArrayColumnConverter -> com.lidroid.xutils.db.converter.ByteArrayColumnConverter:
    void <init>() -> <init>
    byte[] getFieldValue(android.database.Cursor,int) -> getFieldValue
    byte[] getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(byte[]) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteColumnConverter -> com.lidroid.xutils.db.converter.ByteColumnConverter:
    void <init>() -> <init>
    java.lang.Byte getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Byte getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Byte) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.CharColumnConverter -> com.lidroid.xutils.db.converter.CharColumnConverter:
    void <init>() -> <init>
    java.lang.Character getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Character getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Character) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ColumnConverter -> com.lidroid.xutils.db.converter.ColumnConverter:
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.converter.ColumnConverterFactory -> com.lidroid.xutils.db.converter.ColumnConverterFactory:
    java.util.concurrent.ConcurrentHashMap columnType_columnConverter_map -> columnType_columnConverter_map
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter(java.lang.Class) -> getColumnConverter
    com.lidroid.xutils.db.sqlite.ColumnDbType getDbColumnType(java.lang.Class) -> getDbColumnType
    void registerColumnConverter(java.lang.Class,com.lidroid.xutils.db.converter.ColumnConverter) -> registerColumnConverter
    boolean isSupportColumnConverter(java.lang.Class) -> isSupportColumnConverter
com.lidroid.xutils.db.converter.DateColumnConverter -> com.lidroid.xutils.db.converter.DateColumnConverter:
    void <init>() -> <init>
    java.util.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.util.Date getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.util.Date) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.DoubleColumnConverter -> com.lidroid.xutils.db.converter.DoubleColumnConverter:
    void <init>() -> <init>
    java.lang.Double getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Double getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Double) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.FloatColumnConverter -> com.lidroid.xutils.db.converter.FloatColumnConverter:
    void <init>() -> <init>
    java.lang.Float getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Float getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Float) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.IntegerColumnConverter -> com.lidroid.xutils.db.converter.IntegerColumnConverter:
    void <init>() -> <init>
    java.lang.Integer getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Integer getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Integer) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.LongColumnConverter -> com.lidroid.xutils.db.converter.LongColumnConverter:
    void <init>() -> <init>
    java.lang.Long getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Long getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Long) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ShortColumnConverter -> com.lidroid.xutils.db.converter.ShortColumnConverter:
    void <init>() -> <init>
    java.lang.Short getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Short getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Short) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.SqlDateColumnConverter -> com.lidroid.xutils.db.converter.SqlDateColumnConverter:
    void <init>() -> <init>
    java.sql.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.sql.Date getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.sql.Date) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.StringColumnConverter -> com.lidroid.xutils.db.converter.StringColumnConverter:
    void <init>() -> <init>
    java.lang.String getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.String getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.String) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.sqlite.ColumnDbType -> com.lidroid.xutils.db.sqlite.ColumnDbType:
    com.lidroid.xutils.db.sqlite.ColumnDbType INTEGER -> INTEGER
    com.lidroid.xutils.db.sqlite.ColumnDbType REAL -> REAL
    com.lidroid.xutils.db.sqlite.ColumnDbType TEXT -> TEXT
    com.lidroid.xutils.db.sqlite.ColumnDbType BLOB -> BLOB
    java.lang.String value -> value
    com.lidroid.xutils.db.sqlite.ColumnDbType[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    java.lang.String toString() -> toString
    com.lidroid.xutils.db.sqlite.ColumnDbType[] values() -> values
    com.lidroid.xutils.db.sqlite.ColumnDbType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.db.sqlite.CursorUtils -> com.lidroid.xutils.db.sqlite.CursorUtils:
    void <init>() -> <init>
    java.lang.Object getEntity(com.lidroid.xutils.DbUtils,android.database.Cursor,java.lang.Class,long) -> getEntity
    com.lidroid.xutils.db.table.DbModel getDbModel(android.database.Cursor) -> getDbModel
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache -> com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void setSeq(long) -> setSeq
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence -> com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence:
    long seq -> seq
    java.lang.String FOREIGN_LAZY_LOADER_CLASS_NAME -> FOREIGN_LAZY_LOADER_CLASS_NAME
    java.lang.String FINDER_LAZY_LOADER_CLASS_NAME -> FINDER_LAZY_LOADER_CLASS_NAME
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    long getSeq() -> getSeq
com.lidroid.xutils.db.sqlite.DbModelSelector -> com.lidroid.xutils.db.sqlite.DbModelSelector:
    java.lang.String[] columnExpressions -> columnExpressions
    java.lang.String groupByColumnName -> groupByColumnName
    com.lidroid.xutils.db.sqlite.WhereBuilder having -> having
    com.lidroid.xutils.db.sqlite.Selector selector -> selector
    void <init>(java.lang.Class) -> <init>
    void <init>(com.lidroid.xutils.db.sqlite.Selector,java.lang.String) -> <init>
    void <init>(com.lidroid.xutils.db.sqlite.Selector,java.lang.String[]) -> <init>
    com.lidroid.xutils.db.sqlite.DbModelSelector from(java.lang.Class) -> from
    com.lidroid.xutils.db.sqlite.DbModelSelector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    com.lidroid.xutils.db.sqlite.DbModelSelector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    com.lidroid.xutils.db.sqlite.DbModelSelector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.DbModelSelector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    com.lidroid.xutils.db.sqlite.DbModelSelector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.DbModelSelector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    com.lidroid.xutils.db.sqlite.DbModelSelector having(com.lidroid.xutils.db.sqlite.WhereBuilder) -> having
    com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String) -> orderBy
    com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String,boolean) -> orderBy
    com.lidroid.xutils.db.sqlite.DbModelSelector limit(int) -> limit
    com.lidroid.xutils.db.sqlite.DbModelSelector offset(int) -> offset
    java.lang.Class getEntityType() -> getEntityType
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.FinderLazyLoader -> com.lidroid.xutils.db.sqlite.FinderLazyLoader:
    com.lidroid.xutils.db.table.Finder finderColumn -> finderColumn
    java.lang.Object finderValue -> finderValue
    void <init>(com.lidroid.xutils.db.table.Finder,java.lang.Object) -> <init>
    java.util.List getAllFromDb() -> getAllFromDb
    java.lang.Object getFirstFromDb() -> getFirstFromDb
com.lidroid.xutils.db.sqlite.ForeignLazyLoader -> com.lidroid.xutils.db.sqlite.ForeignLazyLoader:
    com.lidroid.xutils.db.table.Foreign foreignColumn -> foreignColumn
    java.lang.Object columnValue -> columnValue
    void <init>(com.lidroid.xutils.db.table.Foreign,java.lang.Object) -> <init>
    java.util.List getAllFromDb() -> getAllFromDb
    java.lang.Object getFirstFromDb() -> getFirstFromDb
    void setColumnValue(java.lang.Object) -> setColumnValue
    java.lang.Object getColumnValue() -> getColumnValue
com.lidroid.xutils.db.sqlite.Selector -> com.lidroid.xutils.db.sqlite.Selector:
    java.lang.Class entityType -> entityType
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.sqlite.WhereBuilder whereBuilder -> whereBuilder
    java.util.List orderByList -> orderByList
    int limit -> limit
    int offset -> offset
    void <init>(java.lang.Class) -> <init>
    com.lidroid.xutils.db.sqlite.Selector from(java.lang.Class) -> from
    com.lidroid.xutils.db.sqlite.Selector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    com.lidroid.xutils.db.sqlite.Selector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    com.lidroid.xutils.db.sqlite.Selector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.Selector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    com.lidroid.xutils.db.sqlite.Selector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.Selector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String) -> orderBy
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String,boolean) -> orderBy
    com.lidroid.xutils.db.sqlite.Selector limit(int) -> limit
    com.lidroid.xutils.db.sqlite.Selector offset(int) -> offset
    java.lang.String toString() -> toString
    java.lang.Class getEntityType() -> getEntityType
com.lidroid.xutils.db.sqlite.Selector$OrderBy -> com.lidroid.xutils.db.sqlite.Selector$OrderBy:
    java.lang.String columnName -> columnName
    boolean desc -> desc
    com.lidroid.xutils.db.sqlite.Selector this$0 -> this$0
    void <init>(com.lidroid.xutils.db.sqlite.Selector,java.lang.String) -> <init>
    void <init>(com.lidroid.xutils.db.sqlite.Selector,java.lang.String,boolean) -> <init>
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.SqlInfo -> com.lidroid.xutils.db.sqlite.SqlInfo:
    java.lang.String sql -> sql
    java.util.LinkedList bindArgs -> bindArgs
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Object[]) -> <init>
    java.lang.String getSql() -> getSql
    void setSql(java.lang.String) -> setSql
    java.util.LinkedList getBindArgs() -> getBindArgs
    java.lang.Object[] getBindArgsAsArray() -> getBindArgsAsArray
    java.lang.String[] getBindArgsAsStrArray() -> getBindArgsAsStrArray
    void addBindArg(java.lang.Object) -> addBindArg
    void addBindArgWithoutConverter(java.lang.Object) -> addBindArgWithoutConverter
    void addBindArgs(java.lang.Object[]) -> addBindArgs
com.lidroid.xutils.db.sqlite.SqlInfoBuilder -> com.lidroid.xutils.db.sqlite.SqlInfoBuilder:
    void <init>() -> <init>
    com.lidroid.xutils.db.sqlite.SqlInfo buildInsertSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildInsertSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildReplaceSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildReplaceSqlInfo
    java.lang.String buildDeleteSqlByTableName(java.lang.String) -> buildDeleteSqlByTableName
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,java.lang.Object) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,java.lang.String[]) -> buildUpdateSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> buildUpdateSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildCreateTableSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class) -> buildCreateTableSqlInfo
    com.lidroid.xutils.db.table.KeyValue column2KeyValue(java.lang.Object,com.lidroid.xutils.db.table.Column) -> column2KeyValue
    java.util.List entity2KeyValueList(com.lidroid.xutils.DbUtils,java.lang.Object) -> entity2KeyValueList
com.lidroid.xutils.db.sqlite.WhereBuilder -> com.lidroid.xutils.db.sqlite.WhereBuilder:
    java.util.List whereItems -> whereItems
    void <init>() -> <init>
    com.lidroid.xutils.db.sqlite.WhereBuilder b() -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder b(java.lang.String,java.lang.String,java.lang.Object) -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.WhereBuilder or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    int getWhereItemSize() -> getWhereItemSize
    java.lang.String toString() -> toString
    void appendCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> appendCondition
com.lidroid.xutils.db.table.Column -> com.lidroid.xutils.db.table.Column:
    com.lidroid.xutils.db.table.Table table -> table
    int index -> index
    java.lang.String columnName -> columnName
    java.lang.Object defaultValue -> defaultValue
    java.lang.reflect.Method getMethod -> getMethod
    java.lang.reflect.Method setMethod -> setMethod
    java.lang.reflect.Field columnField -> columnField
    com.lidroid.xutils.db.converter.ColumnConverter columnConverter -> columnConverter
    void <init>(java.lang.Class,java.lang.reflect.Field) -> <init>
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    java.lang.Object getFieldValue(java.lang.Object) -> getFieldValue
    com.lidroid.xutils.db.table.Table getTable() -> getTable
    void setTable(com.lidroid.xutils.db.table.Table) -> setTable
    int getIndex() -> getIndex
    java.lang.String getColumnName() -> getColumnName
    java.lang.Object getDefaultValue() -> getDefaultValue
    java.lang.reflect.Field getColumnField() -> getColumnField
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter() -> getColumnConverter
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.ColumnUtils -> com.lidroid.xutils.db.table.ColumnUtils:
    java.util.HashSet DB_PRIMITIVE_TYPES -> DB_PRIMITIVE_TYPES
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    boolean isDbPrimitiveType(java.lang.Class) -> isDbPrimitiveType
    java.lang.reflect.Method getColumnGetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnGetMethod
    java.lang.reflect.Method getColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnSetMethod
    java.lang.String getColumnNameByField(java.lang.reflect.Field) -> getColumnNameByField
    java.lang.String getForeignColumnNameByField(java.lang.reflect.Field) -> getForeignColumnNameByField
    java.lang.String getColumnDefaultValue(java.lang.reflect.Field) -> getColumnDefaultValue
    boolean isTransient(java.lang.reflect.Field) -> isTransient
    boolean isForeign(java.lang.reflect.Field) -> isForeign
    boolean isFinder(java.lang.reflect.Field) -> isFinder
    boolean isUnique(java.lang.reflect.Field) -> isUnique
    boolean isNotNull(java.lang.reflect.Field) -> isNotNull
    java.lang.String getCheck(java.lang.reflect.Field) -> getCheck
    java.lang.Class getForeignEntityType(com.lidroid.xutils.db.table.Foreign) -> getForeignEntityType
    java.lang.Class getFinderTargetEntityType(com.lidroid.xutils.db.table.Finder) -> getFinderTargetEntityType
    java.lang.Object convert2DbColumnValueIfNeeded(java.lang.Object) -> convert2DbColumnValueIfNeeded
    boolean isStartWithIs(java.lang.String) -> isStartWithIs
    java.lang.reflect.Method getBooleanColumnGetMethod(java.lang.Class,java.lang.String) -> getBooleanColumnGetMethod
    java.lang.reflect.Method getBooleanColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getBooleanColumnSetMethod
com.lidroid.xutils.db.table.DbModel -> com.lidroid.xutils.db.table.DbModel:
    java.util.HashMap dataMap -> dataMap
    void <init>() -> <init>
    java.lang.String getString(java.lang.String) -> getString
    int getInt(java.lang.String) -> getInt
    boolean getBoolean(java.lang.String) -> getBoolean
    double getDouble(java.lang.String) -> getDouble
    float getFloat(java.lang.String) -> getFloat
    long getLong(java.lang.String) -> getLong
    java.util.Date getDate(java.lang.String) -> getDate
    java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    void add(java.lang.String,java.lang.String) -> add
    java.util.HashMap getDataMap() -> getDataMap
    boolean isEmpty(java.lang.String) -> isEmpty
com.lidroid.xutils.db.table.Finder -> com.lidroid.xutils.db.table.Finder:
    java.lang.String valueColumnName -> valueColumnName
    java.lang.String targetColumnName -> targetColumnName
    void <init>(java.lang.Class,java.lang.reflect.Field) -> <init>
    java.lang.Class getTargetEntityType() -> getTargetEntityType
    java.lang.String getTargetColumnName() -> getTargetColumnName
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    java.lang.Object getDefaultValue() -> getDefaultValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.Foreign -> com.lidroid.xutils.db.table.Foreign:
    java.lang.String foreignColumnName -> foreignColumnName
    com.lidroid.xutils.db.converter.ColumnConverter foreignColumnConverter -> foreignColumnConverter
    void <init>(java.lang.Class,java.lang.reflect.Field) -> <init>
    java.lang.String getForeignColumnName() -> getForeignColumnName
    java.lang.Class getForeignEntityType() -> getForeignEntityType
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object getDefaultValue() -> getDefaultValue
com.lidroid.xutils.db.table.Id -> com.lidroid.xutils.db.table.Id:
    java.lang.String columnFieldClassName -> columnFieldClassName
    boolean isAutoIncrementChecked -> isAutoIncrementChecked
    boolean isAutoIncrement -> isAutoIncrement
    java.util.HashSet INTEGER_TYPES -> INTEGER_TYPES
    java.util.HashSet AUTO_INCREMENT_TYPES -> AUTO_INCREMENT_TYPES
    void <clinit>() -> <clinit>
    void <init>(java.lang.Class,java.lang.reflect.Field) -> <init>
    boolean isAutoIncrement() -> isAutoIncrement
    void setAutoIncrementId(java.lang.Object,long) -> setAutoIncrementId
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
com.lidroid.xutils.db.table.KeyValue -> com.lidroid.xutils.db.table.KeyValue:
    java.lang.String key -> key
    java.lang.Object value -> value
    void <init>(java.lang.String,java.lang.Object) -> <init>
com.lidroid.xutils.db.table.Table -> com.lidroid.xutils.db.table.Table:
    com.lidroid.xutils.DbUtils db -> db
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.table.Id id -> id
    java.util.HashMap columnMap -> columnMap
    java.util.HashMap finderMap -> finderMap
    java.util.HashMap tableMap -> tableMap
    boolean checkedDatabase -> checkedDatabase
    void <clinit>() -> <clinit>
    void <init>(com.lidroid.xutils.DbUtils,java.lang.Class) -> <init>
    com.lidroid.xutils.db.table.Table get(com.lidroid.xutils.DbUtils,java.lang.Class) -> get
    void remove(com.lidroid.xutils.DbUtils,java.lang.Class) -> remove
    void remove(com.lidroid.xutils.DbUtils,java.lang.String) -> remove
    boolean isCheckedDatabase() -> isCheckedDatabase
    void setCheckedDatabase(boolean) -> setCheckedDatabase
com.lidroid.xutils.db.table.TableUtils -> com.lidroid.xutils.db.table.TableUtils:
    java.util.concurrent.ConcurrentHashMap entityColumnsMap -> entityColumnsMap
    java.util.concurrent.ConcurrentHashMap entityIdMap -> entityIdMap
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.String getTableName(java.lang.Class) -> getTableName
    java.lang.String getExecAfterTableCreated(java.lang.Class) -> getExecAfterTableCreated
    java.util.HashMap getColumnMap(java.lang.Class) -> getColumnMap
    void addColumns2Map(java.lang.Class,java.lang.String,java.util.HashMap) -> addColumns2Map
    com.lidroid.xutils.db.table.Column getColumnOrId(java.lang.Class,java.lang.String) -> getColumnOrId
    com.lidroid.xutils.db.table.Id getId(java.lang.Class) -> getId
    java.lang.String getPrimaryKeyFieldName(java.lang.Class) -> getPrimaryKeyFieldName
    java.lang.String getPrimaryKeyColumnName(java.lang.Class) -> getPrimaryKeyColumnName
com.lidroid.xutils.exception.BaseException -> com.lidroid.xutils.exception.BaseException:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.Throwable) -> <init>
com.lidroid.xutils.exception.DbException -> com.lidroid.xutils.exception.DbException:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.Throwable) -> <init>
com.lidroid.xutils.exception.HttpException -> com.lidroid.xutils.exception.HttpException:
    long serialVersionUID -> serialVersionUID
    int exceptionCode -> exceptionCode
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(int) -> <init>
    void <init>(int,java.lang.String) -> <init>
    void <init>(int,java.lang.String,java.lang.Throwable) -> <init>
    void <init>(int,java.lang.Throwable) -> <init>
    int getExceptionCode() -> getExceptionCode
com.lidroid.xutils.http.HttpCache -> com.lidroid.xutils.http.HttpCache:
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    long DEFAULT_EXPIRY_TIME -> DEFAULT_EXPIRY_TIME
    int cacheSize -> cacheSize
    long defaultExpiryTime -> defaultExpiryTime
    java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map -> httpMethod_enabled_map
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void <init>(int,long) -> <init>
    void setCacheSize(int) -> setCacheSize
    void setDefaultExpiryTime(long) -> setDefaultExpiryTime
    long getDefaultExpiryTime() -> getDefaultExpiryTime
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.lang.String,long) -> put
    java.lang.String get(java.lang.String) -> get
    void clear() -> clear
    boolean isEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod) -> isEnabled
    boolean isEnabled(java.lang.String) -> isEnabled
    void setEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,boolean) -> setEnabled
com.lidroid.xutils.http.HttpCache$1 -> com.lidroid.xutils.http.HttpCache$1:
    com.lidroid.xutils.http.HttpCache this$0 -> this$0
    void <init>(com.lidroid.xutils.http.HttpCache,int) -> <init>
    int sizeOf(java.lang.String,java.lang.String) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.http.HttpHandler -> com.lidroid.xutils.http.HttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    org.apache.http.client.methods.HttpRequestBase request -> request
    boolean isUploading -> isUploading
    com.lidroid.xutils.http.callback.RequestCallBack callback -> callback
    int retriedCount -> retriedCount
    java.lang.String fileSavePath -> fileSavePath
    boolean isDownloadingFile -> isDownloadingFile
    boolean autoResume -> autoResume
    boolean autoRename -> autoRename
    java.lang.String charset -> charset
    com.lidroid.xutils.http.HttpHandler$State state -> state
    long expiry -> expiry
    int UPDATE_START -> UPDATE_START
    int UPDATE_LOADING -> UPDATE_LOADING
    int UPDATE_FAILURE -> UPDATE_FAILURE
    int UPDATE_SUCCESS -> UPDATE_SUCCESS
    long lastUpdateTime -> lastUpdateTime
    com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler -> notUseApacheRedirectHandler
    void <clinit>() -> <clinit>
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    void <init>(org.apache.http.impl.client.AbstractHttpClient,org.apache.http.protocol.HttpContext,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> <init>
    com.lidroid.xutils.http.HttpHandler$State getState() -> getState
    void setExpiry(long) -> setExpiry
    void setRequestCallBack(com.lidroid.xutils.http.callback.RequestCallBack) -> setRequestCallBack
    com.lidroid.xutils.http.callback.RequestCallBack getRequestCallBack() -> getRequestCallBack
    com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse) -> handleResponse
    void cancel() -> cancel
    boolean updateProgress(long,long,boolean) -> updateProgress
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler -> com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler:
    void <init>() -> <init>
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
    void <init>(com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler) -> <init>
com.lidroid.xutils.http.HttpHandler$State -> com.lidroid.xutils.http.HttpHandler$State:
    com.lidroid.xutils.http.HttpHandler$State WAITING -> WAITING
    com.lidroid.xutils.http.HttpHandler$State STARTED -> STARTED
    com.lidroid.xutils.http.HttpHandler$State LOADING -> LOADING
    com.lidroid.xutils.http.HttpHandler$State FAILURE -> FAILURE
    com.lidroid.xutils.http.HttpHandler$State CANCELLED -> CANCELLED
    com.lidroid.xutils.http.HttpHandler$State SUCCESS -> SUCCESS
    int value -> value
    com.lidroid.xutils.http.HttpHandler$State[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int,int) -> <init>
    com.lidroid.xutils.http.HttpHandler$State valueOf(int) -> valueOf
    int value() -> value
    com.lidroid.xutils.http.HttpHandler$State[] values() -> values
    com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.RequestParams -> com.lidroid.xutils.http.RequestParams:
    java.lang.String charset -> charset
    java.util.List headers -> headers
    java.util.List queryStringParams -> queryStringParams
    org.apache.http.HttpEntity bodyEntity -> bodyEntity
    java.util.List bodyParams -> bodyParams
    java.util.HashMap fileParams -> fileParams
    com.lidroid.xutils.task.Priority priority -> priority
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    java.lang.String getCharset() -> getCharset
    void setContentType(java.lang.String) -> setContentType
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void addHeaders(java.util.List) -> addHeaders
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(java.util.List) -> setHeaders
    void addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    void addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    void addQueryStringParameter(java.util.List) -> addQueryStringParameter
    void addBodyParameter(java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(org.apache.http.NameValuePair) -> addBodyParameter
    void addBodyParameter(java.util.List) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String,java.lang.String) -> addBodyParameter
    void setBodyEntity(org.apache.http.HttpEntity) -> setBodyEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
    java.util.List getQueryStringParams() -> getQueryStringParams
    java.util.List getHeaders() -> getHeaders
com.lidroid.xutils.http.RequestParams$HeaderItem -> com.lidroid.xutils.http.RequestParams$HeaderItem:
    boolean overwrite -> overwrite
    org.apache.http.Header header -> header
    com.lidroid.xutils.http.RequestParams this$0 -> this$0
    void <init>(com.lidroid.xutils.http.RequestParams,org.apache.http.Header) -> <init>
    void <init>(com.lidroid.xutils.http.RequestParams,org.apache.http.Header,boolean) -> <init>
    void <init>(com.lidroid.xutils.http.RequestParams,java.lang.String,java.lang.String) -> <init>
    void <init>(com.lidroid.xutils.http.RequestParams,java.lang.String,java.lang.String,boolean) -> <init>
com.lidroid.xutils.http.ResponseInfo -> com.lidroid.xutils.http.ResponseInfo:
    org.apache.http.HttpResponse response -> response
    java.lang.Object result -> result
    boolean resultFormCache -> resultFormCache
    java.util.Locale locale -> locale
    int statusCode -> statusCode
    org.apache.http.ProtocolVersion protocolVersion -> protocolVersion
    java.lang.String reasonPhrase -> reasonPhrase
    long contentLength -> contentLength
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    void <init>(org.apache.http.HttpResponse,java.lang.Object,boolean) -> <init>
com.lidroid.xutils.http.ResponseStream -> com.lidroid.xutils.http.ResponseStream:
    org.apache.http.HttpResponse baseResponse -> baseResponse
    java.io.InputStream baseStream -> baseStream
    java.lang.String charset -> charset
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    long expiry -> expiry
    java.lang.String _directResult -> _directResult
    void <init>(org.apache.http.HttpResponse,java.lang.String,long) -> <init>
    void <init>(org.apache.http.HttpResponse,java.lang.String,java.lang.String,long) -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getRequestUrl() -> getRequestUrl
    java.lang.String getRequestMethod() -> getRequestMethod
    void setRequestMethod(java.lang.String) -> setRequestMethod
    java.io.InputStream getBaseStream() -> getBaseStream
    org.apache.http.HttpResponse getBaseResponse() -> getBaseResponse
    int getStatusCode() -> getStatusCode
    java.util.Locale getLocale() -> getLocale
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String readString() -> readString
    void readFile(java.lang.String) -> readFile
    int read() -> read
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.SyncHttpHandler -> com.lidroid.xutils.http.SyncHttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    java.lang.String charset -> charset
    int retriedTimes -> retriedTimes
    long expiry -> expiry
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    void <init>(org.apache.http.impl.client.AbstractHttpClient,org.apache.http.protocol.HttpContext,java.lang.String) -> <init>
    void setExpiry(long) -> setExpiry
    com.lidroid.xutils.http.ResponseStream sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    com.lidroid.xutils.http.ResponseStream handleResponse(org.apache.http.HttpResponse) -> handleResponse
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler -> com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler:
    void <init>() -> <init>
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.FileDownloadHandler -> com.lidroid.xutils.http.callback.FileDownloadHandler:
    void <init>() -> <init>
    java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String) -> handleEntity
com.lidroid.xutils.http.callback.HttpRedirectHandler -> com.lidroid.xutils.http.callback.HttpRedirectHandler:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.RequestCallBack -> com.lidroid.xutils.http.callback.RequestCallBack:
    int DEFAULT_RATE -> DEFAULT_RATE
    int MIN_RATE -> MIN_RATE
    java.lang.String requestUrl -> requestUrl
    java.lang.Object userTag -> userTag
    int rate -> rate
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(java.lang.Object) -> <init>
    void <init>(int,java.lang.Object) -> <init>
    int getRate() -> getRate
    void setRate(int) -> setRate
    java.lang.Object getUserTag() -> getUserTag
    void setUserTag(java.lang.Object) -> setUserTag
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void onStart() -> onStart
    void onCancelled() -> onCancelled
    void onLoading(long,long,boolean) -> onLoading
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
com.lidroid.xutils.http.callback.RequestCallBackHandler -> com.lidroid.xutils.http.callback.RequestCallBackHandler:
    boolean updateProgress(long,long,boolean) -> updateProgress
com.lidroid.xutils.http.callback.StringDownloadHandler -> com.lidroid.xutils.http.callback.StringDownloadHandler:
    void <init>() -> <init>
    java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String) -> handleEntity
com.lidroid.xutils.http.client.DefaultSSLSocketFactory -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.security.KeyStore trustStore -> trustStore
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance -> instance
    void <clinit>() -> <clinit>
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory() -> getSocketFactory
    void <init>() -> <init>
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1 -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1:
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0 -> this$0
    void <init>(com.lidroid.xutils.http.client.DefaultSSLSocketFactory) -> <init>
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.http.client.HttpRequest -> com.lidroid.xutils.http.client.HttpRequest:
    org.apache.http.HttpEntity entity -> entity
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod method -> method
    com.lidroid.xutils.http.client.util.URIBuilder uriBuilder -> uriBuilder
    java.nio.charset.Charset uriCharset -> uriCharset
    void <init>(com.lidroid.xutils.http.client.HttpRequest$HttpMethod) -> <init>
    void <init>(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String) -> <init>
    void <init>(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.net.URI) -> <init>
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List) -> addQueryStringParams
    void setRequestParams(com.lidroid.xutils.http.RequestParams) -> setRequestParams
    void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setRequestParams
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    void setURI(java.lang.String) -> setURI
    java.lang.String getMethod() -> getMethod
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.HttpRequest$HttpMethod -> com.lidroid.xutils.http.client.HttpRequest$HttpMethod:
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET -> GET
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST -> POST
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT -> PUT
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD -> HEAD
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE -> MOVE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY -> COPY
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE -> DELETE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS -> OPTIONS
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE -> TRACE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT -> CONNECT
    java.lang.String value -> value
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int,java.lang.String) -> <init>
    java.lang.String toString() -> toString
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values() -> values
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.RetryHandler -> com.lidroid.xutils.http.client.RetryHandler:
    int RETRY_SLEEP_INTERVAL -> RETRY_SLEEP_INTERVAL
    java.util.HashSet exceptionWhiteList -> exceptionWhiteList
    java.util.HashSet exceptionBlackList -> exceptionBlackList
    int maxRetries -> maxRetries
    void <clinit>() -> <clinit>
    void <init>(int) -> <init>
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.lidroid.xutils.http.client.entity.BodyParamsEntity -> com.lidroid.xutils.http.client.entity.BodyParamsEntity:
    byte[] content -> content
    boolean dirty -> dirty
    java.lang.String charset -> charset
    java.util.List params -> params
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.util.List) -> <init>
    void <init>(java.util.List,java.lang.String) -> <init>
    com.lidroid.xutils.http.client.entity.BodyParamsEntity addParameter(java.lang.String,java.lang.String) -> addParameter
    com.lidroid.xutils.http.client.entity.BodyParamsEntity addParams(java.util.List) -> addParams
    void refreshContent() -> refreshContent
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.entity.DecompressingEntity -> com.lidroid.xutils.http.client.entity.DecompressingEntity:
    java.io.InputStream content -> content
    long uncompressedLength -> uncompressedLength
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    void <init>(org.apache.http.HttpEntity) -> <init>
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    java.io.InputStream getDecompressingStream() -> getDecompressingStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.FileUploadEntity -> com.lidroid.xutils.http.client.entity.FileUploadEntity:
    long fileSize -> fileSize
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    void <init>(java.io.File,java.lang.String) -> <init>
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity -> com.lidroid.xutils.http.client.entity.GZipDecompressingEntity:
    void <init>(org.apache.http.HttpEntity) -> <init>
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity -> com.lidroid.xutils.http.client.entity.InputStreamUploadEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    long length -> length
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    void <init>(java.io.InputStream,long) -> <init>
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.UploadEntity -> com.lidroid.xutils.http.client.entity.UploadEntity:
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.multipart.FormBodyPart -> com.lidroid.xutils.http.client.multipart.FormBodyPart:
    java.lang.String name -> name
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header -> header
    com.lidroid.xutils.http.client.multipart.content.ContentBody body -> body
    void <init>(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> <init>
    void <init>(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody,java.lang.String) -> <init>
    java.lang.String getName() -> getName
    com.lidroid.xutils.http.client.multipart.content.ContentBody getBody() -> getBody
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentDisposition
    void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentType
    void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateTransferEncoding
com.lidroid.xutils.http.client.multipart.HttpMultipart -> com.lidroid.xutils.http.client.multipart.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode -> mode
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode -> $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
    void <clinit>() -> <clinit>
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream) -> writeField
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    void <init>(java.lang.String,java.nio.charset.Charset,java.lang.String,com.lidroid.xutils.http.client.multipart.HttpMultipartMode) -> <init>
    void <init>(java.lang.String,java.nio.charset.Charset,java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void setSubType(java.lang.String) -> setSubType
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> writeTo
    long getTotalLength() -> getTotalLength
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode() -> $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
com.lidroid.xutils.http.client.multipart.HttpMultipartMode -> com.lidroid.xutils.http.client.multipart.HttpMultipartMode:
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT -> STRICT
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values() -> values
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.multipart.MIME -> com.lidroid.xutils.http.client.multipart.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    void <clinit>() -> <clinit>
    void <init>() -> <init>
com.lidroid.xutils.http.client.multipart.MinimalField -> com.lidroid.xutils.http.client.multipart.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader -> com.lidroid.xutils.http.client.multipart.MinimalFieldHeader:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void <init>() -> <init>
    void addField(com.lidroid.xutils.http.client.multipart.MinimalField) -> addField
    java.util.List getFields() -> getFields
    com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(com.lidroid.xutils.http.client.multipart.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MultipartEntity -> com.lidroid.xutils.http.client.multipart.MultipartEntity:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    com.lidroid.xutils.http.client.multipart.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String boundary -> boundary
    java.nio.charset.Charset charset -> charset
    java.lang.String multipartSubtype -> multipartSubtype
    void <clinit>() -> <clinit>
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    void <init>(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.lang.String,java.nio.charset.Charset) -> <init>
    void <init>(com.lidroid.xutils.http.client.multipart.HttpMultipartMode) -> <init>
    void <init>() -> <init>
    void setMultipartSubtype(java.lang.String) -> setMultipartSubtype
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addPart
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> addPart
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody,java.lang.String) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo -> com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT -> DEFAULT
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    long totalLength -> totalLength
    long pos -> pos
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    boolean doCallBack(boolean) -> doCallBack
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody -> com.lidroid.xutils.http.client.multipart.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    void <init>(java.lang.String) -> <init>
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody -> com.lidroid.xutils.http.client.multipart.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    void <init>(byte[],java.lang.String,java.lang.String) -> <init>
    void <init>(byte[],java.lang.String) -> <init>
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.ContentBody -> com.lidroid.xutils.http.client.multipart.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor -> com.lidroid.xutils.http.client.multipart.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.FileBody -> com.lidroid.xutils.http.client.multipart.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    void <init>(java.io.File,java.lang.String,java.lang.String,java.lang.String) -> <init>
    void <init>(java.io.File,java.lang.String,java.lang.String) -> <init>
    void <init>(java.io.File,java.lang.String) -> <init>
    void <init>(java.io.File) -> <init>
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
com.lidroid.xutils.http.client.multipart.content.InputStreamBody -> com.lidroid.xutils.http.client.multipart.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    long length -> length
    void <init>(java.io.InputStream,long,java.lang.String,java.lang.String) -> <init>
    void <init>(java.io.InputStream,long,java.lang.String) -> <init>
    void <init>(java.io.InputStream,long) -> <init>
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.multipart.content.StringBody -> com.lidroid.xutils.http.client.multipart.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String) -> create
    void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset) -> <init>
    void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    void <init>(java.lang.String) -> <init>
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.util.URIBuilder -> com.lidroid.xutils.http.client.util.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String encodedSchemeSpecificPart -> encodedSchemeSpecificPart
    java.lang.String encodedAuthority -> encodedAuthority
    java.lang.String userInfo -> userInfo
    java.lang.String encodedUserInfo -> encodedUserInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.lang.String encodedPath -> encodedPath
    java.lang.String encodedQuery -> encodedQuery
    java.util.List queryParams -> queryParams
    java.lang.String fragment -> fragment
    java.lang.String encodedFragment -> encodedFragment
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.net.URI) -> <init>
    void digestURI(java.net.URI) -> digestURI
    java.util.List parseQuery(java.lang.String) -> parseQuery
    java.net.URI build(java.nio.charset.Charset) -> build
    java.lang.String buildString(java.nio.charset.Charset) -> buildString
    java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset) -> encodeUserInfo
    java.lang.String encodePath(java.lang.String,java.nio.charset.Charset) -> encodePath
    java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset) -> encodeQuery
    java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset) -> encodeFragment
    com.lidroid.xutils.http.client.util.URIBuilder setScheme(java.lang.String) -> setScheme
    com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    com.lidroid.xutils.http.client.util.URIBuilder setHost(java.lang.String) -> setHost
    com.lidroid.xutils.http.client.util.URIBuilder setPort(int) -> setPort
    com.lidroid.xutils.http.client.util.URIBuilder setPath(java.lang.String) -> setPath
    com.lidroid.xutils.http.client.util.URIBuilder setQuery(java.lang.String) -> setQuery
    com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    com.lidroid.xutils.http.client.util.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    com.lidroid.xutils.http.client.util.URIBuilder setFragment(java.lang.String) -> setFragment
    java.lang.String getScheme() -> getScheme
    java.lang.String getUserInfo() -> getUserInfo
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    java.util.List getQueryParams() -> getQueryParams
    java.lang.String getFragment() -> getFragment
    java.lang.String normalizePath(java.lang.String) -> normalizePath
com.lidroid.xutils.http.client.util.URLEncodedUtils -> com.lidroid.xutils.http.client.util.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] DELIM -> DELIM
    java.util.BitSet UNRESERVED -> UNRESERVED
    java.util.BitSet PUNCT -> PUNCT
    java.util.BitSet USERINFO -> USERINFO
    java.util.BitSet PATHSAFE -> PATHSAFE
    java.util.BitSet FRAGMENT -> FRAGMENT
    java.util.BitSet RESERVED -> RESERVED
    java.util.BitSet URLENCODER -> URLENCODER
    int RADIX -> RADIX
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    java.util.List parse(java.net.URI) -> parse
    void parse(java.util.List,java.util.Scanner) -> parse
    java.util.List parse(java.lang.String) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlencode
    java.lang.String urldecode(java.lang.String,java.nio.charset.Charset,boolean) -> urldecode
    java.lang.String decodeFormFields(java.lang.String,java.lang.String) -> decodeFormFields
    java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> encodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> encFragment
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
com.lidroid.xutils.task.Node -> com.lidroid.xutils.task.Node:
    boolean valueAsT -> valueAsT
    com.lidroid.xutils.task.PriorityObject value -> value
    com.lidroid.xutils.task.Node next -> next
    void <init>(java.lang.Object) -> <init>
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
com.lidroid.xutils.task.Priority -> com.lidroid.xutils.task.Priority:
    com.lidroid.xutils.task.Priority UI_TOP -> UI_TOP
    com.lidroid.xutils.task.Priority UI_NORMAL -> UI_NORMAL
    com.lidroid.xutils.task.Priority UI_LOW -> UI_LOW
    com.lidroid.xutils.task.Priority DEFAULT -> DEFAULT
    com.lidroid.xutils.task.Priority BG_TOP -> BG_TOP
    com.lidroid.xutils.task.Priority BG_NORMAL -> BG_NORMAL
    com.lidroid.xutils.task.Priority BG_LOW -> BG_LOW
    com.lidroid.xutils.task.Priority[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.lidroid.xutils.task.Priority[] values() -> values
    com.lidroid.xutils.task.Priority valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.task.PriorityAsyncTask -> com.lidroid.xutils.task.PriorityAsyncTask:
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    boolean mExecuteInvoked -> mExecuteInvoked
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> mCancelled
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    com.lidroid.xutils.task.Priority priority -> priority
    void <clinit>() -> <clinit>
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    void <init>() -> <init>
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    com.lidroid.xutils.task.PriorityAsyncTask execute(java.lang.Object[]) -> execute
    com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void execute(java.lang.Runnable,com.lidroid.xutils.task.Priority) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    void access$0(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$0
    java.util.concurrent.atomic.AtomicBoolean access$1(com.lidroid.xutils.task.PriorityAsyncTask) -> access$1
    java.lang.Object access$2(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$2
    void access$3(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$3
com.lidroid.xutils.task.PriorityAsyncTask$1 -> com.lidroid.xutils.task.PriorityAsyncTask$1:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    void <init>(com.lidroid.xutils.task.PriorityAsyncTask) -> <init>
    java.lang.Object call() -> call
com.lidroid.xutils.task.PriorityAsyncTask$2 -> com.lidroid.xutils.task.PriorityAsyncTask$2:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    void <init>(com.lidroid.xutils.task.PriorityAsyncTask,java.util.concurrent.Callable) -> <init>
    void done() -> done
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult -> com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult:
    com.lidroid.xutils.task.PriorityAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
    void <init>(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object[]) -> <init>
com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler -> com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler:
    void <init>() -> <init>
    void handleMessage(android.os.Message) -> handleMessage
    void <init>(com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler) -> <init>
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable -> com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
    void <init>() -> <init>
    void <init>(com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable) -> <init>
com.lidroid.xutils.task.PriorityExecutor -> com.lidroid.xutils.task.PriorityExecutor:
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> mPoolWorkQueue
    java.util.concurrent.ThreadPoolExecutor mThreadPoolExecutor -> mThreadPoolExecutor
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void <init>(int) -> <init>
    int getPoolSize() -> getPoolSize
    void setPoolSize(int) -> setPoolSize
    boolean isBusy() -> isBusy
    void execute(java.lang.Runnable) -> execute
com.lidroid.xutils.task.PriorityExecutor$1 -> com.lidroid.xutils.task.PriorityExecutor$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    void <init>() -> <init>
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.lidroid.xutils.task.PriorityObject -> com.lidroid.xutils.task.PriorityObject:
    com.lidroid.xutils.task.Priority priority -> priority
    java.lang.Object obj -> obj
    void <init>(com.lidroid.xutils.task.Priority,java.lang.Object) -> <init>
com.lidroid.xutils.task.PriorityObjectBlockingQueue -> com.lidroid.xutils.task.PriorityObjectBlockingQueue:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    java.util.concurrent.atomic.AtomicInteger count -> count
    com.lidroid.xutils.task.Node head -> head
    com.lidroid.xutils.task.Node last -> last
    java.util.concurrent.locks.ReentrantLock takeLock -> takeLock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.ReentrantLock putLock -> putLock
    java.util.concurrent.locks.Condition notFull -> notFull
    void signalNotEmpty() -> signalNotEmpty
    void signalNotFull() -> signalNotFull
    java.lang.Object opQueue(com.lidroid.xutils.task.Node) -> opQueue
    void _enqueue(com.lidroid.xutils.task.Node) -> _enqueue
    java.lang.Object _dequeue() -> _dequeue
    void fullyLock() -> fullyLock
    void fullyUnlock() -> fullyUnlock
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(java.util.Collection) -> <init>
    int size() -> size
    int remainingCapacity() -> remainingCapacity
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    boolean offer(java.lang.Object) -> offer
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    void unlink(com.lidroid.xutils.task.Node,com.lidroid.xutils.task.Node) -> unlink
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void clear() -> clear
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    java.util.Iterator iterator() -> iterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr -> com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr:
    com.lidroid.xutils.task.Node current -> current
    com.lidroid.xutils.task.Node lastRet -> lastRet
    java.lang.Object currentElement -> currentElement
    com.lidroid.xutils.task.PriorityObjectBlockingQueue this$0 -> this$0
    void <init>(com.lidroid.xutils.task.PriorityObjectBlockingQueue) -> <init>
    boolean hasNext() -> hasNext
    com.lidroid.xutils.task.Node nextNode(com.lidroid.xutils.task.Node) -> nextNode
    java.lang.Object next() -> next
    void remove() -> remove
com.lidroid.xutils.task.PriorityRunnable -> com.lidroid.xutils.task.PriorityRunnable:
    void <init>(com.lidroid.xutils.task.Priority,java.lang.Runnable) -> <init>
    void run() -> run
com.lidroid.xutils.task.TaskHandler -> com.lidroid.xutils.task.TaskHandler:
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
com.lidroid.xutils.util.CharsetUtils -> com.lidroid.xutils.util.CharsetUtils:
    java.lang.String DEFAULT_ENCODING_CHARSET -> DEFAULT_ENCODING_CHARSET
    java.util.List SUPPORT_CHARSET -> SUPPORT_CHARSET
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.String toCharset(java.lang.String,java.lang.String,int) -> toCharset
    java.lang.String getEncoding(java.lang.String,int) -> getEncoding
    boolean isCharset(java.lang.String,java.lang.String,int) -> isCharset
com.lidroid.xutils.util.DoubleKeyValueMap -> com.lidroid.xutils.util.DoubleKeyValueMap:
    java.util.concurrent.ConcurrentHashMap k1_k2V_map -> k1_k2V_map
    void <init>() -> <init>
    void put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    java.util.Set getFirstKeys() -> getFirstKeys
    java.util.concurrent.ConcurrentHashMap get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.util.Collection getAllValues(java.lang.Object) -> getAllValues
    java.util.Collection getAllValues() -> getAllValues
    boolean containsKey(java.lang.Object,java.lang.Object) -> containsKey
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    void remove(java.lang.Object) -> remove
    void remove(java.lang.Object,java.lang.Object) -> remove
    void clear() -> clear
com.lidroid.xutils.util.IOUtils -> com.lidroid.xutils.util.IOUtils:
    void <init>() -> <init>
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeQuietly(android.database.Cursor) -> closeQuietly
com.lidroid.xutils.util.LogUtils -> com.lidroid.xutils.util.LogUtils:
    java.lang.String customTagPrefix -> customTagPrefix
    boolean allowD -> allowD
    boolean allowE -> allowE
    boolean allowI -> allowI
    boolean allowV -> allowV
    boolean allowW -> allowW
    boolean allowWtf -> allowWtf
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> customLogger
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.String generateTag(java.lang.StackTraceElement) -> generateTag
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.Throwable) -> w
    void wtf(java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.Throwable) -> wtf
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.lidroid.xutils.util.LogUtils$CustomLogger:
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void wtf(java.lang.String,java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
com.lidroid.xutils.util.MimeTypeUtils -> com.lidroid.xutils.util.MimeTypeUtils:
    void <init>() -> <init>
    java.lang.String getMimeType(java.lang.String) -> getMimeType
com.lidroid.xutils.util.OtherUtils -> com.lidroid.xutils.util.OtherUtils:
    int STRING_BUFFER_LENGTH -> STRING_BUFFER_LENGTH
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> sslSocketFactory
    void <init>() -> <init>
    java.lang.String getUserAgent(android.content.Context) -> getUserAgent
    java.lang.String getDiskCacheDir(android.content.Context,java.lang.String) -> getDiskCacheDir
    long getAvailableSpace(java.io.File) -> getAvailableSpace
    boolean isSupportRange(org.apache.http.HttpResponse) -> isSupportRange
    java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse) -> getFileNameFromHttpResponse
    java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase) -> getCharsetFromHttpRequest
    long sizeOfString(java.lang.String,java.lang.String) -> sizeOfString
    java.lang.String getSubString(java.lang.String,int,int) -> getSubString
    java.lang.StackTraceElement getCurrentStackTraceElement() -> getCurrentStackTraceElement
    java.lang.StackTraceElement getCallerStackTraceElement() -> getCallerStackTraceElement
    void trustAllHttpsURLConnection() -> trustAllHttpsURLConnection
com.lidroid.xutils.util.OtherUtils$1 -> com.lidroid.xutils.util.OtherUtils$1:
    void <init>() -> <init>
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.util.PreferencesCookieStore -> com.lidroid.xutils.util.PreferencesCookieStore:
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void <init>(android.content.Context) -> <init>
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    org.apache.http.cookie.Cookie getCookie(java.lang.String) -> getCookie
    java.lang.String encodeCookie(com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie -> com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    com.lidroid.xutils.util.PreferencesCookieStore this$0 -> this$0
    void <init>(com.lidroid.xutils.util.PreferencesCookieStore,org.apache.http.cookie.Cookie) -> <init>
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.view.EventListenerManager -> com.lidroid.xutils.view.EventListenerManager:
    com.lidroid.xutils.util.DoubleKeyValueMap listenerCache -> listenerCache
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void addEventMethod(com.lidroid.xutils.view.ViewFinder,com.lidroid.xutils.view.ViewInjectInfo,java.lang.annotation.Annotation,java.lang.Object,java.lang.reflect.Method) -> addEventMethod
com.lidroid.xutils.view.EventListenerManager$DynamicHandler -> com.lidroid.xutils.view.EventListenerManager$DynamicHandler:
    java.lang.ref.WeakReference handlerRef -> handlerRef
    java.util.HashMap methodMap -> methodMap
    void <init>(java.lang.Object) -> <init>
    void addMethod(java.lang.String,java.lang.reflect.Method) -> addMethod
    java.lang.Object getHandler() -> getHandler
    void setHandler(java.lang.Object) -> setHandler
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.lidroid.xutils.view.ResLoader -> com.lidroid.xutils.view.ResLoader:
    int[] $SWITCH_TABLE$com$lidroid$xutils$view$ResType -> $SWITCH_TABLE$com$lidroid$xutils$view$ResType
    void <init>() -> <init>
    java.lang.Object loadRes(com.lidroid.xutils.view.ResType,android.content.Context,int) -> loadRes
    int[] $SWITCH_TABLE$com$lidroid$xutils$view$ResType() -> $SWITCH_TABLE$com$lidroid$xutils$view$ResType
com.lidroid.xutils.view.ResType -> com.lidroid.xutils.view.ResType:
    com.lidroid.xutils.view.ResType Animation -> Animation
    com.lidroid.xutils.view.ResType Boolean -> Boolean
    com.lidroid.xutils.view.ResType Color -> Color
    com.lidroid.xutils.view.ResType ColorStateList -> ColorStateList
    com.lidroid.xutils.view.ResType Dimension -> Dimension
    com.lidroid.xutils.view.ResType DimensionPixelOffset -> DimensionPixelOffset
    com.lidroid.xutils.view.ResType DimensionPixelSize -> DimensionPixelSize
    com.lidroid.xutils.view.ResType Drawable -> Drawable
    com.lidroid.xutils.view.ResType Integer -> Integer
    com.lidroid.xutils.view.ResType IntArray -> IntArray
    com.lidroid.xutils.view.ResType Movie -> Movie
    com.lidroid.xutils.view.ResType String -> String
    com.lidroid.xutils.view.ResType StringArray -> StringArray
    com.lidroid.xutils.view.ResType Text -> Text
    com.lidroid.xutils.view.ResType TextArray -> TextArray
    com.lidroid.xutils.view.ResType Xml -> Xml
    com.lidroid.xutils.view.ResType[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.lidroid.xutils.view.ResType[] values() -> values
    com.lidroid.xutils.view.ResType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.view.ViewFinder -> com.lidroid.xutils.view.ViewFinder:
    android.view.View view -> view
    android.app.Activity activity -> activity
    android.preference.PreferenceGroup preferenceGroup -> preferenceGroup
    android.preference.PreferenceActivity preferenceActivity -> preferenceActivity
    void <init>(android.view.View) -> <init>
    void <init>(android.app.Activity) -> <init>
    void <init>(android.preference.PreferenceGroup) -> <init>
    void <init>(android.preference.PreferenceActivity) -> <init>
    android.view.View findViewById(int) -> findViewById
    android.view.View findViewByInfo(com.lidroid.xutils.view.ViewInjectInfo) -> findViewByInfo
    android.view.View findViewById(int,int) -> findViewById
    android.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    android.content.Context getContext() -> getContext
com.lidroid.xutils.view.ViewInjectInfo -> com.lidroid.xutils.view.ViewInjectInfo:
    java.lang.Object value -> value
    int parentId -> parentId
    void <init>() -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lidroid.xutils.view.annotation.ContentView -> com.lidroid.xutils.view.annotation.ContentView:
    int value() -> value
com.lidroid.xutils.view.annotation.PreferenceInject -> com.lidroid.xutils.view.annotation.PreferenceInject:
    java.lang.String value() -> value
com.lidroid.xutils.view.annotation.ResInject -> com.lidroid.xutils.view.annotation.ResInject:
    int id() -> id
    com.lidroid.xutils.view.ResType type() -> type
com.lidroid.xutils.view.annotation.ViewInject -> com.lidroid.xutils.view.annotation.ViewInject:
    int value() -> value
    int parentId() -> parentId
com.lidroid.xutils.view.annotation.event.EventBase -> com.lidroid.xutils.view.annotation.event.EventBase:
    java.lang.Class listenerType() -> listenerType
    java.lang.String listenerSetter() -> listenerSetter
    java.lang.String methodName() -> methodName
com.lidroid.xutils.view.annotation.event.OnChildClick -> com.lidroid.xutils.view.annotation.event.OnChildClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnClick -> com.lidroid.xutils.view.annotation.event.OnClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange -> com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnFocusChange -> com.lidroid.xutils.view.annotation.event.OnFocusChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupClick -> com.lidroid.xutils.view.annotation.event.OnGroupClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupCollapse -> com.lidroid.xutils.view.annotation.event.OnGroupCollapse:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupExpand -> com.lidroid.xutils.view.annotation.event.OnGroupExpand:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemClick -> com.lidroid.xutils.view.annotation.event.OnItemClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemLongClick -> com.lidroid.xutils.view.annotation.event.OnItemLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemSelected -> com.lidroid.xutils.view.annotation.event.OnItemSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnKey -> com.lidroid.xutils.view.annotation.event.OnKey:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnLongClick -> com.lidroid.xutils.view.annotation.event.OnLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnNothingSelected -> com.lidroid.xutils.view.annotation.event.OnNothingSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnPreferenceChange -> com.lidroid.xutils.view.annotation.event.OnPreferenceChange:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnPreferenceClick -> com.lidroid.xutils.view.annotation.event.OnPreferenceClick:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnProgressChanged -> com.lidroid.xutils.view.annotation.event.OnProgressChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange -> com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScroll -> com.lidroid.xutils.view.annotation.event.OnScroll:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScrollStateChanged -> com.lidroid.xutils.view.annotation.event.OnScrollStateChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTabChange -> com.lidroid.xutils.view.annotation.event.OnTabChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTouch -> com.lidroid.xutils.view.annotation.event.OnTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.newland.base.ActivityManager -> com.newland.base.a:
    java.util.List activitys -> a
    void addActivity(android.app.Activity) -> a
    void finishAllActivity() -> a
    void <clinit>() -> <clinit>
com.newland.base.CommonThread -> com.newland.base.b:
    java.lang.Thread thread -> a
    boolean isRuning -> b
    boolean isOnce -> c
    com.newland.payment.interfaces.ThreadCallBack threadCallBack -> d
    int interval -> e
    java.lang.Object lock -> f
    boolean isAsync -> g
    boolean isStart -> h
    android.os.Handler handler -> i
    void <init>(com.newland.payment.interfaces.ThreadCallBack) -> <init>
    void <init>(boolean,int,com.newland.payment.interfaces.ThreadCallBack) -> <init>
    void <init>(boolean,int,boolean,com.newland.payment.interfaces.ThreadCallBack) -> <init>
    void start() -> a
    void pause() -> b
    void stop() -> c
    com.newland.payment.interfaces.ThreadCallBack access$000(com.newland.base.CommonThread) -> a
    boolean access$100(com.newland.base.CommonThread) -> b
    java.lang.Object access$200(com.newland.base.CommonThread) -> c
    boolean access$300(com.newland.base.CommonThread) -> d
    android.os.Handler access$400(com.newland.base.CommonThread) -> e
    int access$500(com.newland.base.CommonThread) -> f
    boolean access$600(com.newland.base.CommonThread) -> g
    java.lang.Thread access$702(com.newland.base.CommonThread,java.lang.Thread) -> a
com.newland.base.CommonThread$1 -> com.newland.base.b$1:
    com.newland.base.CommonThread this$0 -> a
    void <init>(com.newland.base.CommonThread) -> <init>
    void dispatchMessage(android.os.Message) -> dispatchMessage
com.newland.base.CommonThread$2 -> com.newland.base.b$2:
    com.newland.base.CommonThread this$0 -> a
    void <init>(com.newland.base.CommonThread) -> <init>
    void run() -> run
com.newland.base.dao.BaseDao -> com.newland.base.dao.a:
    com.newland.payment.common.dao.DbHelper dbHelper -> a
    java.lang.String tableName -> b
    java.lang.String idColumn -> c
    java.lang.String idProperty -> d
    java.lang.Object t -> e
    java.lang.Class clazz -> f
    java.util.Map basicMap -> g
    void <init>(android.content.Context) -> <init>
    java.lang.Object generateEntity() -> e
    java.lang.String getTableName() -> a_
    java.util.List findAll() -> b_
    java.util.List findAll(java.lang.String) -> a_
    long insert(java.lang.Object) -> a
    int update(java.lang.Object) -> b
    void execSql(java.lang.String) -> b
    int delete(long) -> a
    int delete(java.lang.String,java.lang.String[]) -> a
    int delete(java.lang.String,java.lang.String) -> a
    android.content.ContentValues getColumsObject(java.lang.Object) -> c
    java.lang.String findKey() -> f
    java.lang.Object findById(long) -> b
    int getRowCount() -> c_
    int getRowCount(java.lang.String,java.lang.String[]) -> b
    java.util.List query(java.lang.String,java.lang.String) -> b
    java.util.List query(java.lang.String,java.lang.String[],java.lang.String) -> a
    java.util.List query(java.lang.String,java.lang.String[],java.lang.String,int,int) -> a
    java.util.List query(java.lang.Object,java.lang.String,int,int) -> a
    java.lang.Object cursor2VO(android.database.Cursor,java.lang.Class) -> a
    java.lang.Object setValues2Fields(android.database.Cursor,java.lang.Class) -> b
    java.lang.Object forceGetProperty(java.lang.Object,java.lang.String) -> a
    java.lang.reflect.Field getDeclaredField(java.lang.Object,java.lang.String) -> b
    void revertSeq() -> d
    void <clinit>() -> <clinit>
com.newland.base.dao.ann.Column -> com.newland.base.dao.ann.Column:
    java.lang.String name() -> name
    boolean primaryKey() -> primaryKey
    int len() -> len
    boolean unique() -> unique
com.newland.base.dao.ann.Table -> com.newland.base.dao.ann.Table:
    java.lang.String name() -> name
com.newland.base.util.AmountUtils -> com.newland.base.util.a:
    long yuan2fen(double) -> a
    long yuanStr2fen(java.lang.String) -> a
com.newland.base.util.AndroidTools -> com.newland.base.util.b:
    java.lang.String getApplicationVersionName(android.content.Context) -> a
    android.support.v4.app.Fragment getTopFragment(com.newland.payment.ui.activity.BaseActivity) -> a
    java.util.List getFragments(com.newland.payment.ui.activity.BaseActivity) -> b
    int getMainFragmentsCount(com.newland.payment.ui.activity.BaseActivity) -> c
com.newland.base.util.CommunicationUtils -> com.newland.base.util.c:
    java.lang.String name -> a
    java.lang.String apn -> b
    java.lang.String mcc -> c
    java.lang.String mnc -> d
    void setMobileDataStatus(android.content.Context,boolean) -> a
    boolean getMobileDataStatus(android.content.Context) -> g
    void commSwitchInit(int,android.content.Context) -> a
    void SetDefaultApnEntity(android.content.Context) -> a
    boolean updateApnEntity(android.content.Context) -> b
    boolean updateApnEntity(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean addApnEntity(android.content.Context) -> c
    boolean getPreferApn(android.content.Context) -> d
    int getServiceProvider(android.content.Context) -> e
    java.lang.String getApnBySim(android.content.Context,java.lang.String) -> a
    java.lang.String getApnNameBySim(android.content.Context,java.lang.String) -> b
    java.lang.String getMncBySim(android.content.Context,java.lang.String) -> c
    boolean checkSimAndGetMccMnc(android.content.Context) -> f
    java.lang.String getApn() -> a
    void setApn(java.lang.String) -> a
com.newland.base.util.DisplayUtils -> com.newland.base.util.d:
    int dip2px(android.content.Context,float) -> a
    int dip2px(android.content.Context,int) -> a
    int px2sp(android.content.Context,int) -> b
    int getDimensPx(android.content.Context,int) -> c
    android.util.DisplayMetrics getDiaplay(android.content.Context) -> a
    int getScreenType(android.content.Context) -> b
com.newland.base.util.FileUtils -> com.newland.base.util.e:
    boolean copyFileByInputStream(java.io.InputStream,java.io.File) -> a
    boolean clearDir(java.io.File,boolean) -> a
    void deleteFile(java.io.File,boolean) -> b
    java.lang.String createDir(java.lang.String) -> a
    java.io.File createFile(java.lang.String,java.lang.String) -> a
com.newland.base.util.InputUtils -> com.newland.base.util.f:
    void hideKeyboard(android.view.View) -> a
    void showKeyboard(android.view.View) -> b
    void setKeyBoardStatus(android.widget.EditText,int) -> a
    boolean isShowKeyBoard(android.widget.EditText) -> a
    void alwaysHideKeyBoard(android.widget.EditText,int) -> b
    void setMaxLength(android.widget.EditText,int) -> c
com.newland.base.util.InputUtils$1 -> com.newland.base.util.f$1:
    android.widget.EditText val$txtSearchKey -> a
    int val$status -> b
    void <init>(android.widget.EditText,int) -> <init>
    void run() -> run
com.newland.base.util.MainIconUtils -> com.newland.base.util.g:
    int getIcon(int) -> a
com.newland.base.util.MessageUtils -> com.newland.base.util.h:
    com.newland.payment.ui.view.CommonDialog showCommonDialog(android.content.Context,int,android.view.View$OnClickListener) -> a
    com.newland.payment.ui.view.CommonDialog showCommonDialog(android.content.Context,int,boolean,boolean,android.view.View$OnClickListener) -> a
    com.newland.payment.ui.view.CommonDialog showCommonDialog(android.content.Context,int,android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
    com.newland.payment.ui.view.CommonDialog showCommonDialog(android.content.Context,java.lang.CharSequence,android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
    com.newland.payment.ui.view.CommonDialog showCommonDialog(android.content.Context,int,java.lang.CharSequence,android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
    com.newland.payment.ui.view.CommonDialog showCommonDialog(android.content.Context,java.lang.CharSequence,int,int,android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
    android.app.Dialog showCommonDialog(android.content.Context,java.lang.String,java.lang.CharSequence,android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
    android.app.Dialog showCommonDialog(android.content.Context,java.lang.String,java.lang.CharSequence,android.view.View$OnClickListener,android.view.View$OnClickListener,int,com.newland.payment.ui.view.CommonDialog$TimeOutOper) -> a
    com.newland.payment.ui.view.CommonDialog showCommonDialog(android.content.Context,java.lang.String,java.lang.CharSequence,boolean,boolean,int,int,int,android.view.View$OnClickListener,android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
    com.newland.payment.ui.view.CommonDialog showCommonDialog(android.content.Context,java.lang.String,java.lang.CharSequence,boolean,boolean,int,int,int,android.view.View$OnClickListener,android.view.View$OnClickListener,android.view.View$OnClickListener,int,com.newland.payment.ui.view.CommonDialog$TimeOutOper) -> a
    com.newland.payment.ui.view.CommonDialog getCommonDialog(android.content.Context,int,android.view.View$OnClickListener) -> b
    com.newland.payment.ui.view.CommonDialog getCommonDialog(android.content.Context,java.lang.String,java.lang.CharSequence,int,int,int,android.view.View$OnClickListener,android.view.View$OnClickListener,android.view.View$OnClickListener,int,com.newland.payment.ui.view.CommonDialog$TimeOutOper) -> a
    android.app.Dialog showMenuSelectDialog(android.content.Context,java.lang.String,java.lang.String[],int,android.widget.AdapterView$OnItemClickListener,com.newland.payment.ui.listener.OnListDialogClickListener,android.view.View$OnClickListener) -> a
    android.app.Dialog showCommonTimeDialog(android.content.Context,java.lang.String,long,com.newland.payment.ui.listener.LongValueChangeListener) -> a
    android.app.Dialog showCommonDateDialog(android.content.Context,java.lang.String,com.newland.payment.ui.listener.LongValueChangeListener) -> a
    android.app.Dialog showCommonDateDialog(android.content.Context,java.lang.String,java.lang.Long,int,int,boolean,boolean,boolean,com.newland.payment.ui.listener.LongValueChangeListener) -> a
    com.newland.payment.ui.view.CommonInputDialog showInputDialog(android.content.Context,int,java.lang.String,android.view.View$OnClickListener) -> a
    com.newland.payment.ui.view.CommonInputDialog getInputDialog(android.content.Context,int,java.lang.String,android.view.View$OnClickListener) -> b
    void showTipMsg(java.lang.String) -> a
com.newland.base.util.MessageUtils$1 -> com.newland.base.util.h$1:
    void <init>() -> <init>
    void onClick(android.view.View) -> onClick
com.newland.base.util.MessageUtils$10 -> com.newland.base.util.h$2:
    void <init>() -> <init>
    void onClick(android.view.View) -> onClick
com.newland.base.util.MessageUtils$11 -> com.newland.base.util.h$3:
    java.lang.String val$msg -> a
    void <init>(java.lang.String) -> <init>
    void run() -> run
com.newland.base.util.MessageUtils$3 -> com.newland.base.util.h$4:
    void <init>() -> <init>
    void onClick(android.view.View) -> onClick
com.newland.base.util.MessageUtils$4 -> com.newland.base.util.h$5:
    com.newland.payment.ui.view.CommonDialog val$commonDialog -> a
    void <init>(com.newland.payment.ui.view.CommonDialog) -> <init>
    void onConfirm(android.app.Dialog,java.lang.String) -> a
    void onCancel() -> a
com.newland.base.util.MessageUtils$5 -> com.newland.base.util.h$6:
    android.content.Context val$context -> a
    com.newland.payment.ui.view.CommonDialog val$commonDialog -> b
    void <init>(android.content.Context,com.newland.payment.ui.view.CommonDialog) -> <init>
    void onConfirm(android.app.Dialog,java.lang.String) -> a
    void onCancel() -> a
com.newland.base.util.MessageUtils$5$1 -> com.newland.base.util.h$6$1:
    int result -> a
    com.newland.payment.ui.view.OperatorPasswordDialog val$operatorPasswordDialog -> b
    com.newland.base.util.MessageUtils$5 this$0 -> c
    void <init>(com.newland.base.util.MessageUtils$5,com.newland.payment.ui.view.OperatorPasswordDialog) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.base.util.MessageUtils$6 -> com.newland.base.util.h$7:
    android.app.Dialog val$dialog -> a
    void <init>(android.app.Dialog) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.base.util.MessageUtils$7 -> com.newland.base.util.h$8:
    android.app.Dialog val$dialog -> a
    com.newland.payment.ui.listener.LongValueChangeListener val$listener -> b
    com.newland.payment.ui.view.wheelview.TimeWheelView val$timeWheelView -> c
    void <init>(android.app.Dialog,com.newland.payment.ui.listener.LongValueChangeListener,com.newland.payment.ui.view.wheelview.TimeWheelView) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.base.util.MessageUtils$8 -> com.newland.base.util.h$9:
    android.app.Dialog val$dialog -> a
    void <init>(android.app.Dialog) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.base.util.MessageUtils$9 -> com.newland.base.util.h$10:
    android.app.Dialog val$dialog -> a
    com.newland.payment.ui.listener.LongValueChangeListener val$listener -> b
    com.newland.payment.ui.view.wheelview.DateWheelView2 val$dateWheelView -> c
    void <init>(android.app.Dialog,com.newland.payment.ui.listener.LongValueChangeListener,com.newland.payment.ui.view.wheelview.DateWheelView2) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.base.util.ParamsUtils -> com.newland.base.util.ParamsUtils:
    void <init>() -> <init>
    int save(java.util.Map) -> save
    boolean clean() -> clean
    java.util.Map get() -> get
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int setString(java.lang.String,java.lang.String) -> setString
    int setBoolean(java.lang.String,boolean) -> setBoolean
    boolean getBoolean(java.lang.String) -> getBoolean
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    long getLong(java.lang.String) -> getLong
    long getLong(java.lang.String,long) -> getLong
    int getInt(java.lang.String) -> getInt
    int getInt(java.lang.String,int) -> getInt
    int setInt(java.lang.String,int) -> setInt
    java.lang.String getShopId() -> getShopId
    java.lang.String getPosId() -> getPosId
    int getTMkIndex() -> getTMkIndex
    boolean setShopId(java.lang.String) -> setShopId
    boolean setPosId(java.lang.String) -> setPosId
    boolean setTMKIndex(int) -> setTMKIndex
com.newland.base.util.SoundUtils -> com.newland.base.util.i:
    com.newland.base.util.SoundUtils INSTANCE -> a
    android.media.SoundPool soundPool -> b
    java.util.HashMap soundId -> c
    void <init>() -> <init>
    com.newland.base.util.SoundUtils getInstance() -> a
    void load(android.content.Context) -> a
    void play(int) -> a
com.newland.base.util.ToastUtils -> com.newland.base.util.j:
    android.graphics.drawable.Drawable iconLeft -> a
    android.widget.Toast mToastView -> b
    android.view.View toastContentView -> c
    android.widget.ImageView toastIconView -> d
    android.widget.TextView toastMessageView -> e
    void show(android.content.Context,java.lang.Object,int) -> a
    void show(android.content.Context,java.lang.Object) -> a
    void showLong(android.content.Context,java.lang.Object) -> b
    void show(android.content.Context,int) -> a
    void showOnUIThread(java.lang.Object) -> a
    android.widget.Toast access$000() -> a
com.newland.base.util.ToastUtils$1 -> com.newland.base.util.j$1:
    void <init>() -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.base.util.ToastUtils$2 -> com.newland.base.util.j$2:
    java.lang.Object val$info -> a
    void <init>(java.lang.Object) -> <init>
    void run() -> run
com.newland.base.util.TransUtils -> com.newland.base.util.k:
    com.newland.payment.trans.AbstractBaseTrans getTransBean(int) -> a
    java.lang.String[] getTransType(int) -> b
    java.lang.String getPanByWater(com.newland.payment.mvc.model.Water) -> a
    void clearWater(android.content.Context) -> a
com.newland.base.util.ViewUtils -> com.newland.base.util.l:
    long lastClickTime -> a
    void shakeAnimatie(android.view.View) -> a
    void setGoneTextView(java.lang.String,android.widget.TextView) -> a
    boolean isFastClick() -> a
    boolean isFastClick(int) -> a
    void setFocus(android.view.View) -> b
    int getStatusHeight(android.content.Context) -> a
com.newland.base.util.log.LogcatHelper -> com.newland.base.util.a.a:
    int LOG_COUNT -> a
    com.newland.base.util.log.LogcatHelper$LogDumper mLogDumper -> b
    int mPId -> c
    boolean isOtherDate -> d
    android.content.Context context -> e
    android.content.Context staticContext -> f
    void init(java.lang.String) -> a
    com.newland.base.util.log.LogcatHelper getInstance(android.content.Context) -> a
    void <init>(android.content.Context) -> <init>
    void start() -> a
    void stop() -> b
    android.content.Context access$000() -> c
    void <init>(android.content.Context,com.newland.base.util.log.LogcatHelper$1) -> <init>
    boolean access$302(com.newland.base.util.log.LogcatHelper,boolean) -> a
    android.content.Context access$400(com.newland.base.util.log.LogcatHelper) -> a
    void <clinit>() -> <clinit>
com.newland.base.util.log.LogcatHelper$1 -> com.newland.base.util.a.a$1:
com.newland.base.util.log.LogcatHelper$InnerClass -> com.newland.base.util.a.a$a:
    com.newland.base.util.log.LogcatHelper INSTANCE -> a
    com.newland.base.util.log.LogcatHelper access$200() -> a
    void <clinit>() -> <clinit>
com.newland.base.util.log.LogcatHelper$LogDumper -> com.newland.base.util.a.a$b:
    java.lang.Process logcatProc -> c
    java.io.BufferedReader mReader -> d
    boolean mRunning -> e
    java.lang.String cmds -> a
    java.lang.String mPID -> f
    java.lang.String cur_date -> g
    java.io.FileOutputStream out -> h
    com.newland.base.util.log.LogcatHelper this$0 -> b
    void <init>(com.newland.base.util.log.LogcatHelper,java.lang.String,java.lang.String,java.lang.String) -> <init>
    void stopLogs() -> a
    void run() -> run
    java.lang.String getFileName() -> b
    java.lang.String getDateEN() -> c
    void checkOutTimeAndDelectLogFile(java.lang.String,java.lang.String) -> a
    java.lang.String findLastMD(java.lang.String) -> a
com.newland.emv.EmvAppModule -> com.newland.emv.a:
    com.newland.payment.trans.AbstractBaseTrans uiTrans -> a
    void <init>() -> <init>
    com.newland.emv.EmvAppModule getInstance() -> a
    void setUiTrans(com.newland.payment.trans.AbstractBaseTrans) -> a
    void setEmvAdditionInfo(com.newland.payment.mvc.model.Water,java.lang.String) -> a
    void setEmvWaterInfo(com.newland.payment.mvc.model.Water) -> a
    boolean SaveEmvFailWater(android.content.Context,com.newland.payment.trans.bean.PubBean) -> a
    com.newland.pos.sdk.bean.MenuSelectBean showUIMenuSelect(com.newland.pos.sdk.bean.MenuSelectBean) -> showUIMenuSelect
    com.newland.pos.sdk.bean.MessageTipBean showUIMessageTip(com.newland.pos.sdk.bean.MessageTipBean) -> showUIMessageTip
    com.newland.pos.sdk.bean.AmountBean showUIInputAmount(com.newland.pos.sdk.bean.AmountBean) -> showUIInputAmount
    com.newland.pos.sdk.bean.PasswordBean showUIPinInput(boolean,com.newland.pos.sdk.bean.PasswordBean) -> showUIPinInput
    int getEmvTransSerial() -> getEmvTransSerial
    void setEmvTransSerial(int) -> setEmvTransSerial
    void showToastMsg(java.lang.String) -> showToastMsg
    void <init>(com.newland.emv.EmvAppModule$1) -> <init>
com.newland.emv.EmvAppModule$1 -> com.newland.emv.a$1:
    java.lang.String val$msg -> a
    com.newland.emv.EmvAppModule this$0 -> b
    void <init>(com.newland.emv.EmvAppModule,java.lang.String) -> <init>
    void run() -> run
com.newland.emv.EmvAppModule$InnerInstance -> com.newland.emv.a$a:
    com.newland.emv.EmvAppModule INSTANCE -> a
    com.newland.emv.EmvAppModule access$100() -> a
    void <clinit>() -> <clinit>
com.newland.emv.EmvApplication -> com.newland.emv.b:
    com.newland.payment.trans.AbstractBaseTrans trans -> a
    com.newland.emv.EmvAppModule emvAppModule -> b
    com.newland.pos.sdk.emv.EmvProcess emvProcess -> c
    void <init>(com.newland.payment.trans.AbstractBaseTrans) -> <init>
    int simpleProcess(com.newland.payment.trans.bean.PubBean) -> a
    int qPbocProcess(com.newland.payment.trans.bean.PubBean) -> b
    int initEmvApp(com.newland.payment.trans.bean.PubBean) -> c
    int processApp(com.newland.payment.trans.bean.PubBean) -> d
    int completeApp(com.newland.payment.trans.bean.PubBean,boolean,boolean) -> a
    java.util.List emvGetPbocLog(com.newland.payment.trans.bean.PubBean) -> e
    java.util.List emvGetEcLoadLog(com.newland.payment.trans.bean.PubBean) -> f
    boolean checkIsEC() -> a
    boolean checkIsOnlyEC() -> b
    boolean checkIsQpbocOnlinePin() -> c
    boolean checkIsPay() -> d
    java.lang.String getPanFrom5A() -> e
    void DispOutICC(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getEmvErrMsg() -> f
    com.newland.emv.EmvAppModule getEmvAppModule() -> g
    void showTipMsg(java.lang.String) -> a
    java.lang.String getEmvOrgSheet() -> h
    java.lang.String getMsgCheckEcOnly(int) -> a
    boolean checkInputPin() -> i
com.newland.emv.EmvApplication$1 -> com.newland.emv.b$1:
    java.lang.String val$msg -> a
    com.newland.emv.EmvApplication this$0 -> b
    void <init>(com.newland.emv.EmvApplication,java.lang.String) -> <init>
    void run() -> run
com.newland.emv.jni.listener.EmvJNIListener -> com.newland.emv.jni.listener.EmvJNIListener:
    int emv_get_pinentry(int,byte[]) -> emv_get_pinentry
    int iss_ref(byte[],int) -> iss_ref
    int acctype_sel() -> acctype_sel
    int inc_tsc() -> inc_tsc
    int cert_confirm(byte,byte[],int) -> cert_confirm
    int lcd_msg(char[],byte[],int,int,int) -> lcd_msg
    int candidate_sel(com.newland.emv.jni.type.candidate[],int,int) -> candidate_sel
    int emv_icc_rw(int,byte[],int,byte[],int) -> emv_icc_rw
    int emv_rf_powerdown(int) -> emv_rf_powerdown
    int emv_ec_switch() -> emv_ec_switch
    int emv_icc_powerup(int[]) -> emv_icc_powerup
    int emv_get_bcdamt(byte,byte[],byte[]) -> emv_get_bcdamt
com.newland.emv.jni.service.EmvJNIService -> com.newland.emv.jni.service.EmvJNIService:
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    int jniemvStart(com.newland.emv.jni.type.emv_opt) -> jniemvStart
    int jniemvSuspend(int) -> jniemvSuspend
    java.lang.String jniemvgetVersion() -> jniemvgetVersion
    int jniemvErrorCode() -> jniemvErrorCode
    int jniemvFetchData(int[],int,byte[],int) -> jniemvFetchData
    int jniemvgetdata(int,byte[],int) -> jniemvgetdata
    int jniemvsetdata(int,byte[],int) -> jniemvsetdata
    int jniemvGetPBOCLog(int,byte[],int) -> jniemvGetPBOCLog
    int jniemvGetecloadLog(int,byte[],int) -> jniemvGetecloadLog
    int jniemvOperCAPK(com.newland.emv.jni.type.capk,int) -> jniemvOperCAPK
    int jniemvremoveCAPKByRID(byte[]) -> jniemvremoveCAPKByRID
    int jniemvOperAID(com.newland.emv.jni.type.emvparam,int) -> jniemvOperAID
    int jniemvbuildAidList() -> jniemvbuildAidList
    int jniemvopercertblk(com.newland.emv.jni.type.certblk,int) -> jniemvopercertblk
    int jniemvopercardblk(com.newland.emv.jni.type.cardblk,int) -> jniemvopercardblk
    int jniemvrfstart(com.newland.emv.jni.type.emv_opt,long) -> jniemvrfstart
    int jniemvrfsuspend(int) -> jniemvrfsuspend
    int jniemvICCgetdata(int,byte[],int[]) -> jniemvICCgetdata
    int jniemvICCGetDataByTagName(int,byte[],int[]) -> jniemvICCGetDataByTagName
    int jniemvInitialize(java.lang.String,com.newland.emv.jni.type.emv_oper) -> jniemvInitialize
    int jniemvrpcFetchData(int[],int,byte[],int) -> jniemvrpcFetchData
    int jniemvrpcgetdata(int,byte[],int) -> jniemvrpcgetdata
    int jniemvrpcsetdata(int,byte[],int) -> jniemvrpcsetdata
    int jniemvrpcrfstart(com.newland.emv.jni.type.emv_opt,long) -> jniemvrpcrfstart
    int jniemvrpcrfsuspend(int) -> jniemvrpcrfsuspend
    int jniemvrpcbuildAidList() -> jniemvrpcbuildAidList
    int jniemvrpcErrorCode() -> jniemvrpcErrorCode
    int jniemvset9CTransType(byte) -> jniemvset9CTransType
    int jniSyncRpcFiles(int) -> jniSyncRpcFiles
    int jniGetAIDCount() -> jniGetAIDCount
    int jniGetAID(int,com.newland.emv.jni.type.emvparam) -> jniGetAID
    int jniGetCAPKCount() -> jniGetCAPKCount
    int jniGetCAPK(int,com.newland.emv.jni.type.capk) -> jniGetCAPK
    int jniemvSendRpcData(byte[],int) -> jniemvSendRpcData
    int jniemvRecvRpcData(byte[],int,int) -> jniemvRecvRpcData
com.newland.emv.jni.type.candidate -> com.newland.emv.jni.type.candidate:
    byte[] _aid -> _aid
    byte _aid_len -> _aid_len
    byte[] _lable -> _lable
    byte _lable_len -> _lable_len
    byte[] _preferred_name -> _preferred_name
    byte _preferred_name_len -> _preferred_name_len
    byte _priority -> _priority
    byte _enable -> _enable
    byte _flag -> _flag
    byte[] _resv -> _resv
    int _file_offset -> _file_offset
    void <init>() -> <init>
com.newland.emv.jni.type.capk -> com.newland.emv.jni.type.capk:
    byte[] pk_modulus -> pk_modulus
    byte pk_mod_len -> pk_mod_len
    byte[] pk_exponent -> pk_exponent
    byte[] _hashvalue -> _hashvalue
    byte[] _expired_date -> _expired_date
    byte[] _rid -> _rid
    byte _index -> _index
    byte _pk_algorithm -> _pk_algorithm
    byte _hash_algorithm -> _hash_algorithm
    byte _disable -> _disable
    byte[] _resv -> _resv
    void <init>() -> <init>
com.newland.emv.jni.type.cardblk -> com.newland.emv.jni.type.cardblk:
    byte[] _card_no -> _card_no
    byte _len -> _len
    byte _index -> _index
    byte _disable -> _disable
    byte _partial_match -> _partial_match
    byte _disable_index -> _disable_index
    byte _rsv -> _rsv
    void <init>() -> <init>
com.newland.emv.jni.type.certblk -> com.newland.emv.jni.type.certblk:
    byte[] _rid -> _rid
    byte _index -> _index
    byte[] _sn -> _sn
    byte _disable -> _disable
    byte[] _rsv -> _rsv
    void <init>() -> <init>
com.newland.emv.jni.type.emv_oper -> com.newland.emv.jni.type.emv_oper:
    int emv_get_pinentry(int,byte[]) -> emv_get_pinentry
    int iss_ref(byte[],int) -> iss_ref
    int acctype_sel() -> acctype_sel
    int inc_tsc() -> inc_tsc
    int cert_confirm(byte,byte[],int) -> cert_confirm
    int lcd_msg(java.lang.String,byte[],int,int,int) -> lcd_msg
    int candidate_sel(com.newland.emv.jni.type.candidate[],int,int) -> candidate_sel
    int emv_icc_rw(int,byte[],int,byte[],int) -> emv_icc_rw
    int emv_rf_powerdown(int) -> emv_rf_powerdown
    int emv_ec_switch() -> emv_ec_switch
    int emv_icc_powerup(int[]) -> emv_icc_powerup
    int emv_get_bcdamt(byte,byte[],byte[]) -> emv_get_bcdamt
com.newland.emv.jni.type.emv_opt -> com.newland.emv.jni.type.emv_opt:
    byte _trans_type -> _trans_type
    int _seq_to -> _seq_to
    int _request_amt -> _request_amt
    int _force_online_enable -> _force_online_enable
    int _account_type_enable -> _account_type_enable
    byte[] _online_pin -> _online_pin
    byte[] _iss_script_res -> _iss_script_res
    int _iss_sres_len -> _iss_sres_len
    int _advice_req -> _advice_req
    int _force_accept_supported -> _force_accept_supported
    int _signature_req -> _signature_req
    byte[] _auth_resp_code -> _auth_resp_code
    byte[] _field55 -> _field55
    int _field55_len -> _field55_len
    int _online_result -> _online_result
    int _trans_ret -> _trans_ret
    void <init>() -> <init>
com.newland.emv.jni.type.emvparam -> com.newland.emv.jni.type.emvparam:
    byte[] _tac_default -> _tac_default
    byte[] _tac_denial -> _tac_denial
    byte[] _tac_online -> _tac_online
    byte _target_percent -> _target_percent
    byte _max_target_percent -> _max_target_percent
    byte[] _threshold_value -> _threshold_value
    byte[] _trans_ref_conv -> _trans_ref_conv
    byte _script_dev_limit -> _script_dev_limit
    byte[] _ics -> _ics
    byte _status -> _status
    byte _ec_indicator -> _ec_indicator
    byte _type -> _type
    byte[] _cap -> _cap
    byte[] _add_cap -> _add_cap
    byte[] _aid -> _aid
    byte _aid_len -> _aid_len
    byte[] _app_ver -> _app_ver
    byte _pos_entry -> _pos_entry
    byte[] _floorlimit -> _floorlimit
    byte[] _acq_id -> _acq_id
    byte[] _mer_category_code -> _mer_category_code
    byte[] _merchant_id -> _merchant_id
    byte[] _trans_curr_code -> _trans_curr_code
    byte _trans_curr_exp -> _trans_curr_exp
    byte[] _trans_ref_curr_code -> _trans_ref_curr_code
    byte _trans_ref_curr_exp -> _trans_ref_curr_exp
    byte[] _term_country_code -> _term_country_code
    byte[] _ifd_serial_num -> _ifd_serial_num
    byte[] _terminal_id -> _terminal_id
    byte _default_ddol_len -> _default_ddol_len
    byte _default_tdol_len -> _default_tdol_len
    byte[] _default_ddol -> _default_ddol
    byte[] _default_tdol -> _default_tdol
    byte[] _merchant_name -> _merchant_name
    byte _app_sel_indicator -> _app_sel_indicator
    byte _fallback_posentry -> _fallback_posentry
    byte _limit_exist -> _limit_exist
    byte[] _ec_limit -> _ec_limit
    byte[] _cl_limit -> _cl_limit
    byte[] _cl_offline_limit -> _cl_offline_limit
    byte[] _cvm_limit -> _cvm_limit
    byte[] _trans_prop -> _trans_prop
    byte _status_check -> _status_check
    byte _appid -> _appid
    byte[] _resv -> _resv
    void <init>() -> <init>
com.newland.mtms.imp.a -> com.newland.mtms.imp.a:
    android.content.Context a -> a
    java.lang.String a -> a
    java.util.Map a -> a
    java.util.Map b -> b
    void <init>(android.content.Context,java.lang.String) -> <init>
    int appStatusChange(com.newland.mtms.inf.IAppEventManager$AppState) -> appStatusChange
    int transWaterCommit(com.newland.mtms.inf.IAppEventManager$AppType,java.util.Date,com.newland.mtms.inf.IAppEventManager$TransResult) -> transWaterCommit
    int a(com.newland.mtms.inf.IAppEventManager$AppState) -> a
    java.lang.String a(com.newland.mtms.inf.IAppEventManager$AppType) -> a
    int transWaterCommit(java.util.List) -> transWaterCommit
com.newland.mtms.imp.a$1 -> com.newland.mtms.imp.a$1:
    com.newland.mtms.imp.a a -> a
    void <init>(com.newland.mtms.imp.a) -> <init>
com.newland.mtms.imp.a$2 -> com.newland.mtms.imp.a$2:
    com.newland.mtms.imp.a a -> a
    void <init>(com.newland.mtms.imp.a) -> <init>
com.newland.mtms.imp.a.a -> com.newland.mtms.imp.a.a:
    com.newland.mtms.imp.a.d a -> a
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.util.Map a(byte[]) -> a
    int a(byte[]) -> a
    byte[] a(byte[]) -> a
com.newland.mtms.imp.a.b -> com.newland.mtms.imp.a.b:
    java.lang.String a(byte[]) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    short a(byte[]) -> a
com.newland.mtms.imp.a.c -> com.newland.mtms.imp.a.c:
    android.content.ContentValues a(java.util.Map) -> a
    java.lang.String[] a(java.util.List) -> a
    byte[] a(java.lang.String) -> a
    byte a(char) -> a
    java.lang.String a(byte[]) -> a
    byte[] a(java.io.File) -> a
com.newland.mtms.imp.a.d -> com.newland.mtms.imp.a.d:
    boolean a -> a
    java.lang.String a -> a
    void <init>(java.lang.Class) -> <init>
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
com.newland.mtms.imp.b -> com.newland.mtms.imp.b:
    boolean a -> a
    android.content.ServiceConnection a -> a
    void <init>() -> <init>
    void openPasswordService(android.content.Context) -> openPasswordService
    void closePasswordService(android.content.Context) -> closePasswordService
    void a(com.newland.mtms.imp.b,boolean) -> a
com.newland.mtms.imp.b$1 -> com.newland.mtms.imp.b$1:
    com.newland.mtms.imp.b a -> a
    void <init>(com.newland.mtms.imp.b) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.newland.mtms.imp.c -> com.newland.mtms.imp.c:
    android.content.Context a -> a
    java.util.Map a -> a
    java.util.Map b -> b
    void <init>(android.content.Context) -> <init>
    int statusChange(com.newland.mtms.inf.IDevStateManager$Dev,com.newland.mtms.inf.IDevStateManager$DevState) -> statusChange
    java.lang.String a(com.newland.mtms.inf.IDevStateManager$Dev) -> a
    java.lang.String a(com.newland.mtms.inf.IDevStateManager$DevState) -> a
com.newland.mtms.imp.c$1 -> com.newland.mtms.imp.c$1:
    com.newland.mtms.imp.c a -> a
    void <init>(com.newland.mtms.imp.c) -> <init>
com.newland.mtms.imp.c$2 -> com.newland.mtms.imp.c$2:
    com.newland.mtms.imp.c a -> a
    void <init>(com.newland.mtms.imp.c) -> <init>
com.newland.mtms.imp.d -> com.newland.mtms.imp.d:
    com.newland.mtms.imp.a.d a -> a
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.content.Context a -> a
    java.lang.String h -> h
    void <init>(android.content.Context) -> <init>
    java.lang.String getLogPath() -> getLogPath
    java.lang.String getAdvPath() -> getAdvPath
    java.lang.String getScriptPath() -> getScriptPath
    java.lang.String getSignaturesPath() -> getSignaturesPath
    java.lang.String getTranslinePath() -> getTranslinePath
    java.lang.String getAppdatasPath() -> getAppdatasPath
    java.lang.String a(android.content.Context) -> a
com.newland.mtms.imp.e -> com.newland.mtms.imp.e:
    com.newland.mtms.imp.a.d a -> a
    android.content.Context a -> a
    java.lang.String a -> a
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    void <init>(android.content.Context,java.lang.String) -> <init>
    boolean commit(java.lang.String,java.lang.String) -> commit
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean commit(java.util.Map) -> commit
    boolean a(java.util.Map) -> a
    boolean b(java.util.Map) -> b
    boolean delete() -> delete
    boolean a() -> a
    boolean b() -> b
    boolean delete(java.lang.String) -> delete
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean delete(java.util.List) -> delete
    boolean a(java.util.List) -> a
    boolean b(java.util.List) -> b
    java.util.Map query() -> query
    java.util.Map a() -> a
    java.util.Map b() -> b
    java.lang.String query(java.lang.String) -> query
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.util.Map query(java.util.List) -> query
    java.util.Map a(java.util.List) -> a
    java.util.Map b(java.util.List) -> b
    java.util.Map getParamsByOnlineUpdate() -> getParamsByOnlineUpdate
    java.lang.String getMerchantNumber() -> getMerchantNumber
    boolean setMerchantNumber(java.lang.String) -> setMerchantNumber
    java.lang.String getTerminalNumber() -> getTerminalNumber
    boolean setTerminalNumber(java.lang.String) -> setTerminalNumber
    int getMtkIndex() -> getMtkIndex
    boolean setMtkIndex(int) -> setMtkIndex
    java.lang.String a(android.content.Context) -> a
com.newland.mtms.imp.f -> com.newland.mtms.imp.f:
    com.newland.mtms.imp.a.d a -> a
    java.lang.String a -> a
    android.content.Context a -> a
    void <init>(android.content.Context) -> <init>
    boolean commit(java.io.File) -> commit
    boolean commit(java.lang.String,byte[]) -> commit
    boolean delect(java.lang.String) -> delect
    java.io.InputStream query(java.lang.String) -> query
com.newland.mtms.imp.service.K21KernelService -> com.newland.mtms.imp.service.K21KernelService:
    com.newland.mtms.imp.a.d a -> a
    com.newland.mtype.util.SimIdGenerator a -> a
    com.newland.mtype.DeviceDriver a -> a
    com.newland.mtype.Device a -> a
    android.os.Binder a -> a
    java.lang.StringBuilder a -> a
    java.lang.String a -> a
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void a() -> a
    void a(com.newland.mtype.Device) -> a
    void b() -> b
    void onDestroy() -> onDestroy
    com.newland.mtms.imp.a.d a() -> a
    com.newland.mtype.Device a(com.newland.mtms.imp.service.K21KernelService) -> a
    void a(com.newland.mtms.imp.service.K21KernelService,com.newland.mtype.Device) -> a
com.newland.mtms.imp.service.K21KernelService$1 -> com.newland.mtms.imp.service.K21KernelService$1:
    com.newland.mtms.imp.service.K21KernelService a -> a
    void <init>(com.newland.mtms.imp.service.K21KernelService) -> <init>
    void run() -> run
com.newland.mtms.imp.service.K21KernelService$2 -> com.newland.mtms.imp.service.K21KernelService$2:
    com.newland.mtms.imp.service.K21KernelService a -> a
    void <init>(com.newland.mtms.imp.service.K21KernelService) -> <init>
com.newland.mtms.imp.service.K21KernelService$a -> com.newland.mtms.imp.service.K21KernelService$a:
    java.lang.Long a -> a
    com.newland.mtms.imp.service.K21KernelService a -> a
    void <init>(com.newland.mtms.imp.service.K21KernelService,java.lang.Long) -> <init>
com.newland.mtms.imp.service.K21KernelService$b -> com.newland.mtms.imp.service.K21KernelService$b:
    com.newland.mtms.imp.service.K21KernelService a -> a
    void <init>(com.newland.mtms.imp.service.K21KernelService) -> <init>
com.newland.mtms.imp.service.readDbService -> com.newland.mtms.imp.service.readDbService:
    com.newland.mtms.imp.a.d a -> a
    com.newland.mtype.util.SimIdGenerator a -> a
    com.newland.mtype.DeviceDriver a -> a
    com.newland.mtype.Device a -> a
    android.os.Binder a -> a
    java.lang.StringBuilder a -> a
    java.lang.String a -> a
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void a() -> a
    void a(com.newland.mtype.Device) -> a
    void b() -> b
    void onDestroy() -> onDestroy
    com.newland.mtms.imp.a.d a() -> a
    com.newland.mtype.Device a(com.newland.mtms.imp.service.readDbService) -> a
    void a(com.newland.mtms.imp.service.readDbService,com.newland.mtype.Device) -> a
com.newland.mtms.imp.service.readDbService$1 -> com.newland.mtms.imp.service.readDbService$1:
    com.newland.mtms.imp.service.readDbService a -> a
    void <init>(com.newland.mtms.imp.service.readDbService) -> <init>
    void run() -> run
com.newland.mtms.imp.service.readDbService$2 -> com.newland.mtms.imp.service.readDbService$2:
    com.newland.mtms.imp.service.readDbService a -> a
    void <init>(com.newland.mtms.imp.service.readDbService) -> <init>
com.newland.mtms.imp.service.readDbService$a -> com.newland.mtms.imp.service.readDbService$a:
    java.lang.Long a -> a
    com.newland.mtms.imp.service.readDbService a -> a
    void <init>(com.newland.mtms.imp.service.readDbService,java.lang.Long) -> <init>
com.newland.mtms.imp.service.readDbService$b -> com.newland.mtms.imp.service.readDbService$b:
    com.newland.mtms.imp.service.readDbService a -> a
    void <init>(com.newland.mtms.imp.service.readDbService) -> <init>
com.newland.mtms.inf.IAppEventManager -> com.newland.mtms.inf.IAppEventManager:
    int appStatusChange(com.newland.mtms.inf.IAppEventManager$AppState) -> appStatusChange
    int transWaterCommit(com.newland.mtms.inf.IAppEventManager$AppType,java.util.Date,com.newland.mtms.inf.IAppEventManager$TransResult) -> transWaterCommit
    int transWaterCommit(java.util.List) -> transWaterCommit
com.newland.mtms.inf.IAppEventManager$AppState -> com.newland.mtms.inf.IAppEventManager$AppState:
    com.newland.mtms.inf.IAppEventManager$AppState ON_IDLE -> ON_IDLE
    com.newland.mtms.inf.IAppEventManager$AppState ON_BUSINESS -> ON_BUSINESS
    com.newland.mtms.inf.IAppEventManager$AppState[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.newland.mtms.inf.IAppEventManager$AppState[] values() -> values
    com.newland.mtms.inf.IAppEventManager$AppState valueOf(java.lang.String) -> valueOf
com.newland.mtms.inf.IAppEventManager$AppType -> com.newland.mtms.inf.IAppEventManager$AppType:
    com.newland.mtms.inf.IAppEventManager$AppType PAYMENT_APP -> PAYMENT_APP
    com.newland.mtms.inf.IAppEventManager$AppType TOOL -> TOOL
    com.newland.mtms.inf.IAppEventManager$AppType OTHER -> OTHER
    com.newland.mtms.inf.IAppEventManager$AppType[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.newland.mtms.inf.IAppEventManager$AppType[] values() -> values
    com.newland.mtms.inf.IAppEventManager$AppType valueOf(java.lang.String) -> valueOf
com.newland.mtms.inf.IAppEventManager$TransResult -> com.newland.mtms.inf.IAppEventManager$TransResult:
    com.newland.mtms.inf.IAppEventManager$TransResult SUCCESS -> SUCCESS
    com.newland.mtms.inf.IAppEventManager$TransResult FAILURE -> FAILURE
    com.newland.mtms.inf.IAppEventManager$TransResult[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.newland.mtms.inf.IAppEventManager$TransResult[] values() -> values
    com.newland.mtms.inf.IAppEventManager$TransResult valueOf(java.lang.String) -> valueOf
com.newland.mtms.inf.IBindPasswordManager -> com.newland.mtms.inf.IBindPasswordManager:
    void openPasswordService(android.content.Context) -> openPasswordService
    void closePasswordService(android.content.Context) -> closePasswordService
com.newland.mtms.inf.IDevStateManager -> com.newland.mtms.inf.IDevStateManager:
    int statusChange(com.newland.mtms.inf.IDevStateManager$Dev,com.newland.mtms.inf.IDevStateManager$DevState) -> statusChange
com.newland.mtms.inf.IDevStateManager$Dev -> com.newland.mtms.inf.IDevStateManager$Dev:
    com.newland.mtms.inf.IDevStateManager$Dev PRINTER -> PRINTER
    com.newland.mtms.inf.IDevStateManager$Dev MSCR -> MSCR
    com.newland.mtms.inf.IDevStateManager$Dev PINPAD -> PINPAD
    com.newland.mtms.inf.IDevStateManager$Dev RFCARD -> RFCARD
    com.newland.mtms.inf.IDevStateManager$Dev ICCARD -> ICCARD
    com.newland.mtms.inf.IDevStateManager$Dev BUZZER -> BUZZER
    com.newland.mtms.inf.IDevStateManager$Dev PSAM -> PSAM
    com.newland.mtms.inf.IDevStateManager$Dev BACKSCR -> BACKSCR
    com.newland.mtms.inf.IDevStateManager$Dev SCREEN -> SCREEN
    com.newland.mtms.inf.IDevStateManager$Dev MIC -> MIC
    com.newland.mtms.inf.IDevStateManager$Dev SDCARD -> SDCARD
    com.newland.mtms.inf.IDevStateManager$Dev USB -> USB
    com.newland.mtms.inf.IDevStateManager$Dev MODULE_3G -> MODULE_3G
    com.newland.mtms.inf.IDevStateManager$Dev WIFI -> WIFI
    com.newland.mtms.inf.IDevStateManager$Dev ETHERNET -> ETHERNET
    com.newland.mtms.inf.IDevStateManager$Dev COM -> COM
    com.newland.mtms.inf.IDevStateManager$Dev HDMI -> HDMI
    com.newland.mtms.inf.IDevStateManager$Dev CAMERA -> CAMERA
    com.newland.mtms.inf.IDevStateManager$Dev OS -> OS
    com.newland.mtms.inf.IDevStateManager$Dev STORAGE -> STORAGE
    com.newland.mtms.inf.IDevStateManager$Dev[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.newland.mtms.inf.IDevStateManager$Dev[] values() -> values
    com.newland.mtms.inf.IDevStateManager$Dev valueOf(java.lang.String) -> valueOf
com.newland.mtms.inf.IDevStateManager$DevState -> com.newland.mtms.inf.IDevStateManager$DevState:
    com.newland.mtms.inf.IDevStateManager$DevState NORMAL -> NORMAL
    com.newland.mtms.inf.IDevStateManager$DevState FAULT -> FAULT
    com.newland.mtms.inf.IDevStateManager$DevState NO_PAPER -> NO_PAPER
    com.newland.mtms.inf.IDevStateManager$DevState WARNING -> WARNING
    com.newland.mtms.inf.IDevStateManager$DevState RED_LINE -> RED_LINE
    com.newland.mtms.inf.IDevStateManager$DevState NO_SIGNAL -> NO_SIGNAL
    com.newland.mtms.inf.IDevStateManager$DevState[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.newland.mtms.inf.IDevStateManager$DevState[] values() -> values
    com.newland.mtms.inf.IDevStateManager$DevState valueOf(java.lang.String) -> valueOf
com.newland.mtms.inf.IFilePathManager -> com.newland.mtms.inf.IFilePathManager:
    java.lang.String getLogPath() -> getLogPath
    java.lang.String getAdvPath() -> getAdvPath
    java.lang.String getScriptPath() -> getScriptPath
    java.lang.String getSignaturesPath() -> getSignaturesPath
    java.lang.String getTranslinePath() -> getTranslinePath
    java.lang.String getAppdatasPath() -> getAppdatasPath
com.newland.mtms.inf.IParamsManager -> com.newland.mtms.inf.IParamsManager:
    boolean commit(java.lang.String,java.lang.String) -> commit
    boolean commit(java.util.Map) -> commit
    boolean delete() -> delete
    boolean delete(java.lang.String) -> delete
    boolean delete(java.util.List) -> delete
    java.util.Map query() -> query
    java.lang.String query(java.lang.String) -> query
    java.util.Map query(java.util.List) -> query
    java.util.Map getParamsByOnlineUpdate() -> getParamsByOnlineUpdate
    java.lang.String getMerchantNumber() -> getMerchantNumber
    boolean setMerchantNumber(java.lang.String) -> setMerchantNumber
    java.lang.String getTerminalNumber() -> getTerminalNumber
    boolean setTerminalNumber(java.lang.String) -> setTerminalNumber
    int getMtkIndex() -> getMtkIndex
    boolean setMtkIndex(int) -> setMtkIndex
com.newland.mtms.inf.ISecurityCerManager -> com.newland.mtms.inf.ISecurityCerManager:
    boolean commit(java.io.File) -> commit
    boolean commit(java.lang.String,byte[]) -> commit
    boolean delect(java.lang.String) -> delect
    java.io.InputStream query(java.lang.String) -> query
com.newland.mtms.inf.MtmsManagerFactory -> com.newland.mtms.inf.MtmsManagerFactory:
    com.newland.mtms.inf.MtmsManagerFactory instance -> instance
    android.content.Context context -> context
    java.lang.String packageName -> packageName
    com.newland.mtms.inf.IParamsManager paramsManager -> paramsManager
    com.newland.mtms.inf.ISecurityCerManager securityCerManager -> securityCerManager
    com.newland.mtms.inf.IBindPasswordManager passwordManager -> passwordManager
    com.newland.mtms.inf.IDevStateManager devStateManager -> devStateManager
    com.newland.mtms.inf.IFilePathManager filePathManager -> filePathManager
    com.newland.mtms.inf.IAppEventManager appEventManager -> appEventManager
    com.newland.mtms.inf.MtmsManagerFactory getInstance(android.app.Application) -> getInstance
    void <init>(android.content.Context,java.lang.String) -> <init>
    com.newland.mtms.inf.IParamsManager getParamsManager() -> getParamsManager
    com.newland.mtms.inf.ISecurityCerManager getSecurityCerManager() -> getSecurityCerManager
    com.newland.mtms.inf.IBindPasswordManager getBindPasswordManager() -> getBindPasswordManager
    com.newland.mtms.inf.IDevStateManager getDevStateManager() -> getDevStateManager
    com.newland.mtms.inf.IFilePathManager getFilePathManager() -> getFilePathManager
    com.newland.mtms.inf.IAppEventManager getAppEventManager() -> getAppEventManager
com.newland.payment.R -> com.newland.payment.R:
    void <init>() -> <init>
com.newland.payment.R$anim -> com.newland.payment.R$anim:
    int translate_bottom_in -> translate_bottom_in
    int translate_bottom_out -> translate_bottom_out
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$array -> com.newland.payment.R$array:
    int trans_type -> trans_type
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$attr -> com.newland.payment.R$attr:
    int behindOffset -> behindOffset
    int behindScrollScale -> behindScrollScale
    int behindWidth -> behindWidth
    int cacheColorHint -> cacheColorHint
    int columnWidth -> columnWidth
    int drawSelectorOnTop -> drawSelectorOnTop
    int fadeDegree -> fadeDegree
    int fadeEnabled -> fadeEnabled
    int gpvGridColor -> gpvGridColor
    int gpvLineColor -> gpvLineColor
    int gpvLineWidth -> gpvLineWidth
    int gpvPasswordLength -> gpvPasswordLength
    int gpvPasswordTransformation -> gpvPasswordTransformation
    int gpvPasswordType -> gpvPasswordType
    int gpvTextColor -> gpvTextColor
    int gpvTextSize -> gpvTextSize
    int gravity -> gravity
    int gridViewStyle -> gridViewStyle
    int horizontalSpacing -> horizontalSpacing
    int listSelector -> listSelector
    int mode -> mode
    int numColumns -> numColumns
    int numRows -> numRows
    int rowHeight -> rowHeight
    int scrollDirectionLandscape -> scrollDirectionLandscape
    int scrollDirectionPortrait -> scrollDirectionPortrait
    int scrollingCache -> scrollingCache
    int selectorDrawable -> selectorDrawable
    int selectorEnabled -> selectorEnabled
    int shadowDrawable -> shadowDrawable
    int shadowWidth -> shadowWidth
    int smoothScrollbar -> smoothScrollbar
    int stackFromBottom -> stackFromBottom
    int stretchMode -> stretchMode
    int touchModeAbove -> touchModeAbove
    int touchModeBehind -> touchModeBehind
    int transcriptMode -> transcriptMode
    int verticalSpacing -> verticalSpacing
    int viewAbove -> viewAbove
    int viewBehind -> viewBehind
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$color -> com.newland.payment.R$color:
    int common_bg -> common_bg
    int mainBgColor -> mainBgColor
    int mainColor -> mainColor
    int pb_timeout_bg -> pb_timeout_bg
    int transparent -> transparent
    int white -> white
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$dimen -> com.newland.payment.R$dimen:
    int dp0 -> dp0
    int dp1 -> dp1
    int dp10 -> dp10
    int dp100 -> dp100
    int dp11 -> dp11
    int dp110 -> dp110
    int dp12 -> dp12
    int dp120 -> dp120
    int dp122 -> dp122
    int dp127 -> dp127
    int dp13 -> dp13
    int dp135 -> dp135
    int dp14 -> dp14
    int dp140 -> dp140
    int dp148 -> dp148
    int dp15 -> dp15
    int dp16 -> dp16
    int dp160 -> dp160
    int dp17 -> dp17
    int dp18 -> dp18
    int dp2 -> dp2
    int dp20 -> dp20
    int dp22 -> dp22
    int dp226 -> dp226
    int dp230 -> dp230
    int dp24 -> dp24
    int dp240 -> dp240
    int dp25 -> dp25
    int dp26 -> dp26
    int dp27 -> dp27
    int dp28 -> dp28
    int dp3 -> dp3
    int dp30 -> dp30
    int dp32 -> dp32
    int dp33 -> dp33
    int dp330 -> dp330
    int dp34 -> dp34
    int dp35 -> dp35
    int dp350 -> dp350
    int dp36 -> dp36
    int dp360 -> dp360
    int dp38 -> dp38
    int dp4 -> dp4
    int dp40 -> dp40
    int dp400 -> dp400
    int dp42 -> dp42
    int dp43 -> dp43
    int dp44 -> dp44
    int dp46 -> dp46
    int dp48 -> dp48
    int dp49 -> dp49
    int dp5 -> dp5
    int dp50 -> dp50
    int dp56 -> dp56
    int dp570 -> dp570
    int dp6 -> dp6
    int dp60 -> dp60
    int dp7 -> dp7
    int dp70 -> dp70
    int dp8 -> dp8
    int dp80 -> dp80
    int dp84 -> dp84
    int dp92 -> dp92
    int keyboard_number_height_91 -> keyboard_number_height_91
    int login_frame_RL_marging -> login_frame_RL_marging
    int setting_item_height_91 -> setting_item_height_91
    int setting_margin_top -> setting_margin_top
    int sp12 -> sp12
    int sp14 -> sp14
    int sp15 -> sp15
    int sp16 -> sp16
    int sp17 -> sp17
    int sp18 -> sp18
    int sp20 -> sp20
    int sp21 -> sp21
    int sp22 -> sp22
    int sp24 -> sp24
    int sp25 -> sp25
    int sp26 -> sp26
    int sp30 -> sp30
    int sp33 -> sp33
    int sp40 -> sp40
    int width_81 -> width_81
    int width_91 -> width_91
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$drawable -> com.newland.payment.R$drawable:
    int activity_bg -> activity_bg
    int bg_consume_info -> bg_consume_info
    int bg_corner_green -> bg_corner_green
    int bg_corner_orange -> bg_corner_orange
    int bg_corner_red -> bg_corner_red
    int bg_corner_white -> bg_corner_white
    int bill_bg -> bill_bg
    int bill_dividing_line -> bill_dividing_line
    int bill_printer -> bill_printer
    int btn_back_selector -> btn_back_selector
    int btn_keyboard_0 -> btn_keyboard_0
    int btn_keyboard_1 -> btn_keyboard_1
    int btn_keyboard_2 -> btn_keyboard_2
    int btn_keyboard_3 -> btn_keyboard_3
    int btn_keyboard_4 -> btn_keyboard_4
    int btn_keyboard_5 -> btn_keyboard_5
    int btn_keyboard_6 -> btn_keyboard_6
    int btn_keyboard_7 -> btn_keyboard_7
    int btn_keyboard_8 -> btn_keyboard_8
    int btn_keyboard_9 -> btn_keyboard_9
    int btn_keyboard_backspeace -> btn_keyboard_backspeace
    int btn_keyboard_null -> btn_keyboard_null
    int check_bad -> check_bad
    int check_good -> check_good
    int commom_disenabled -> commom_disenabled
    int commom_loading -> commom_loading
    int commom_next -> commom_next
    int common_btn_blue -> common_btn_blue
    int common_cancel -> common_cancel
    int common_dialog_bg -> common_dialog_bg
    int common_dialog_horizontal_line -> common_dialog_horizontal_line
    int common_dialog_vertical_line -> common_dialog_vertical_line
    int common_dot_current -> common_dot_current
    int common_dot_ever -> common_dot_ever
    int common_inputbox -> common_inputbox
    int common_seach -> common_seach
    int common_select_check -> common_select_check
    int common_select_uncheck -> common_select_uncheck
    int h_login_remebered -> h_login_remebered
    int h_pb_timeout_progress -> h_pb_timeout_progress
    int h_print_receicp -> h_print_receicp
    int h_signature_bg -> h_signature_bg
    int h_swipe_card_1 -> h_swipe_card_1
    int h_swipe_card_2 -> h_swipe_card_2
    int h_swipe_card_demo_bg -> h_swipe_card_demo_bg
    int h_swipe_card_ic_1 -> h_swipe_card_ic_1
    int h_swipe_card_ic_2 -> h_swipe_card_ic_2
    int h_swipe_card_ic_txt -> h_swipe_card_ic_txt
    int h_swipe_card_ic_txt_2 -> h_swipe_card_ic_txt_2
    int h_swipe_card_rf_1 -> h_swipe_card_rf_1
    int h_swipe_card_rf_2 -> h_swipe_card_rf_2
    int h_swipe_card_rf_txt -> h_swipe_card_rf_txt
    int h_swipe_card_rf_txt_2 -> h_swipe_card_rf_txt_2
    int h_swipe_card_txt -> h_swipe_card_txt
    int h_swipe_card_txt_2 -> h_swipe_card_txt_2
    int h_trans_fail -> h_trans_fail
    int h_trans_succes -> h_trans_succes
    int ic_back_n -> ic_back_n
    int ic_back_p -> ic_back_p
    int ic_cancel -> ic_cancel
    int ic_complete -> ic_complete
    int ic_delete -> ic_delete
    int ic_dotted_line -> ic_dotted_line
    int ic_launcher -> ic_launcher
    int ic_print -> ic_print
    int ic_readcard -> ic_readcard
    int ic_right -> ic_right
    int ic_trade_progress -> ic_trade_progress
    int ic_warn -> ic_warn
    int ic_warn_large -> ic_warn_large
    int keyboard_0 -> keyboard_0
    int keyboard_1 -> keyboard_1
    int keyboard_2 -> keyboard_2
    int keyboard_3 -> keyboard_3
    int keyboard_4 -> keyboard_4
    int keyboard_5 -> keyboard_5
    int keyboard_6 -> keyboard_6
    int keyboard_7 -> keyboard_7
    int keyboard_8 -> keyboard_8
    int keyboard_9 -> keyboard_9
    int keyboard_bacespeace -> keyboard_bacespeace
    int keyboard_cancel -> keyboard_cancel
    int keyboard_confirm -> keyboard_confirm
    int keyboard_dot -> keyboard_dot
    int keyboard_large_0 -> keyboard_large_0
    int keyboard_large_1 -> keyboard_large_1
    int keyboard_large_2 -> keyboard_large_2
    int keyboard_large_3 -> keyboard_large_3
    int keyboard_large_4 -> keyboard_large_4
    int keyboard_large_5 -> keyboard_large_5
    int keyboard_large_6 -> keyboard_large_6
    int keyboard_large_7 -> keyboard_large_7
    int keyboard_large_8 -> keyboard_large_8
    int keyboard_large_9 -> keyboard_large_9
    int keyboard_null_left -> keyboard_null_left
    int keyboard_null_right -> keyboard_null_right
    int keyboard_number_0 -> keyboard_number_0
    int keyboard_number_0_press -> keyboard_number_0_press
    int keyboard_number_1 -> keyboard_number_1
    int keyboard_number_1_press -> keyboard_number_1_press
    int keyboard_number_2 -> keyboard_number_2
    int keyboard_number_2_press -> keyboard_number_2_press
    int keyboard_number_3 -> keyboard_number_3
    int keyboard_number_3_press -> keyboard_number_3_press
    int keyboard_number_4 -> keyboard_number_4
    int keyboard_number_4_press -> keyboard_number_4_press
    int keyboard_number_5 -> keyboard_number_5
    int keyboard_number_5_press -> keyboard_number_5_press
    int keyboard_number_6 -> keyboard_number_6
    int keyboard_number_6_press -> keyboard_number_6_press
    int keyboard_number_7 -> keyboard_number_7
    int keyboard_number_7_press -> keyboard_number_7_press
    int keyboard_number_8 -> keyboard_number_8
    int keyboard_number_8_press -> keyboard_number_8_press
    int keyboard_number_9 -> keyboard_number_9
    int keyboard_number_9_press -> keyboard_number_9_press
    int keyboard_number_backspace -> keyboard_number_backspace
    int keyboard_number_backspace_press -> keyboard_number_backspace_press
    int keyboard_number_big_0 -> keyboard_number_big_0
    int keyboard_number_big_1 -> keyboard_number_big_1
    int keyboard_number_big_2 -> keyboard_number_big_2
    int keyboard_number_big_3 -> keyboard_number_big_3
    int keyboard_number_big_4 -> keyboard_number_big_4
    int keyboard_number_big_5 -> keyboard_number_big_5
    int keyboard_number_big_6 -> keyboard_number_big_6
    int keyboard_number_big_7 -> keyboard_number_big_7
    int keyboard_number_big_8 -> keyboard_number_big_8
    int keyboard_number_big_9 -> keyboard_number_big_9
    int keyboard_number_cancel -> keyboard_number_cancel
    int keyboard_number_cancel_press -> keyboard_number_cancel_press
    int keyboard_number_dot -> keyboard_number_dot
    int keyboard_number_dot_press -> keyboard_number_dot_press
    int keyboard_number_enter -> keyboard_number_enter
    int keyboard_number_enter_press -> keyboard_number_enter_press
    int keyboard_number_null_left -> keyboard_number_null_left
    int keyboard_number_null_left_press -> keyboard_number_null_left_press
    int keyboard_number_null_right -> keyboard_number_null_right
    int keyboard_number_null_right_press -> keyboard_number_null_right_press
    int keyboard_number_star -> keyboard_number_star
    int keyboard_number_star_press -> keyboard_number_star_press
    int keyboard_number_well -> keyboard_number_well
    int keyboard_number_well_press -> keyboard_number_well_press
    int keyboard_star -> keyboard_star
    int keyboard_well -> keyboard_well
    int launch_bg -> launch_bg
    int launch_retry -> launch_retry
    int loading -> loading
    int loading_dot -> loading_dot
    int login_btn -> login_btn
    int login_icon_password -> login_icon_password
    int login_icon_user -> login_icon_user
    int login_line -> login_line
    int login_mark -> login_mark
    int login_mark_box -> login_mark_box
    int main_icon_1 -> main_icon_1
    int main_icon_11 -> main_icon_11
    int main_icon_17 -> main_icon_17
    int main_icon_18 -> main_icon_18
    int main_icon_19 -> main_icon_19
    int main_icon_2 -> main_icon_2
    int main_icon_20 -> main_icon_20
    int main_icon_23 -> main_icon_23
    int main_icon_24 -> main_icon_24
    int main_icon_25 -> main_icon_25
    int main_icon_26 -> main_icon_26
    int main_icon_27 -> main_icon_27
    int main_icon_28 -> main_icon_28
    int main_icon_29 -> main_icon_29
    int main_icon_3 -> main_icon_3
    int main_icon_30 -> main_icon_30
    int main_icon_31 -> main_icon_31
    int main_icon_32 -> main_icon_32
    int main_icon_33 -> main_icon_33
    int main_icon_34 -> main_icon_34
    int main_icon_35 -> main_icon_35
    int main_icon_36 -> main_icon_36
    int main_icon_37 -> main_icon_37
    int main_icon_38 -> main_icon_38
    int main_icon_39 -> main_icon_39
    int main_icon_4 -> main_icon_4
    int main_icon_40 -> main_icon_40
    int main_icon_52 -> main_icon_52
    int main_icon_53 -> main_icon_53
    int main_icon_54 -> main_icon_54
    int main_icon_56 -> main_icon_56
    int main_icon_57 -> main_icon_57
    int main_icon_59 -> main_icon_59
    int main_icon_6 -> main_icon_6
    int main_icon_60 -> main_icon_60
    int main_icon_61 -> main_icon_61
    int main_icon_7 -> main_icon_7
    int main_icon_8 -> main_icon_8
    int main_icon_9 -> main_icon_9
    int main_title_back -> main_title_back
    int p_keyboard_0 -> p_keyboard_0
    int p_keyboard_1 -> p_keyboard_1
    int p_keyboard_2 -> p_keyboard_2
    int p_keyboard_3 -> p_keyboard_3
    int p_keyboard_4 -> p_keyboard_4
    int p_keyboard_5 -> p_keyboard_5
    int p_keyboard_6 -> p_keyboard_6
    int p_keyboard_7 -> p_keyboard_7
    int p_keyboard_8 -> p_keyboard_8
    int p_keyboard_9 -> p_keyboard_9
    int p_keyboard_backspeace -> p_keyboard_backspeace
    int p_keyboard_null -> p_keyboard_null
    int password_input12_view -> password_input12_view
    int password_input4_view -> password_input4_view
    int password_input6_view -> password_input6_view
    int password_input8_view -> password_input8_view
    int password_input_dute -> password_input_dute
    int setting_right -> setting_right
    int signature_bg -> signature_bg
    int signature_cancel -> signature_cancel
    int signature_clear_btn -> signature_clear_btn
    int signature_clear_disable -> signature_clear_disable
    int signature_clear_normal -> signature_clear_normal
    int signature_confirm -> signature_confirm
    int slid_left -> slid_left
    int slid_right -> slid_right
    int swipe_card_1 -> swipe_card_1
    int swipe_card_23 -> swipe_card_23
    int swipe_card_cross -> swipe_card_cross
    int swipe_card_ic_1 -> swipe_card_ic_1
    int swipe_card_ic_23 -> swipe_card_ic_23
    int swipe_card_ic_txt_1 -> swipe_card_ic_txt_1
    int swipe_card_ic_txt_23 -> swipe_card_ic_txt_23
    int swipe_card_rf_1 -> swipe_card_rf_1
    int swipe_card_rf_23 -> swipe_card_rf_23
    int swipe_card_rf_txt_1 -> swipe_card_rf_txt_1
    int swipe_card_rf_txt_23 -> swipe_card_rf_txt_23
    int swipe_card_txt_1 -> swipe_card_txt_1
    int swipe_card_txt_23 -> swipe_card_txt_23
    int swiping_dialog_bg -> swiping_dialog_bg
    int switch_icon -> switch_icon
    int switch_off -> switch_off
    int switch_on -> switch_on
    int system_settings_item -> system_settings_item
    int system_settings_nextpage -> system_settings_nextpage
    int toast_bg -> toast_bg
    int trans_select_icon -> trans_select_icon
    int trans_succes_btn -> trans_succes_btn
    int wheel_bg -> wheel_bg
    int wheel_val -> wheel_val
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$id -> com.newland.payment.R$id:
    int alwaysScroll -> alwaysScroll
    int auto_fit -> auto_fit
    int bottom -> bottom
    int bt -> bt
    int btnMainChanggePwd -> btnMainChanggePwd
    int btnOperatorAdd -> btnOperatorAdd
    int btnOperatorChangePwd -> btnOperatorChangePwd
    int btnOperatorDel -> btnOperatorDel
    int btnOperatorSearch -> btnOperatorSearch
    int btn_confirm -> btn_confirm
    int btn_do_trade -> btn_do_trade
    int btn_next -> btn_next
    int btn_print_detail -> btn_print_detail
    int btn_result_return_main -> btn_result_return_main
    int btn_sure -> btn_sure
    int button -> button
    int center -> center
    int center_horizontal -> center_horizontal
    int center_vertical -> center_vertical
    int clip_horizontal -> clip_horizontal
    int clip_vertical -> clip_vertical
    int columnWidth -> columnWidth
    int cv_communication_port -> cv_communication_port
    int cv_ic_card -> cv_ic_card
    int cv_keyboard -> cv_keyboard
    int cv_print -> cv_print
    int date_wheel_view -> date_wheel_view
    int disabled -> disabled
    int discount_amount -> discount_amount
    int et_amount -> et_amount
    int et_card_no -> et_card_no
    int et_content -> et_content
    int et_ip_1 -> et_ip_1
    int et_ip_2 -> et_ip_2
    int et_ip_3 -> et_ip_3
    int et_ip_4 -> et_ip_4
    int et_password -> et_password
    int et_refer_no -> et_refer_no
    int et_refund -> et_refund
    int et_user -> et_user
    int et_voucher_no -> et_voucher_no
    int fill -> fill
    int fill_horizontal -> fill_horizontal
    int fill_vertical -> fill_vertical
    int fl_fragment -> fl_fragment
    int fullscreen -> fullscreen
    int gpv_input_password -> gpv_input_password
    int holder_util_tag_key -> holder_util_tag_key
    int horizontal -> horizontal
    int inputView -> inputView
    int item_check -> item_check
    int item_name -> item_name
    int iv_0 -> iv_0
    int iv_1 -> iv_1
    int iv_2 -> iv_2
    int iv_3 -> iv_3
    int iv_4 -> iv_4
    int iv_5 -> iv_5
    int iv_6 -> iv_6
    int iv_7 -> iv_7
    int iv_8 -> iv_8
    int iv_9 -> iv_9
    int iv_backspeace -> iv_backspeace
    int iv_cancel -> iv_cancel
    int iv_close -> iv_close
    int iv_delete -> iv_delete
    int iv_dot -> iv_dot
    int iv_enter -> iv_enter
    int iv_icon -> iv_icon
    int iv_icon_2 -> iv_icon_2
    int iv_left -> iv_left
    int iv_line -> iv_line
    int iv_line_middle -> iv_line_middle
    int iv_rememeber -> iv_rememeber
    int iv_remind -> iv_remind
    int iv_remind_2 -> iv_remind_2
    int iv_result -> iv_result
    int iv_right -> iv_right
    int iv_star -> iv_star
    int iv_switch -> iv_switch
    int iv_switch_bg -> iv_switch_bg
    int iv_value -> iv_value
    int iv_waiting -> iv_waiting
    int iv_well -> iv_well
    int kb_num -> kb_num
    int key_board_number -> key_board_number
    int key_board_number_manager -> key_board_number_manager
    int left -> left
    int list_view -> list_view
    int ll_keyborad -> ll_keyborad
    int ll_main -> ll_main
    int ll_password -> ll_password
    int ll_voucher_no -> ll_voucher_no
    int loading_view -> loading_view
    int lv_operator_list -> lv_operator_list
    int lv_select -> lv_select
    int margin -> margin
    int none -> none
    int normal -> normal
    int numberPassword -> numberPassword
    int password_input_view -> password_input_view
    int pay_amount -> pay_amount
    int progress -> progress
    int right -> right
    int rl_title -> rl_title
    int setting_communication -> setting_communication
    int setting_load_key -> setting_load_key
    int setting_other -> setting_other
    int setting_password -> setting_password
    int setting_print_manage -> setting_print_manage
    int setting_qps_manage -> setting_qps_manage
    int setting_secret_key -> setting_secret_key
    int setting_shop -> setting_shop
    int setting_switch_view -> setting_switch_view
    int setting_sys_manager_password -> setting_sys_manager_password
    int setting_sys_safe_password -> setting_sys_safe_password
    int setting_system -> setting_system
    int setting_trans -> setting_trans
    int slid_prompt -> slid_prompt
    int spacingWidth -> spacingWidth
    int spacingWidthUniform -> spacingWidthUniform
    int switch_view -> switch_view
    int textPassword -> textPassword
    int textVisiblePassword -> textVisiblePassword
    int textWebPassword -> textWebPassword
    int time_out_progress_bar -> time_out_progress_bar
    int time_wheel_view -> time_wheel_view
    int toast_icon -> toast_icon
    int toast_message -> toast_message
    int top -> top
    int tv_amount -> tv_amount
    int tv_balance -> tv_balance
    int tv_car_no -> tv_car_no
    int tv_card_name -> tv_card_name
    int tv_card_no -> tv_card_no
    int tv_card_oil_kind -> tv_card_oil_kind
    int tv_card_type -> tv_card_type
    int tv_content -> tv_content
    int tv_dialog_tips -> tv_dialog_tips
    int tv_err_msg -> tv_err_msg
    int tv_input_tip -> tv_input_tip
    int tv_liter -> tv_liter
    int tv_num_0 -> tv_num_0
    int tv_num_1 -> tv_num_1
    int tv_num_2 -> tv_num_2
    int tv_num_3 -> tv_num_3
    int tv_num_4 -> tv_num_4
    int tv_num_5 -> tv_num_5
    int tv_num_6 -> tv_num_6
    int tv_num_7 -> tv_num_7
    int tv_num_8 -> tv_num_8
    int tv_num_9 -> tv_num_9
    int tv_oil_kind -> tv_oil_kind
    int tv_operator_dialog_tip1 -> tv_operator_dialog_tip1
    int tv_operator_dialog_tip2 -> tv_operator_dialog_tip2
    int tv_operator_dialog_tip3 -> tv_operator_dialog_tip3
    int tv_operator_dialog_title -> tv_operator_dialog_title
    int tv_order_oil_kind -> tv_order_oil_kind
    int tv_price -> tv_price
    int tv_tip -> tv_tip
    int tv_tip_msg -> tv_tip_msg
    int tv_title -> tv_title
    int tv_trans_result -> tv_trans_result
    int tv_trans_result_content -> tv_trans_result_content
    int tv_trans_result_logo -> tv_trans_result_logo
    int tv_voucher_no -> tv_voucher_no
    int txt_auth_code -> txt_auth_code
    int txt_back -> txt_back
    int txt_back_page -> txt_back_page
    int txt_cancel -> txt_cancel
    int txt_card_no -> txt_card_no
    int txt_cdma -> txt_cdma
    int txt_center -> txt_center
    int txt_clear_emv -> txt_clear_emv
    int txt_clear_request_processing -> txt_clear_request_processing
    int txt_clear_reverse_flag -> txt_clear_reverse_flag
    int txt_clear_script_execution_result_of_the_water -> txt_clear_script_execution_result_of_the_water
    int txt_clear_script_flag -> txt_clear_script_flag
    int txt_clear_settlement_marks -> txt_clear_settlement_marks
    int txt_content -> txt_content
    int txt_current_size -> txt_current_size
    int txt_date -> txt_date
    int txt_day -> txt_day
    int txt_gprs -> txt_gprs
    int txt_input -> txt_input
    int txt_integer -> txt_integer
    int txt_load_key_info -> txt_load_key_info
    int txt_login -> txt_login
    int txt_max_size -> txt_max_size
    int txt_merchant_name -> txt_merchant_name
    int txt_merchant_no -> txt_merchant_no
    int txt_middle -> txt_middle
    int txt_money -> txt_money
    int txt_more_version_flag -> txt_more_version_flag
    int txt_mouth -> txt_mouth
    int txt_name -> txt_name
    int txt_next_page -> txt_next_page
    int txt_param_print -> txt_param_print
    int txt_pos_id -> txt_pos_id
    int txt_print -> txt_print
    int txt_print_communication -> txt_print_communication
    int txt_print_emv -> txt_print_emv
    int txt_print_other -> txt_print_other
    int txt_print_shop_info -> txt_print_shop_info
    int txt_print_system_control -> txt_print_system_control
    int txt_print_trans_control -> txt_print_trans_control
    int txt_print_version -> txt_print_version
    int txt_progress -> txt_progress
    int txt_ref_no -> txt_ref_no
    int txt_remind -> txt_remind
    int txt_remind_2 -> txt_remind_2
    int txt_reset_flag -> txt_reset_flag
    int txt_reset_manager_password -> txt_reset_manager_password
    int txt_reset_pos_params -> txt_reset_pos_params
    int txt_retry -> txt_retry
    int txt_search_waters_result -> txt_search_waters_result
    int txt_set_emv -> txt_set_emv
    int txt_set_no_sign -> txt_set_no_sign
    int txt_set_signed -> txt_set_signed
    int txt_setting_clear_rush_water -> txt_setting_clear_rush_water
    int txt_setting_clear_trans_water -> txt_setting_clear_trans_water
    int txt_setting_other_down_load -> txt_setting_other_down_load
    int txt_setting_other_download_bin_b_update -> txt_setting_other_download_bin_b_update
    int txt_setting_other_download_bin_c_update -> txt_setting_other_download_bin_c_update
    int txt_setting_other_download_blacklist -> txt_setting_other_download_blacklist
    int txt_setting_other_download_echo_test -> txt_setting_other_download_echo_test
    int txt_setting_other_download_ic_param -> txt_setting_other_download_ic_param
    int txt_setting_other_download_ic_public_key -> txt_setting_other_download_ic_public_key
    int txt_setting_other_download_parameter_pass -> txt_setting_other_download_parameter_pass
    int txt_setting_other_download_rf_param -> txt_setting_other_download_rf_param
    int txt_setting_other_download_state_upload -> txt_setting_other_download_state_upload
    int txt_setting_other_elecsign -> txt_setting_other_elecsign
    int txt_setting_print -> txt_setting_print
    int txt_setting_print_other -> txt_setting_print_other
    int txt_setting_secret_key_des -> txt_setting_secret_key_des
    int txt_setting_secret_key_head -> txt_setting_secret_key_head
    int txt_setting_system_flash_card -> txt_setting_system_flash_card
    int txt_setting_system_keypoard_password -> txt_setting_system_keypoard_password
    int txt_setting_system_now_time -> txt_setting_system_now_time
    int txt_setting_system_other -> txt_setting_system_other
    int txt_setting_trans_closing -> txt_setting_trans_closing
    int txt_setting_trans_input_password -> txt_setting_trans_input_password
    int txt_setting_trans_off_line -> txt_setting_trans_off_line
    int txt_setting_trans_other -> txt_setting_trans_other
    int txt_setting_trans_retry_no -> txt_setting_trans_retry_no
    int txt_setting_trans_swipe -> txt_setting_trans_swipe
    int txt_setting_trans_switch -> txt_setting_trans_switch
    int txt_setting_trans_switch_ec -> txt_setting_trans_switch_ec
    int txt_setting_trans_switch_tradition -> txt_setting_trans_switch_tradition
    int txt_skip -> txt_skip
    int txt_sure -> txt_sure
    int txt_title -> txt_title
    int txt_trans_type -> txt_trans_type
    int txt_version -> txt_version
    int txt_voucher -> txt_voucher
    int txt_wifi -> txt_wifi
    int txt_year -> txt_year
    int v_main -> v_main
    int v_progress -> v_progress
    int v_shade -> v_shade
    int vertical -> vertical
    int view_pager -> view_pager
    int view_status_bar -> view_status_bar
    int ww_day -> ww_day
    int ww_hour -> ww_hour
    int ww_minute -> ww_minute
    int ww_mouth -> ww_mouth
    int ww_second -> ww_second
    int ww_year -> ww_year
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$layout -> com.newland.payment.R$layout:
    int amount_edit_text -> amount_edit_text
    int balance_fragment -> balance_fragment
    int blank_fragment -> blank_fragment
    int card_fragment -> card_fragment
    int card_remind_view -> card_remind_view
    int card_three_remind_view -> card_three_remind_view
    int card_two_remind_view -> card_two_remind_view
    int check_view -> check_view
    int choose_date_fragment -> choose_date_fragment
    int common_date_dialog -> common_date_dialog
    int common_dialog_view -> common_dialog_view
    int common_input_dialog_view -> common_input_dialog_view
    int common_select_view -> common_select_view
    int common_time_dialog -> common_time_dialog
    int confirm_info_fragment -> confirm_info_fragment
    int date_wheel_view -> date_wheel_view
    int date_wheel_view_2 -> date_wheel_view_2
    int dialog_confirm -> dialog_confirm
    int divider -> divider
    int dot_view_pager -> dot_view_pager
    int ec_load_log_item_fragment -> ec_load_log_item_fragment
    int ec_load_log_list_fragment -> ec_load_log_list_fragment
    int empty_view -> empty_view
    int gridpasswordview -> gridpasswordview
    int input_info_fragment -> input_info_fragment
    int input_money_fragment -> input_money_fragment
    int input_pin_fragment -> input_pin_fragment
    int input_pin_offline_fragment -> input_pin_offline_fragment
    int ip_edit_text -> ip_edit_text
    int item_view -> item_view
    int keyboard_lock_screen -> keyboard_lock_screen
    int keyboard_number -> keyboard_number
    int keyboard_password -> keyboard_password
    int launch_activity -> launch_activity
    int layout_balance_readcard -> layout_balance_readcard
    int layout_consume_info -> layout_consume_info
    int layout_consume_readcard -> layout_consume_readcard
    int layout_refund_readcard -> layout_refund_readcard
    int layout_void_consume_readcard -> layout_void_consume_readcard
    int loading_view -> loading_view
    int lock_fragment -> lock_fragment
    int login_fragment -> login_fragment
    int main_activity -> main_activity
    int main_fragment -> main_fragment
    int main_menu_item -> main_menu_item
    int manager_password_dialog -> manager_password_dialog
    int new_input_info_fragment -> new_input_info_fragment
    int new_input_pin_fragment -> new_input_pin_fragment
    int operator_change_pwd_fragment -> operator_change_pwd_fragment
    int operator_del_add_fragment -> operator_del_add_fragment
    int operator_management_fragment -> operator_management_fragment
    int operator_no_list_dialog -> operator_no_list_dialog
    int password_input12_view -> password_input12_view
    int password_input4_view -> password_input4_view
    int password_input6_view -> password_input6_view
    int password_input8_view -> password_input8_view
    int pboc_log_item_fragment -> pboc_log_item_fragment
    int pboc_log_list_fragment -> pboc_log_list_fragment
    int progress_contain_cutdown_text_tip -> progress_contain_cutdown_text_tip
    int setting_choose_view -> setting_choose_view
    int setting_communication_cdma_fragment -> setting_communication_cdma_fragment
    int setting_communication_fragment -> setting_communication_fragment
    int setting_communication_gprs_fragment -> setting_communication_gprs_fragment
    int setting_communication_wifi_fragment -> setting_communication_wifi_fragment
    int setting_date_view -> setting_date_view
    int setting_des_fragment -> setting_des_fragment
    int setting_edit_view -> setting_edit_view
    int setting_flash_card_fragment -> setting_flash_card_fragment
    int setting_ip_view -> setting_ip_view
    int setting_keyboard_fragment -> setting_keyboard_fragment
    int setting_mpos_fragment -> setting_mpos_fragment
    int setting_mpos_load_key_fragment -> setting_mpos_load_key_fragment
    int setting_offline_up_fragment -> setting_offline_up_fragment
    int setting_other_download_fragment -> setting_other_download_fragment
    int setting_other_elec_sign_fragment -> setting_other_elec_sign_fragment
    int setting_other_fragment -> setting_other_fragment
    int setting_password_manager_fragment -> setting_password_manager_fragment
    int setting_print_fragment -> setting_print_fragment
    int setting_print_other_fragment -> setting_print_other_fragment
    int setting_print_params_fragment -> setting_print_params_fragment
    int setting_print_setting_fragment -> setting_print_setting_fragment
    int setting_qps_fragment -> setting_qps_fragment
    int setting_resend_times_fragment -> setting_resend_times_fragment
    int setting_secret_key_fragment -> setting_secret_key_fragment
    int setting_secret_key_head_fragment -> setting_secret_key_head_fragment
    int setting_shop_fragment -> setting_shop_fragment
    int setting_switch_item -> setting_switch_item
    int setting_switch_list_fragment -> setting_switch_list_fragment
    int setting_switch_view -> setting_switch_view
    int setting_system_fragment -> setting_system_fragment
    int setting_system_other_fragment -> setting_system_other_fragment
    int setting_time_fragment -> setting_time_fragment
    int setting_trans_fragment -> setting_trans_fragment
    int setting_trans_other_control -> setting_trans_other_control
    int setting_trans_switch_fragment -> setting_trans_switch_fragment
    int shop_manager_login_fragment -> shop_manager_login_fragment
    int shop_manager_reset_flag_fragment -> shop_manager_reset_flag_fragment
    int show_trans_state_fragment -> show_trans_state_fragment
    int signatrue_fragment -> signatrue_fragment
    int switch_view -> switch_view
    int system_manage_fragment -> system_manage_fragment
    int textview -> textview
    int time_out_progress_bar -> time_out_progress_bar
    int time_wheel_view -> time_wheel_view
    int toast_view -> toast_view
    int trans_select_list_fragment -> trans_select_list_fragment
    int trans_select_list_item_fragment -> trans_select_list_item_fragment
    int trans_total_list_fragment -> trans_total_list_fragment
    int transaction_fragment -> transaction_fragment
    int view_number_keyboard -> view_number_keyboard
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$raw -> com.newland.payment.R$raw:
    int longbeep -> longbeep
    int longwarning -> longwarning
    int shortbeep -> shortbeep
    int systemtip -> systemtip
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$string -> com.newland.payment.R$string:
    int access_number -> access_number
    int add_operator_scs -> add_operator_scs
    int amount_recharge_cancel -> amount_recharge_cancel
    int anew_print_statement -> anew_print_statement
    int app_name -> app_name
    int appoint_phone_no -> appoint_phone_no
    int auth_sale_mode -> auth_sale_mode
    int balance -> balance
    int balance_money -> balance_money
    int balance_transaction_type -> balance_transaction_type
    int balance_yuan -> balance_yuan
    int bill_act -> bill_act
    int bill_balance_after_load -> bill_balance_after_load
    int bill_balance_before_load -> bill_balance_before_load
    int bill_cut_receipt -> bill_cut_receipt
    int bill_date -> bill_date
    int bill_merchant_name -> bill_merchant_name
    int bill_merchant_no -> bill_merchant_no
    int bill_money -> bill_money
    int bill_other_money -> bill_other_money
    int bill_p1 -> bill_p1
    int bill_p2 -> bill_p2
    int bill_pos_id -> bill_pos_id
    int bill_printing_defuat_tip -> bill_printing_defuat_tip
    int bill_printing_receipt -> bill_printing_receipt
    int bill_ref_no -> bill_ref_no
    int bill_result_fail -> bill_result_fail
    int bill_result_print_success -> bill_result_print_success
    int bill_result_success -> bill_result_success
    int card_check_support_rf_card -> card_check_support_rf_card
    int card_read_error -> card_read_error
    int card_read_fail_fallback -> card_read_fail_fallback
    int card_swipe_in_card -> card_swipe_in_card
    int card_swipe_out_card -> card_swipe_out_card
    int card_unsupport_ic_card -> card_unsupport_ic_card
    int cg_main_password_fail -> cg_main_password_fail
    int cg_main_password_scs -> cg_main_password_scs
    int cg_operator_password_scs -> cg_operator_password_scs
    int cg_safe_password_scs -> cg_safe_password_scs
    int cg_sys_password_fail -> cg_sys_password_fail
    int cg_sys_password_scs -> cg_sys_password_scs
    int check_detail -> check_detail
    int check_ecload_log -> check_ecload_log
    int choose_date_choose_date -> choose_date_choose_date
    int choose_date_choose_indate -> choose_date_choose_indate
    int choose_date_choose_transaction -> choose_date_choose_transaction
    int choose_date_day -> choose_date_day
    int choose_date_hour -> choose_date_hour
    int choose_date_minute -> choose_date_minute
    int choose_date_mouth -> choose_date_mouth
    int choose_date_next_string -> choose_date_next_string
    int choose_date_second -> choose_date_second
    int choose_date_year -> choose_date_year
    int cipher_cancel -> cipher_cancel
    int cipher_exception -> cipher_exception
    int cipher_timeout -> cipher_timeout
    int clear_request_processing -> clear_request_processing
    int clear_script_execution_result_of_the_water -> clear_script_execution_result_of_the_water
    int clear_settlement_marks -> clear_settlement_marks
    int comm_connect_fail -> comm_connect_fail
    int comm_connect_timeout -> comm_connect_timeout
    int comm_fail -> comm_fail
    int comm_receive_data -> comm_receive_data
    int comm_reverse_waitting -> comm_reverse_waitting
    int comm_script_waitting -> comm_script_waitting
    int comm_sign_waitting -> comm_sign_waitting
    int comm_waitting_network -> comm_waitting_network
    int common_auth_code -> common_auth_code
    int common_back -> common_back
    int common_back_page -> common_back_page
    int common_balance -> common_balance
    int common_big -> common_big
    int common_cancel -> common_cancel
    int common_cancel_trans_tip_msg -> common_cancel_trans_tip_msg
    int common_card_no -> common_card_no
    int common_cardno_comfirm -> common_cardno_comfirm
    int common_check_balance -> common_check_balance
    int common_chinese -> common_chinese
    int common_clear_emv -> common_clear_emv
    int common_clear_reverse_flag -> common_clear_reverse_flag
    int common_clear_shell_flag -> common_clear_shell_flag
    int common_clear_succ -> common_clear_succ
    int common_colon -> common_colon
    int common_consumption -> common_consumption
    int common_contack_elec_cash -> common_contack_elec_cash
    int common_country_code -> common_country_code
    int common_currency_code -> common_currency_code
    int common_date -> common_date
    int common_dot -> common_dot
    int common_elec_cash -> common_elec_cash
    int common_exit_app -> common_exit_app
    int common_fail -> common_fail
    int common_input_amount_not_enough -> common_input_amount_not_enough
    int common_input_card_no -> common_input_card_no
    int common_input_main_key_fail -> common_input_main_key_fail
    int common_input_main_key_success -> common_input_main_key_success
    int common_input_not_allow_empty -> common_input_not_allow_empty
    int common_input_not_enough -> common_input_not_enough
    int common_input_too_long -> common_input_too_long
    int common_insert_consumption -> common_insert_consumption
    int common_leading_in -> common_leading_in
    int common_lock_terminal -> common_lock_terminal
    int common_logo -> common_logo
    int common_main -> common_main
    int common_manage -> common_manage
    int common_middle -> common_middle
    int common_more_version_flag -> common_more_version_flag
    int common_next -> common_next
    int common_next_page -> common_next_page
    int common_no_water -> common_no_water
    int common_offline_settlement -> common_offline_settlement
    int common_old_batch_no -> common_old_batch_no
    int common_old_ter_no -> common_old_ter_no
    int common_old_trace_no -> common_old_trace_no
    int common_operator_add -> common_operator_add
    int common_operator_chang_pwd -> common_operator_chang_pwd
    int common_operator_del -> common_operator_del
    int common_operator_manage -> common_operator_manage
    int common_operator_sign_in -> common_operator_sign_in
    int common_operator_sign_in_score -> common_operator_sign_in_score
    int common_operator_sign_in_score_sucs -> common_operator_sign_in_score_sucs
    int common_other -> common_other
    int common_pack -> common_pack
    int common_password -> common_password
    int common_pls_confirm -> common_pls_confirm
    int common_pls_input -> common_pls_input
    int common_pls_input_right_info -> common_pls_input_right_info
    int common_pre_author -> common_pre_author
    int common_pre_author_finish -> common_pre_author_finish
    int common_pre_author_finish_notice -> common_pre_author_finish_notice
    int common_pre_author_finish_revocation -> common_pre_author_finish_revocation
    int common_pre_author_revocation -> common_pre_author_revocation
    int common_print -> common_print
    int common_print_consumption_all -> common_print_consumption_all
    int common_print_consumption_detail -> common_print_consumption_detail
    int common_print_detail -> common_print_detail
    int common_qps_bin_a -> common_qps_bin_a
    int common_qps_bin_b -> common_qps_bin_b
    int common_qps_cdcvm -> common_qps_cdcvm
    int common_qps_manage -> common_qps_manage
    int common_qps_no_psw -> common_qps_no_psw
    int common_qps_no_psw_limit -> common_qps_no_psw_limit
    int common_qps_no_sign -> common_qps_no_sign
    int common_qps_no_sign_limit -> common_qps_no_sign_limit
    int common_receive_exception -> common_receive_exception
    int common_repeal_pre_authorization -> common_repeal_pre_authorization
    int common_reprint_clearing_total_list -> common_reprint_clearing_total_list
    int common_reprint_trait_last -> common_reprint_trait_last
    int common_reprint_trait_random -> common_reprint_trait_random
    int common_reset_flag -> common_reset_flag
    int common_reset_manager_password -> common_reset_manager_password
    int common_reset_pos_params -> common_reset_pos_params
    int common_reset_pos_params_succ -> common_reset_pos_params_succ
    int common_respon -> common_respon
    int common_return_goods -> common_return_goods
    int common_revocation -> common_revocation
    int common_search_by_evidence -> common_search_by_evidence
    int common_search_consumption -> common_search_consumption
    int common_search_consumption_all -> common_search_consumption_all
    int common_search_consumption_detail -> common_search_consumption_detail
    int common_select_success -> common_select_success
    int common_set_emv -> common_set_emv
    int common_set_no_sign -> common_set_no_sign
    int common_set_signed -> common_set_signed
    int common_set_succ -> common_set_succ
    int common_settlement -> common_settlement
    int common_settlement_adjust -> common_settlement_adjust
    int common_sign_in -> common_sign_in
    int common_sign_in_pos -> common_sign_in_pos
    int common_sign_out -> common_sign_out
    int common_sign_out_susc -> common_sign_out_susc
    int common_small -> common_small
    int common_sure -> common_sure
    int common_test_success -> common_test_success
    int common_tip_title -> common_tip_title
    int common_total -> common_total
    int common_trans_ecnotuchsale -> common_trans_ecnotuchsale
    int common_upload_success -> common_upload_success
    int common_user_name -> common_user_name
    int common_version -> common_version
    int common_voucher -> common_voucher
    int communication_out_time -> communication_out_time
    int communication_type -> communication_type
    int connect_apn -> connect_apn
    int connect_apn_choose -> connect_apn_choose
    int connect_apn_name_custom -> connect_apn_name_custom
    int connect_apn_name_default -> connect_apn_name_default
    int connect_mode -> connect_mode
    int connect_mode_long -> connect_mode_long
    int connect_mode_short -> connect_mode_short
    int connect_type_cdma -> connect_type_cdma
    int connect_type_gprs -> connect_type_gprs
    int connect_type_wifi -> connect_type_wifi
    int default_trans_type -> default_trans_type
    int del_operator_password_scs -> del_operator_password_scs
    int del_self_err -> del_self_err
    int elec_resign_times -> elec_resign_times
    int elec_sign_title -> elec_sign_title
    int elec_timeout -> elec_timeout
    int encrypt_mode -> encrypt_mode
    int encrypt_mode_double -> encrypt_mode_double
    int encrypt_mode_single -> encrypt_mode_single
    int error_data -> error_data
    int error_device_busy -> error_device_busy
    int error_format_length -> error_format_length
    int error_input_main_key_index -> error_input_main_key_index
    int error_main_key_length -> error_main_key_length
    int error_max -> error_max
    int error_min -> error_min
    int error_min_length -> error_min_length
    int error_min_second -> error_min_second
    int error_not_authoff -> error_not_authoff
    int error_not_authsale -> error_not_authsale
    int error_not_null -> error_not_null
    int error_over_limit_amount -> error_over_limit_amount
    int error_pack_exception -> error_pack_exception
    int error_password -> error_password
    int error_print_data -> error_print_data
    int error_print_hot -> error_print_hot
    int error_print_lose_paper -> error_print_lose_paper
    int error_print_noreason -> error_print_noreason
    int error_print_other -> error_print_other
    int error_print_volerr -> error_print_volerr
    int error_refund_amount_limit -> error_refund_amount_limit
    int error_user -> error_user
    int error_voucher -> error_voucher
    int exit_setting -> exit_setting
    int expense_collection_input_money -> expense_collection_input_money
    int expense_collection_input_password -> expense_collection_input_password
    int extend -> extend
    int fragment_timeout -> fragment_timeout
    int has_water_please_first_settlement -> has_water_please_first_settlement
    int input_infomation_err -> input_infomation_err
    int input_new_old_password_same -> input_new_old_password_same
    int input_new_password_difference -> input_new_password_difference
    int input_old_password_err -> input_old_password_err
    int input_password -> input_password
    int input_sign_order_title -> input_sign_order_title
    int input_user_number -> input_user_number
    int inside -> inside
    int inside_credit_amount -> inside_credit_amount
    int inside_credit_num -> inside_credit_num
    int inside_debit_amount -> inside_debit_amount
    int inside_debit_num -> inside_debit_num
    int inside_extend_keyboard -> inside_extend_keyboard
    int is_admin_password -> is_admin_password
    int is_authsale_pin -> is_authsale_pin
    int is_auto_logout -> is_auto_logout
    int is_card_input -> is_card_input
    int is_confirm_elecsign -> is_confirm_elecsign
    int is_display_trv_tsi -> is_display_trv_tsi
    int is_elecsign_input_phone -> is_elecsign_input_phone
    int is_encrypt_track -> is_encrypt_track
    int is_extend_rf -> is_extend_rf
    int is_hint_print_detail -> is_hint_print_detail
    int is_preauth_shield_pan -> is_preauth_shield_pan
    int is_print_minus -> is_print_minus
    int is_print_sign_order_english -> is_print_sign_order_english
    int is_prn_total -> is_prn_total
    int is_reverse_test -> is_reverse_test
    int is_rf_delay -> is_rf_delay
    int is_sale_flick -> is_sale_flick
    int is_small_gene_auth -> is_small_gene_auth
    int is_support_elecsign -> is_support_elecsign
    int is_support_ic -> is_support_ic
    int is_support_rf -> is_support_rf
    int is_tip -> is_tip
    int is_use_distri_bution -> is_use_distri_bution
    int is_voidauth_pin -> is_voidauth_pin
    int is_voidauthsale_pin -> is_voidauthsale_pin
    int is_voidauthsale_strip -> is_voidauthsale_strip
    int is_voidsale_pin -> is_voidsale_pin
    int is_voidsale_strip -> is_voidsale_strip
    int issuing_bank_name -> issuing_bank_name
    int load -> load
    int local_code -> local_code
    int lock_screen_input_password -> lock_screen_input_password
    int login_error_not_user -> login_error_not_user
    int login_error_not_user_no -> login_error_not_user_no
    int login_login -> login_login
    int login_remember_user -> login_remember_user
    int manager_password_hint_1 -> manager_password_hint_1
    int manager_password_hint_3 -> manager_password_hint_3
    int manager_password_input -> manager_password_input
    int max_elec_count -> max_elec_count
    int max_offsend_num -> max_offsend_num
    int max_refund_amount -> max_refund_amount
    int no_fail_waters -> no_fail_waters
    int no_settle -> no_settle
    int no_transdetail -> no_transdetail
    int normal_pay -> normal_pay
    int offline_return -> offline_return
    int offsend_mode -> offsend_mode
    int offsend_resend_times -> offsend_resend_times
    int only_ec_auth -> only_ec_auth
    int only_ec_decline -> only_ec_decline
    int only_ec_sale -> only_ec_sale
    int operator_contain -> operator_contain
    int operator_list -> operator_list
    int operator_no_contain -> operator_no_contain
    int other_consume -> other_consume
    int other_pre_auth -> other_pre_auth
    int outside_credit_amount -> outside_credit_amount
    int outside_credit_num -> outside_credit_num
    int outside_debit_amount -> outside_debit_amount
    int outside_debit_num -> outside_debit_num
    int param_print -> param_print
    int pinpad_timeout -> pinpad_timeout
    int pls_input_main_password -> pls_input_main_password
    int pls_input_new_main_password -> pls_input_new_main_password
    int pls_input_new_main_password_again -> pls_input_new_main_password_again
    int pls_input_new_safe_password -> pls_input_new_safe_password
    int pls_input_new_safe_password_again -> pls_input_new_safe_password_again
    int pls_input_new_sys_password -> pls_input_new_sys_password
    int pls_input_new_sys_password_again -> pls_input_new_sys_password_again
    int pls_input_old_main_password -> pls_input_old_main_password
    int pls_input_old_safe_password -> pls_input_old_safe_password
    int pls_input_old_sys_password -> pls_input_old_sys_password
    int print_all_trans_detail -> print_all_trans_detail
    int print_chinese_acquirer -> print_chinese_acquirer
    int print_chinese_issuing_bank -> print_chinese_issuing_bank
    int print_communication -> print_communication
    int print_emv -> print_emv
    int print_error -> print_error
    int print_exit -> print_exit
    int print_next -> print_next
    int print_other_control -> print_other_control
    int print_paper_num -> print_paper_num
    int print_service_hotline -> print_service_hotline
    int print_shop_info -> print_shop_info
    int print_sign_order -> print_sign_order
    int print_sign_order_font -> print_sign_order_font
    int print_system_control -> print_system_control
    int print_trans_control -> print_trans_control
    int print_version -> print_version
    int printer_status_outof_paper -> printer_status_outof_paper
    int pull_card -> pull_card
    int qpboc_priority -> qpboc_priority
    int qpboc_priority_ec -> qpboc_priority_ec
    int qpboc_priority_emv -> qpboc_priority_emv
    int record_not_exist -> record_not_exist
    int reprint -> reprint
    int reset_sys_password_fail -> reset_sys_password_fail
    int reset_sys_password_scs -> reset_sys_password_scs
    int response_check_fail_amount_error -> response_check_fail_amount_error
    int response_check_fail_cerrency_error -> response_check_fail_cerrency_error
    int response_check_fail_mac_error -> response_check_fail_mac_error
    int response_check_fail_msg_type_error -> response_check_fail_msg_type_error
    int response_check_fail_no_acq_center_code_error -> response_check_fail_no_acq_center_code_error
    int response_check_fail_no_refnum_error -> response_check_fail_no_refnum_error
    int response_check_fail_other_error -> response_check_fail_other_error
    int response_check_fail_posid_error -> response_check_fail_posid_error
    int response_check_fail_process_code_error -> response_check_fail_process_code_error
    int response_check_fail_sevice_code_error -> response_check_fail_sevice_code_error
    int response_check_fail_shopid_error -> response_check_fail_shopid_error
    int response_check_fail_trace_no_error -> response_check_fail_trace_no_error
    int response_unknow -> response_unknow
    int result_bin_b_update_fail -> result_bin_b_update_fail
    int result_bin_b_update_succse -> result_bin_b_update_succse
    int result_bin_c_update_fail -> result_bin_c_update_fail
    int result_bin_c_update_succse -> result_bin_c_update_succse
    int result_blackList_download_fail -> result_blackList_download_fail
    int result_blackList_download_succse -> result_blackList_download_succse
    int result_ic_param_download_fail -> result_ic_param_download_fail
    int result_ic_param_download_success -> result_ic_param_download_success
    int result_ic_public_key_download_fail -> result_ic_public_key_download_fail
    int result_ic_public_key_download_success -> result_ic_public_key_download_success
    int result_network_offline -> result_network_offline
    int result_response_exception -> result_response_exception
    int result_reverse_fail -> result_reverse_fail
    int result_reverse_succse -> result_reverse_succse
    int result_rf_param_download_sucess -> result_rf_param_download_sucess
    int result_script_fail -> result_script_fail
    int result_script_succse -> result_script_succse
    int result_tms_param_download_success -> result_tms_param_download_success
    int result_trans_cancel -> result_trans_cancel
    int reversal_resend_times -> reversal_resend_times
    int rfcard_first -> rfcard_first
    int sale_is_Partial -> sale_is_Partial
    int sale_is_Partial_transaction -> sale_is_Partial_transaction
    int sale_partial_deduction -> sale_partial_deduction
    int sale_please_charge_separately -> sale_please_charge_separately
    int sale_unpaid_amount -> sale_unpaid_amount
    int sale_yuan -> sale_yuan
    int setting_clear_rush_water -> setting_clear_rush_water
    int setting_clear_rush_water_succ -> setting_clear_rush_water_succ
    int setting_clear_trans_water -> setting_clear_trans_water
    int setting_communication -> setting_communication
    int setting_communication_ip_1 -> setting_communication_ip_1
    int setting_communication_ip_2 -> setting_communication_ip_2
    int setting_communication_port_1 -> setting_communication_port_1
    int setting_communication_port_2 -> setting_communication_port_2
    int setting_communication_tpdu -> setting_communication_tpdu
    int setting_download_rf_params -> setting_download_rf_params
    int setting_downloading_bin_b -> setting_downloading_bin_b
    int setting_downloading_bin_c -> setting_downloading_bin_c
    int setting_downloading_rf_params -> setting_downloading_rf_params
    int setting_flash_card_can_deal_timeout -> setting_flash_card_can_deal_timeout
    int setting_flash_card_num -> setting_flash_card_num
    int setting_flash_card_reswip_timeout -> setting_flash_card_reswip_timeout
    int setting_is_use_http -> setting_is_use_http
    int setting_load_key -> setting_load_key
    int setting_mpos_download -> setting_mpos_download
    int setting_mpos_load -> setting_mpos_load
    int setting_mpos_load_key_connect -> setting_mpos_load_key_connect
    int setting_mpos_load_key_open_port_fail -> setting_mpos_load_key_open_port_fail
    int setting_mpos_load_key_read_data_error -> setting_mpos_load_key_read_data_error
    int setting_mpos_load_key_write_data_fail -> setting_mpos_load_key_write_data_fail
    int setting_other -> setting_other
    int setting_other_down_load -> setting_other_down_load
    int setting_other_download_bin_b_update -> setting_other_download_bin_b_update
    int setting_other_download_bin_c_update -> setting_other_download_bin_c_update
    int setting_other_download_blacklist -> setting_other_download_blacklist
    int setting_other_download_echo_test -> setting_other_download_echo_test
    int setting_other_download_echo_testing -> setting_other_download_echo_testing
    int setting_other_download_ic_blacklist_download -> setting_other_download_ic_blacklist_download
    int setting_other_download_ic_param -> setting_other_download_ic_param
    int setting_other_download_ic_param_download -> setting_other_download_ic_param_download
    int setting_other_download_ic_public_key -> setting_other_download_ic_public_key
    int setting_other_download_ic_public_key_download -> setting_other_download_ic_public_key_download
    int setting_other_download_parameter_pass -> setting_other_download_parameter_pass
    int setting_other_download_parameter_pass_fail -> setting_other_download_parameter_pass_fail
    int setting_other_download_parameter_pass_success -> setting_other_download_parameter_pass_success
    int setting_other_download_parameter_passing -> setting_other_download_parameter_passing
    int setting_other_download_state_upload -> setting_other_download_state_upload
    int setting_other_download_tms_parameter -> setting_other_download_tms_parameter
    int setting_other_download_tms_parameter_download -> setting_other_download_tms_parameter_download
    int setting_other_elecsign -> setting_other_elecsign
    int setting_other_lbs -> setting_other_lbs
    int setting_password -> setting_password
    int setting_password_safe -> setting_password_safe
    int setting_password_system -> setting_password_system
    int setting_print -> setting_print
    int setting_print_manage -> setting_print_manage
    int setting_print_other -> setting_print_other
    int setting_secret_key -> setting_secret_key
    int setting_secret_key_des -> setting_secret_key_des
    int setting_secret_key_head -> setting_secret_key_head
    int setting_secret_key_head_index -> setting_secret_key_head_index
    int setting_secret_key_main_index -> setting_secret_key_main_index
    int setting_secret_key_pos -> setting_secret_key_pos
    int setting_shop -> setting_shop
    int setting_shop_app_name -> setting_shop_app_name
    int setting_shop_chinese_name -> setting_shop_chinese_name
    int setting_shop_english_name -> setting_shop_english_name
    int setting_shop_no -> setting_shop_no
    int setting_shop_terminal -> setting_shop_terminal
    int setting_sign_order_age_limit -> setting_sign_order_age_limit
    int setting_system -> setting_system
    int setting_system_batch_no -> setting_system_batch_no
    int setting_system_flash_card -> setting_system_flash_card
    int setting_system_keypoard_password -> setting_system_keypoard_password
    int setting_system_max_trans_no -> setting_system_max_trans_no
    int setting_system_now_date -> setting_system_now_date
    int setting_system_now_time -> setting_system_now_time
    int setting_system_other -> setting_system_other
    int setting_system_serial_no -> setting_system_serial_no
    int setting_trans -> setting_trans
    int setting_trans_closing -> setting_trans_closing
    int setting_trans_input_password -> setting_trans_input_password
    int setting_trans_off_line -> setting_trans_off_line
    int setting_trans_other -> setting_trans_other
    int setting_trans_retry_no -> setting_trans_retry_no
    int setting_trans_swipe -> setting_trans_swipe
    int setting_trans_switch -> setting_trans_switch
    int setting_trans_switch_ec -> setting_trans_switch_ec
    int setting_trans_switch_tradition -> setting_trans_switch_tradition
    int setting_up_send_before_next -> setting_up_send_before_next
    int setting_up_send_before_settlement -> setting_up_send_before_settlement
    int settle_batch_normal -> settle_batch_normal
    int settle_batch_unbalance -> settle_batch_unbalance
    int settle_error -> settle_error
    int settle_error_settlecode_cn -> settle_error_settlecode_cn
    int settle_error_settlecode_en -> settle_error_settlecode_en
    int settle_exist_count_status_tip -> settle_exist_count_status_tip
    int settle_halt -> settle_halt
    int settle_max_count_status_tip -> settle_max_count_status_tip
    int settle_print_all_water -> settle_print_all_water
    int settle_send_succ -> settle_send_succ
    int settle_succ -> settle_succ
    int shop_code -> shop_code
    int shop_manager -> shop_manager
    int sign_in_key_len_error -> sign_in_key_len_error
    int sign_in_load_mac_fail -> sign_in_load_mac_fail
    int sign_in_load_pin_fail -> sign_in_load_pin_fail
    int sign_in_load_tdk_fail -> sign_in_load_tdk_fail
    int sign_in_load_tmk_fail -> sign_in_load_tmk_fail
    int sign_in_trans_fail -> sign_in_trans_fail
    int sign_in_trans_succse -> sign_in_trans_succse
    int sign_resend_times -> sign_resend_times
    int signature_cancel_tip_msg -> signature_cancel_tip_msg
    int signature_confirm_use -> signature_confirm_use
    int signature_data_too_big -> signature_data_too_big
    int signature_error -> signature_error
    int signature_not_valid -> signature_not_valid
    int signature_saveing -> signature_saveing
    int sliding_menu_check_transaction -> sliding_menu_check_transaction
    int sliding_menu_lock -> sliding_menu_lock
    int sliding_menu_system_settings -> sliding_menu_system_settings
    int success_clear_dispose_marks -> success_clear_dispose_marks
    int success_clear_script_execution_result_of_the_water -> success_clear_script_execution_result_of_the_water
    int success_clear_settlement_marks -> success_clear_settlement_marks
    int success_setting_clear_rush_water -> success_setting_clear_rush_water
    int success_setting_clear_trans_water -> success_setting_clear_trans_water
    int sup_ask -> sup_ask
    int sup_notice -> sup_notice
    int sup_same -> sup_same
    int support_inside_keyboard -> support_inside_keyboard
    int swipe_card_amount -> swipe_card_amount
    int swipe_card_hint -> swipe_card_hint
    int swipe_card_how_to_input -> swipe_card_how_to_input
    int swipe_card_how_to_input_or_hand_input -> swipe_card_how_to_input_or_hand_input
    int swipe_card_ic_hint -> swipe_card_ic_hint
    int swipe_card_max_length -> swipe_card_max_length
    int swipe_card_min_length -> swipe_card_min_length
    int swipe_card_rf_hint -> swipe_card_rf_hint
    int test_communication_port -> test_communication_port
    int test_ic_card -> test_ic_card
    int test_keyboard -> test_keyboard
    int test_print -> test_print
    int test_retry -> test_retry
    int test_skip -> test_skip
    int tip_old_trace_no_not_exsits -> tip_old_trace_no_not_exsits
    int tip_old_trace_no_not_valid -> tip_old_trace_no_not_valid
    int tip_old_trans_adjust -> tip_old_trans_adjust
    int tip_old_trans_void -> tip_old_trans_void
    int tip_rate -> tip_rate
    int tms_resend_times -> tms_resend_times
    int trans_ecmoneyload -> trans_ecmoneyload
    int trans_ecnopointload -> trans_ecnopointload
    int trans_ecpointload -> trans_ecpointload
    int trans_ecrefund -> trans_ecrefund
    int trans_ecvoidmoneyload -> trans_ecvoidmoneyload
    int trans_fail -> trans_fail
    int trans_info_confirm -> trans_info_confirm
    int trans_nodifine -> trans_nodifine
    int trans_succse -> trans_succse
    int transaction_expense_total -> transaction_expense_total
    int transaction_money -> transaction_money
    int transaction_returns_total -> transaction_returns_total
    int transaction_total -> transaction_total
    int transaction_trading_company -> transaction_trading_company
    int voucher_input -> voucher_input
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$style -> com.newland.payment.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int GridPasswordView -> GridPasswordView
    int GridPasswordView_Divider -> GridPasswordView_Divider
    int GridPasswordView_EditText -> GridPasswordView_EditText
    int GridPasswordView_TextView -> GridPasswordView_TextView
    int NumberKeyboard -> NumberKeyboard
    int Theme_Transparent -> Theme_Transparent
    int common_full_dialog -> common_full_dialog
    int loading_dialog -> loading_dialog
    int mProgress_circle -> mProgress_circle
    int progress_dialog -> progress_dialog
    int swiping_dialog -> swiping_dialog
    int system_settings_item -> system_settings_item
    int transaction_total_item -> transaction_total_item
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.R$styleable -> com.newland.payment.R$styleable:
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
    int[] TwoWayAbsListView -> TwoWayAbsListView
    int TwoWayAbsListView_cacheColorHint -> TwoWayAbsListView_cacheColorHint
    int TwoWayAbsListView_drawSelectorOnTop -> TwoWayAbsListView_drawSelectorOnTop
    int TwoWayAbsListView_listSelector -> TwoWayAbsListView_listSelector
    int TwoWayAbsListView_scrollDirectionLandscape -> TwoWayAbsListView_scrollDirectionLandscape
    int TwoWayAbsListView_scrollDirectionPortrait -> TwoWayAbsListView_scrollDirectionPortrait
    int TwoWayAbsListView_scrollingCache -> TwoWayAbsListView_scrollingCache
    int TwoWayAbsListView_smoothScrollbar -> TwoWayAbsListView_smoothScrollbar
    int TwoWayAbsListView_stackFromBottom -> TwoWayAbsListView_stackFromBottom
    int TwoWayAbsListView_transcriptMode -> TwoWayAbsListView_transcriptMode
    int[] TwoWayGridView -> TwoWayGridView
    int TwoWayGridView_columnWidth -> TwoWayGridView_columnWidth
    int TwoWayGridView_gravity -> TwoWayGridView_gravity
    int TwoWayGridView_horizontalSpacing -> TwoWayGridView_horizontalSpacing
    int TwoWayGridView_numColumns -> TwoWayGridView_numColumns
    int TwoWayGridView_numRows -> TwoWayGridView_numRows
    int TwoWayGridView_rowHeight -> TwoWayGridView_rowHeight
    int TwoWayGridView_stretchMode -> TwoWayGridView_stretchMode
    int TwoWayGridView_verticalSpacing -> TwoWayGridView_verticalSpacing
    int[] gridPasswordView -> gridPasswordView
    int gridPasswordView_gpvGridColor -> gridPasswordView_gpvGridColor
    int gridPasswordView_gpvLineColor -> gridPasswordView_gpvLineColor
    int gridPasswordView_gpvLineWidth -> gridPasswordView_gpvLineWidth
    int gridPasswordView_gpvPasswordLength -> gridPasswordView_gpvPasswordLength
    int gridPasswordView_gpvPasswordTransformation -> gridPasswordView_gpvPasswordTransformation
    int gridPasswordView_gpvPasswordType -> gridPasswordView_gpvPasswordType
    int gridPasswordView_gpvTextColor -> gridPasswordView_gpvTextColor
    int gridPasswordView_gpvTextSize -> gridPasswordView_gpvTextSize
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.aidl.IManagerService -> com.newland.payment.aidl.IManagerService:
    boolean reset() -> reset
    boolean activate() -> activate
com.newland.payment.aidl.IManagerService$Stub -> com.newland.payment.aidl.IManagerService$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_reset -> TRANSACTION_reset
    int TRANSACTION_activate -> TRANSACTION_activate
    void <init>() -> <init>
    com.newland.payment.aidl.IManagerService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.newland.payment.aidl.IManagerService$Stub$Proxy -> com.newland.payment.aidl.IManagerService$Stub$a:
    android.os.IBinder mRemote -> a
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    boolean reset() -> reset
    boolean activate() -> activate
com.newland.payment.aidl.IPaymentService -> com.newland.payment.aidl.IPaymentService:
    boolean setParam(java.lang.String,java.lang.String) -> setParam
    java.lang.String getParam(java.lang.String) -> getParam
    int rePrint(java.lang.String,java.lang.String) -> rePrint
    int findWater(com.newland.payment.aidl.SimpleWater,java.lang.String,java.lang.String) -> findWater
    int rePrintSettle() -> rePrintSettle
    int findWaterByOutOrderNo(com.newland.payment.aidl.SimpleWater,java.lang.String) -> findWaterByOutOrderNo
com.newland.payment.aidl.IPaymentService$Stub -> com.newland.payment.aidl.IPaymentService$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_setParam -> TRANSACTION_setParam
    int TRANSACTION_getParam -> TRANSACTION_getParam
    int TRANSACTION_rePrint -> TRANSACTION_rePrint
    int TRANSACTION_findWater -> TRANSACTION_findWater
    int TRANSACTION_rePrintSettle -> TRANSACTION_rePrintSettle
    int TRANSACTION_findWaterByOutOrderNo -> TRANSACTION_findWaterByOutOrderNo
    void <init>() -> <init>
    com.newland.payment.aidl.IPaymentService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.newland.payment.aidl.IPaymentService$Stub$Proxy -> com.newland.payment.aidl.IPaymentService$Stub$Proxy:
    android.os.IBinder mRemote -> a
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    boolean setParam(java.lang.String,java.lang.String) -> setParam
    java.lang.String getParam(java.lang.String) -> getParam
    int rePrint(java.lang.String,java.lang.String) -> rePrint
    int findWater(com.newland.payment.aidl.SimpleWater,java.lang.String,java.lang.String) -> findWater
    int rePrintSettle() -> rePrintSettle
    int findWaterByOutOrderNo(com.newland.payment.aidl.SimpleWater,java.lang.String) -> findWaterByOutOrderNo
com.newland.payment.aidl.SimpleWater -> com.newland.payment.aidl.SimpleWater:
    java.lang.Integer transType -> transType
    java.lang.String pan -> pan
    java.lang.Long amount -> amount
    java.lang.String currency -> currency
    java.lang.String trace -> trace
    java.lang.String time -> time
    java.lang.String date -> date
    java.lang.String authCode -> authCode
    java.lang.String referNum -> referNum
    java.lang.String batchNo -> batchNo
    java.lang.Integer transCode -> transCode
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.Integer getTransCode() -> getTransCode
    void setTransCode(java.lang.Integer) -> setTransCode
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> readFromParcel
    java.lang.Integer getTransType() -> getTransType
    void setTransType(java.lang.Integer) -> setTransType
    java.lang.String getPan() -> getPan
    void setPan(java.lang.String) -> setPan
    java.lang.Long getAmount() -> getAmount
    void setAmount(java.lang.Long) -> setAmount
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
    java.lang.String getTrace() -> getTrace
    void setTrace(java.lang.String) -> setTrace
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    java.lang.String getAuthCode() -> getAuthCode
    void setAuthCode(java.lang.String) -> setAuthCode
    java.lang.String getReferNum() -> getReferNum
    void setReferNum(java.lang.String) -> setReferNum
    java.lang.String getBatchNo() -> getBatchNo
    void setBatchNo(java.lang.String) -> setBatchNo
    com.newland.payment.aidl.SimpleWater waterToSimpleWater(com.newland.payment.mvc.model.Water,com.newland.payment.aidl.SimpleWater) -> waterToSimpleWater
    void <clinit>() -> <clinit>
com.newland.payment.aidl.SimpleWater$1 -> com.newland.payment.aidl.SimpleWater$1:
    void <init>() -> <init>
    com.newland.payment.aidl.SimpleWater createFromParcel(android.os.Parcel) -> a
    com.newland.payment.aidl.SimpleWater[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.newland.payment.common.Const -> com.newland.payment.common.Const:
    java.lang.String SEPARATOR -> a
    java.util.Map K21_KEYBOARD_KEYMAPPINGS -> b
    void <clinit>() -> <clinit>
com.newland.payment.common.Const$PathConst -> com.newland.payment.common.Const$a:
    java.lang.String SDCARD_PATH -> a
    java.lang.String APPS_DATA -> b
    void <clinit>() -> <clinit>
com.newland.payment.common.Const$PrintStyleConst -> com.newland.payment.common.Const$b:
    java.lang.String PRINT_WATER_WITHOUT_ENGLISH -> a
    java.lang.String PRINT_WATER_WITH_ENGLISH -> b
    java.lang.String PRINT_WATER_WITHOUT_ENGLISH_SMALL -> c
    java.lang.String PRINT_WATER_WITH_ENGLISH_SMALL -> d
    java.lang.String PRINT_SETTLE -> e
    java.lang.String PRINT_ALL_WATER -> f
    java.lang.String PRINT_FAIL_WATER -> g
    java.lang.String PRINT_TOTAL -> h
    java.lang.String PRINT_PARAM_MERCHANTINFO -> i
    java.lang.String PRINT_PARAM_VERSION -> j
    java.lang.String PRINT_PARAM_TRANSCCTRL -> k
    java.lang.String PRINT_PARAM_SYSTEMCTRL -> l
    java.lang.String PRINT_PARAM_OTHER -> m
    java.lang.String PRINT_PARAM_COMM -> n
    void <clinit>() -> <clinit>
com.newland.payment.common.Const$PrintStyleConstEnum -> com.newland.payment.common.Const$PrintStyleConstEnum:
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_WATER -> PRINT_WATER
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_SETTLE -> PRINT_SETTLE
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_ALL_WATER -> PRINT_ALL_WATER
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_FAIL_WATER -> PRINT_FAIL_WATER
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_TOTAL -> PRINT_TOTAL
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_PARAM_MERCHANTINFO -> PRINT_PARAM_MERCHANTINFO
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_PARAM_VERSION -> PRINT_PARAM_VERSION
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_PARAM_TRANSCCTRL -> PRINT_PARAM_TRANSCCTRL
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_PARAM_SYSTEMCTRL -> PRINT_PARAM_SYSTEMCTRL
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_PARAM_OTHER -> PRINT_PARAM_OTHER
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_PARAM_COMM -> PRINT_PARAM_COMM
    com.newland.payment.common.Const$PrintStyleConstEnum PRINT_PARAMS_EMV -> PRINT_PARAMS_EMV
    com.newland.payment.common.Const$PrintStyleConstEnum[] $VALUES -> a
    com.newland.payment.common.Const$PrintStyleConstEnum[] values() -> values
    com.newland.payment.common.Const$PrintStyleConstEnum valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.common.PrintType -> com.newland.payment.common.PrintType:
com.newland.payment.common.PrintType$PrintWaterType -> com.newland.payment.common.PrintType$PrintWaterType:
    com.newland.payment.common.PrintType$PrintWaterType MERCHANT -> MERCHANT
    com.newland.payment.common.PrintType$PrintWaterType BANK -> BANK
    com.newland.payment.common.PrintType$PrintWaterType CUSTOMER -> CUSTOMER
    com.newland.payment.common.PrintType$PrintWaterType[] $VALUES -> a
    com.newland.payment.common.PrintType$PrintWaterType[] values() -> values
    com.newland.payment.common.PrintType$PrintWaterType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.common.TransConst -> com.newland.payment.common.TransConst:
com.newland.payment.common.TransConst$DownloadEmvParamType -> com.newland.payment.common.TransConst$DownloadEmvParamType:
    com.newland.payment.common.TransConst$DownloadEmvParamType AID -> AID
    com.newland.payment.common.TransConst$DownloadEmvParamType CAPK -> CAPK
    com.newland.payment.common.TransConst$DownloadEmvParamType[] $VALUES -> a
    com.newland.payment.common.TransConst$DownloadEmvParamType[] values() -> values
    com.newland.payment.common.TransConst$DownloadEmvParamType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.common.dao.DbHelper -> com.newland.payment.common.a.a:
    java.lang.String TAG -> a
    com.newland.payment.common.dao.DbHelper helper -> b
    android.content.Context context -> c
    com.newland.payment.common.dao.DbHelper getInstance(android.content.Context) -> a
    void <init>(android.content.Context) -> <init>
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void initUersTable(android.database.sqlite.SQLiteDatabase) -> a
    void initSettlementTable(android.database.sqlite.SQLiteDatabase) -> b
    void initCarBinA(android.database.sqlite.SQLiteDatabase) -> c
    void initCarBinB(android.database.sqlite.SQLiteDatabase) -> d
    java.lang.String getCreateTableSql(java.lang.Class) -> a
    java.lang.String getDBColumnType(java.lang.reflect.Field) -> a
    void <clinit>() -> <clinit>
com.newland.payment.common.tools.AnswerCodeHelper -> com.newland.payment.common.tools.a:
    java.util.Map answerCodeMap -> a
    java.lang.String getAnswerCodeCN(java.lang.String) -> a
    java.util.Map getAnswerCodeDate(android.content.Context) -> a
com.newland.payment.common.tools.BankCodeHelper -> com.newland.payment.common.tools.b:
    java.util.Map bankCodeMap -> a
    java.lang.String getBankCodeCN(java.lang.String) -> a
    java.util.Map getBankCodeDate(android.content.Context) -> a
com.newland.payment.common.tools.PrintModelUtils -> com.newland.payment.common.tools.c:
    com.newland.payment.printer.template.model.PrintVourcherModel waterToPrinterModel(com.newland.payment.mvc.model.Water,com.newland.payment.common.PrintType$PrintWaterType,boolean) -> a
    com.newland.payment.printer.template.model.PrintSysParamModel getTransControlModel(android.content.Context) -> a
    com.newland.payment.printer.template.model.PrintSysParamModel getSysControlModel(android.content.Context) -> b
    com.newland.payment.printer.template.model.PrintSysParamModel getOtherControlModel(android.content.Context) -> c
    com.newland.payment.printer.template.model.PrintSysParamModel getCommunicateControlModel(android.content.Context) -> d
    com.newland.payment.printer.template.model.PrintSettleModel getPrintSettleModel(android.content.Context) -> e
    com.newland.payment.printer.template.model.PrintTotalModel getPrintTotalModel(android.content.Context) -> f
    com.newland.payment.printer.template.model.PrintInfoModel getPrintMerchantInfoModel(android.content.Context) -> g
    com.newland.payment.printer.template.model.PrintInfoModel getPrintVertionInfoModel(android.content.Context) -> h
    com.newland.payment.printer.template.model.PrintAllWaterModel getPrintFailWaterModel(java.lang.Boolean,java.lang.Boolean,com.newland.payment.mvc.model.Water,int) -> a
    com.newland.payment.printer.template.model.PrintAllWaterModel getPrintAllWaterDate(java.lang.Boolean,java.lang.Boolean,com.newland.payment.mvc.model.Water) -> a
    java.lang.String fillModel(java.lang.String,int) -> a
    java.lang.String getEMVParamsData() -> a
    java.lang.String getTransEnType(com.newland.payment.mvc.model.Water) -> a
    java.lang.String formatInputMode(java.lang.String) -> a
com.newland.payment.common.tools.PrintModelUtils$1 -> com.newland.payment.common.tools.c$1:
    int[] $SwitchMap$com$newland$payment$common$PrintType$PrintWaterType -> a
    void <clinit>() -> <clinit>
com.newland.payment.common.tools.SocketException -> com.newland.payment.common.tools.SocketException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
com.newland.payment.common.tools.SocketHelper -> com.newland.payment.common.tools.d:
    com.newland.payment.common.tools.SocketHelper socketHelper -> a
    long costTime -> b
    java.net.Socket socket -> c
    java.io.DataInputStream input -> d
    java.io.DataOutputStream output -> e
    boolean commMode -> f
    java.lang.String ip -> g
    int port -> h
    int timeOut -> i
    java.net.SocketAddress address -> j
    com.newland.payment.common.tools.SocketListener listener -> k
    void <init>(java.lang.String,int,int,com.newland.payment.common.tools.SocketListener) -> <init>
    void initSocket() -> a
    com.newland.payment.common.tools.SocketHelper getSocketHelper(java.lang.String,int,int,com.newland.payment.common.tools.SocketListener) -> a
    java.net.Socket createSocket() -> g
    boolean connect() -> h
    boolean isConnected() -> i
    boolean connectSocketHost() -> j
    void initLongConnectTimer() -> k
    byte[] receive() -> b
    byte[] receive2() -> c
    byte[] receiveSLL() -> d
    boolean send(byte[]) -> a
    boolean sendSLL(byte[]) -> b
    boolean release() -> e
    boolean release(boolean) -> a
    void closeComm() -> f
    byte[] mergeByteArray(byte[][]) -> a
com.newland.payment.common.tools.SocketListener -> com.newland.payment.common.tools.e:
    void overSendData(boolean) -> a
com.newland.payment.interfaces.OnKeyBoardValueChangeListener -> com.newland.payment.a.a:
com.newland.payment.interfaces.ThreadCallBack -> com.newland.payment.a.b:
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.mvc.DuplicatedReverseWaterException -> com.newland.payment.mvc.DuplicatedReverseWaterException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
com.newland.payment.mvc.DuplicatedTraceException -> com.newland.payment.mvc.DuplicatedTraceException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
com.newland.payment.mvc.DuplicatedUserException -> com.newland.payment.mvc.DuplicatedUserException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
com.newland.payment.mvc.dao.BlackCardDao -> com.newland.payment.mvc.a.a:
    long insert(com.newland.payment.mvc.model.BlackCard) -> a
    java.util.List findAll() -> b_
    int deleteAll() -> a
com.newland.payment.mvc.dao.EmvFailWaterDao -> com.newland.payment.mvc.a.b:
    long insert(com.newland.payment.mvc.model.EmvFailWater) -> a
    int update(com.newland.payment.mvc.model.EmvFailWater) -> b
    com.newland.payment.mvc.model.EmvFailWater findById(long) -> a_
    int getCount() -> a
com.newland.payment.mvc.dao.ReverseWaterDao -> com.newland.payment.mvc.a.c:
    com.newland.payment.mvc.model.ReverseWater get() -> a
    long insert(com.newland.payment.mvc.model.ReverseWater) -> a
    int deleteAll() -> b
    int update(com.newland.payment.mvc.model.ReverseWater) -> b
com.newland.payment.mvc.dao.ScriptResultDao -> com.newland.payment.mvc.a.d:
    long insert(com.newland.payment.mvc.model.ScriptResult) -> a
    int update(com.newland.payment.mvc.model.ScriptResult) -> b
    java.util.List findAll() -> b_
    int delete(long) -> a
com.newland.payment.mvc.dao.SettlementDao -> com.newland.payment.mvc.a.e:
    com.newland.payment.mvc.model.Settlement findSettlementByTypeAndOrganization(java.lang.String,int) -> a
    int update(com.newland.payment.mvc.model.Settlement) -> a
com.newland.payment.mvc.dao.UserDao -> com.newland.payment.mvc.a.f:
    com.newland.payment.mvc.model.User findByUserNoAndUserType(java.lang.String,int) -> a
    java.util.List findByUserType(int) -> a
    long insert(com.newland.payment.mvc.model.User) -> a
    int update(com.newland.payment.mvc.model.User) -> b
    int deleteByUserNo(java.lang.String) -> a
com.newland.payment.mvc.dao.WaterDao -> com.newland.payment.mvc.a.g:
    long insert(com.newland.payment.mvc.model.Water) -> a
    int update(com.newland.payment.mvc.model.Water) -> b
    com.newland.payment.mvc.model.Water findById(long) -> b_
    com.newland.payment.mvc.model.Water findLastWater() -> a
    java.util.List findByPage(int,int) -> a
    java.util.List findByColumnName(java.lang.String,java.lang.Object) -> a
    int getCount() -> c
    com.newland.payment.mvc.model.Water findByTraceNoAndTime(java.lang.String,java.lang.String) -> a_
com.newland.payment.mvc.dao.impl.BlackCardDaoImpl -> com.newland.payment.mvc.a.a.a:
    void <init>(android.content.Context) -> <init>
    java.util.List findAll() -> b_
    int deleteAll() -> a
    long insert(com.newland.payment.mvc.model.BlackCard) -> a
com.newland.payment.mvc.dao.impl.CardBinADaoImpl -> com.newland.payment.mvc.a.a.b:
    void <init>(android.content.Context) -> <init>
    java.util.List findAll() -> b_
    com.newland.payment.mvc.model.CardBinA findByCardBin(java.lang.String) -> c
com.newland.payment.mvc.dao.impl.CardBinBDaoImpl -> com.newland.payment.mvc.a.a.c:
    void <init>(android.content.Context) -> <init>
    java.util.List findAll() -> b_
    com.newland.payment.mvc.model.CardBinB findByCardBin(java.lang.String) -> c
com.newland.payment.mvc.dao.impl.CardBinCDaoImpl -> com.newland.payment.mvc.a.a.d:
    void <init>(android.content.Context) -> <init>
    java.util.List findAll() -> b_
    com.newland.payment.mvc.model.CardBinC findByCardBin(java.lang.String) -> c
    int deleteAll() -> e
com.newland.payment.mvc.dao.impl.EmvFailWaterDaoImpl -> com.newland.payment.mvc.a.a.e:
    void <init>(android.content.Context) -> <init>
    int deleteAll() -> e
    com.newland.payment.mvc.model.EmvFailWater findById(long) -> a_
    int getCount() -> a
    java.lang.Object findById(long) -> b
    int update(com.newland.payment.mvc.model.EmvFailWater) -> b
    long insert(com.newland.payment.mvc.model.EmvFailWater) -> a
com.newland.payment.mvc.dao.impl.ReverseWaterDaoImpl -> com.newland.payment.mvc.a.a.f:
    void <init>(android.content.Context) -> <init>
    com.newland.payment.mvc.model.ReverseWater get() -> a
    int deleteAll() -> b
    int update(com.newland.payment.mvc.model.ReverseWater) -> b
    long insert(com.newland.payment.mvc.model.ReverseWater) -> a
com.newland.payment.mvc.dao.impl.ScriptResultDaoImpl -> com.newland.payment.mvc.a.a.g:
    void <init>(android.content.Context) -> <init>
    int deleteAll() -> e
    int update(com.newland.payment.mvc.model.ScriptResult) -> b
    long insert(com.newland.payment.mvc.model.ScriptResult) -> a
com.newland.payment.mvc.dao.impl.SettlementDaoImpl -> com.newland.payment.mvc.a.a.h:
    void <init>(android.content.Context) -> <init>
    com.newland.payment.mvc.model.Settlement findSettlementByTypeAndOrganization(java.lang.String,int) -> a
    int update(com.newland.payment.mvc.model.Settlement) -> a
    int deleteAll() -> e
    void initSettlementData() -> f
    int update(java.lang.Object) -> b
com.newland.payment.mvc.dao.impl.UserDaoImpl -> com.newland.payment.mvc.a.a.i:
    void <init>(android.content.Context) -> <init>
    int deleteByUserNo(java.lang.String) -> a
    com.newland.payment.mvc.model.User findByUserNoAndUserType(java.lang.String,int) -> a
    java.util.List findByUserType(int) -> a
    int update(com.newland.payment.mvc.model.User) -> b
    long insert(com.newland.payment.mvc.model.User) -> a
com.newland.payment.mvc.dao.impl.WaterDaoImpl -> com.newland.payment.mvc.a.a.j:
    void <init>(android.content.Context) -> <init>
    java.util.List findAll() -> b_
    com.newland.payment.mvc.model.Water findLastWater() -> a
    com.newland.payment.mvc.model.Water findById(long) -> b_
    java.util.List findByColumnName(java.lang.String,java.lang.Object) -> a
    int deleteAll() -> e
    int getCount() -> c
    java.util.List findByPage(int,int) -> a
    com.newland.payment.mvc.model.Water findByTraceNoAndTime(java.lang.String,java.lang.String) -> a_
    java.lang.Object findById(long) -> b
    int update(com.newland.payment.mvc.model.Water) -> b
    long insert(com.newland.payment.mvc.model.Water) -> a
com.newland.payment.mvc.model.BlackCard -> com.newland.payment.mvc.model.BlackCard:
    java.lang.Integer id -> id
    java.lang.String cardBin -> cardBin
    void <init>() -> <init>
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getCardBin() -> getCardBin
    void setCardBin(java.lang.String) -> setCardBin
com.newland.payment.mvc.model.CardBinA -> com.newland.payment.mvc.model.CardBinA:
    java.lang.Integer id -> id
    java.lang.String cardBin -> cardBin
    void <init>() -> <init>
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getCardBin() -> getCardBin
    void setCardBin(java.lang.String) -> setCardBin
com.newland.payment.mvc.model.CardBinB -> com.newland.payment.mvc.model.CardBinB:
    java.lang.Integer id -> id
    java.lang.String cardBin -> cardBin
    void <init>() -> <init>
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getCardBin() -> getCardBin
    void setCardBin(java.lang.String) -> setCardBin
com.newland.payment.mvc.model.CardBinC -> com.newland.payment.mvc.model.CardBinC:
    java.lang.Integer id -> id
    java.lang.String cardBin -> cardBin
    void <init>() -> <init>
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.String getCardBin() -> getCardBin
    void setCardBin(java.lang.String) -> setCardBin
com.newland.payment.mvc.model.EmvFailWater -> com.newland.payment.mvc.model.EmvFailWater:
    java.lang.Integer id -> id
    java.lang.Integer transType -> transType
    java.lang.Integer transAttr -> transAttr
    java.lang.Integer emvStatus -> emvStatus
    java.lang.String pan -> pan
    java.lang.Long amount -> amount
    java.lang.String trace -> trace
    java.lang.String time -> time
    java.lang.String date -> date
    java.lang.String expDate -> expDate
    java.lang.String inputMode -> inputMode
    java.lang.String cardSerialNo -> cardSerialNo
    java.lang.String track2 -> track2
    java.lang.String track3 -> track3
    java.lang.String batchNum -> batchNum
    java.lang.String oper -> oper
    java.lang.String interOrg -> interOrg
    java.lang.Integer batchUpFlag -> batchUpFlag
    java.lang.String emvAddition -> emvAddition
    java.lang.String addition -> addition
    java.lang.String emvAuthResp -> emvAuthResp
    java.lang.String tvr -> tvr
    java.lang.String tsi -> tsi
    java.lang.String field55 -> field55
    java.lang.String currency -> currency
    void <init>() -> <init>
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.Integer getTransType() -> getTransType
    void setTransType(java.lang.Integer) -> setTransType
    java.lang.Integer getTransAttr() -> getTransAttr
    void setTransAttr(java.lang.Integer) -> setTransAttr
    java.lang.Integer getEmvStatus() -> getEmvStatus
    void setEmvStatus(java.lang.Integer) -> setEmvStatus
    java.lang.String getPan() -> getPan
    void setPan(java.lang.String) -> setPan
    java.lang.Long getAmount() -> getAmount
    void setAmount(java.lang.Long) -> setAmount
    java.lang.String getTrace() -> getTrace
    void setTrace(java.lang.String) -> setTrace
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    java.lang.String getExpDate() -> getExpDate
    void setExpDate(java.lang.String) -> setExpDate
    java.lang.String getInputMode() -> getInputMode
    void setInputMode(java.lang.String) -> setInputMode
    java.lang.String getCardSerialNo() -> getCardSerialNo
    void setCardSerialNo(java.lang.String) -> setCardSerialNo
    java.lang.String getTrack2() -> getTrack2
    void setTrack2(java.lang.String) -> setTrack2
    java.lang.String getTrack3() -> getTrack3
    void setTrack3(java.lang.String) -> setTrack3
    java.lang.String getBatchNum() -> getBatchNum
    void setBatchNum(java.lang.String) -> setBatchNum
    java.lang.String getOper() -> getOper
    void setOper(java.lang.String) -> setOper
    java.lang.String getInterOrg() -> getInterOrg
    void setInterOrg(java.lang.String) -> setInterOrg
    java.lang.Integer getBatchUpFlag() -> getBatchUpFlag
    void setBatchUpFlag(java.lang.Integer) -> setBatchUpFlag
    java.lang.String getEmvAddition() -> getEmvAddition
    void setEmvAddition(java.lang.String) -> setEmvAddition
    java.lang.String getAddition() -> getAddition
    void setAddition(java.lang.String) -> setAddition
    java.lang.String getEmvAuthResp() -> getEmvAuthResp
    void setEmvAuthResp(java.lang.String) -> setEmvAuthResp
    java.lang.String getTvr() -> getTvr
    void setTvr(java.lang.String) -> setTvr
    java.lang.String getTsi() -> getTsi
    void setTsi(java.lang.String) -> setTsi
    java.lang.String getField55() -> getField55
    void setField55(java.lang.String) -> setField55
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
com.newland.payment.mvc.model.ReverseWater -> com.newland.payment.mvc.model.ReverseWater:
    java.lang.Long id -> id
    java.lang.Integer transType -> transType
    java.lang.Integer transAttr -> transAttr
    java.lang.String pan -> pan
    java.lang.String procCode -> procCode
    java.lang.Long amount -> amount
    java.lang.String trace -> trace
    java.lang.String expDate -> expDate
    java.lang.String inputMode -> inputMode
    java.lang.String cardSerialNo -> cardSerialNo
    java.lang.String serverCode -> serverCode
    java.lang.String oldAuthCode -> oldAuthCode
    java.lang.String response -> response
    java.lang.String inputModeForTransIn -> inputModeForTransIn
    java.lang.String currencyCode -> currencyCode
    java.lang.String field55 -> field55
    java.lang.String field60 -> field60
    java.lang.String field61 -> field61
    java.lang.String addition -> addition
    void <init>() -> <init>
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.Integer getTransType() -> getTransType
    void setTransType(java.lang.Integer) -> setTransType
    java.lang.Integer getTransAttr() -> getTransAttr
    void setTransAttr(java.lang.Integer) -> setTransAttr
    java.lang.String getPan() -> getPan
    void setPan(java.lang.String) -> setPan
    java.lang.String getProcCode() -> getProcCode
    void setProcCode(java.lang.String) -> setProcCode
    java.lang.Long getAmount() -> getAmount
    void setAmount(java.lang.Long) -> setAmount
    java.lang.String getTrace() -> getTrace
    void setTrace(java.lang.String) -> setTrace
    java.lang.String getExpDate() -> getExpDate
    void setExpDate(java.lang.String) -> setExpDate
    java.lang.String getInputMode() -> getInputMode
    void setInputMode(java.lang.String) -> setInputMode
    java.lang.String getCardSerialNo() -> getCardSerialNo
    void setCardSerialNo(java.lang.String) -> setCardSerialNo
    java.lang.String getServerCode() -> getServerCode
    void setServerCode(java.lang.String) -> setServerCode
    java.lang.String getOldAuthCode() -> getOldAuthCode
    void setOldAuthCode(java.lang.String) -> setOldAuthCode
    java.lang.String getResponse() -> getResponse
    void setResponse(java.lang.String) -> setResponse
    java.lang.String getInputModeForTransIn() -> getInputModeForTransIn
    void setInputModeForTransIn(java.lang.String) -> setInputModeForTransIn
    java.lang.String getCurrencyCode() -> getCurrencyCode
    void setCurrencyCode(java.lang.String) -> setCurrencyCode
    java.lang.String getField55() -> getField55
    void setField55(java.lang.String) -> setField55
    java.lang.String getField60() -> getField60
    void setField60(java.lang.String) -> setField60
    java.lang.String getField61() -> getField61
    void setField61(java.lang.String) -> setField61
    java.lang.String getAddition() -> getAddition
    void setAddition(java.lang.String) -> setAddition
com.newland.payment.mvc.model.ScriptResult -> com.newland.payment.mvc.model.ScriptResult:
    long serialVersionUID -> serialVersionUID
    java.lang.Long id -> id
    java.lang.Integer transType -> transType
    java.lang.Integer transAttr -> transAttr
    java.lang.String pan -> pan
    java.lang.String procCode -> procCode
    java.lang.Long amount -> amount
    java.lang.String inputMode -> inputMode
    java.lang.String cardSerialNo -> cardSerialNo
    java.lang.String serverCode -> serverCode
    java.lang.String acqCenterCode -> acqCenterCode
    java.lang.String refNum -> refNum
    java.lang.String authCode -> authCode
    java.lang.String currency -> currency
    java.lang.String field55 -> field55
    java.lang.String isoField60 -> isoField60
    java.lang.String field61 -> field61
    java.lang.String addition -> addition
    void <init>() -> <init>
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.Integer getTransType() -> getTransType
    void setTransType(java.lang.Integer) -> setTransType
    java.lang.Integer getTransAttr() -> getTransAttr
    void setTransAttr(java.lang.Integer) -> setTransAttr
    java.lang.String getPan() -> getPan
    void setPan(java.lang.String) -> setPan
    java.lang.String getProcCode() -> getProcCode
    void setProcCode(java.lang.String) -> setProcCode
    java.lang.Long getAmount() -> getAmount
    void setAmount(java.lang.Long) -> setAmount
    java.lang.String getInputMode() -> getInputMode
    void setInputMode(java.lang.String) -> setInputMode
    java.lang.String getCardSerialNo() -> getCardSerialNo
    void setCardSerialNo(java.lang.String) -> setCardSerialNo
    java.lang.String getServerCode() -> getServerCode
    void setServerCode(java.lang.String) -> setServerCode
    java.lang.String getAcqCenterCode() -> getAcqCenterCode
    void setAcqCenterCode(java.lang.String) -> setAcqCenterCode
    java.lang.String getRefNum() -> getRefNum
    void setRefNum(java.lang.String) -> setRefNum
    java.lang.String getAuthCode() -> getAuthCode
    void setAuthCode(java.lang.String) -> setAuthCode
    java.lang.String getField55() -> getField55
    void setField55(java.lang.String) -> setField55
    java.lang.String getAddition() -> getAddition
    void setAddition(java.lang.String) -> setAddition
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
    java.lang.String getField61() -> getField61
    void setField61(java.lang.String) -> setField61
    com.newland.payment.trans.bean.field.ISOField60 getIsoField60() -> getIsoField60
    void setIsoField60(com.newland.payment.trans.bean.field.ISOField60) -> setIsoField60
com.newland.payment.mvc.model.Settlement -> com.newland.payment.mvc.model.Settlement:
    java.lang.Long id -> id
    java.lang.String type -> type
    java.lang.Integer organization -> organization
    java.lang.Long amount -> amount
    java.lang.Integer num -> num
    void <init>() -> <init>
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.Integer getOrganization() -> getOrganization
    void setOrganization(java.lang.Integer) -> setOrganization
    java.lang.Long getAmount() -> getAmount
    void setAmount(java.lang.Long) -> setAmount
    java.lang.Integer getNum() -> getNum
    void setNum(java.lang.Integer) -> setNum
com.newland.payment.mvc.model.User -> com.newland.payment.mvc.model.User:
    java.lang.Long id -> id
    java.lang.String userNo -> userNo
    java.lang.String password -> password
    java.lang.Integer userType -> userType
    void <init>() -> <init>
    java.lang.String getUserNo() -> getUserNo
    void setUserNo(java.lang.String) -> setUserNo
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.Integer getUserType() -> getUserType
    void setUserType(java.lang.Integer) -> setUserType
com.newland.payment.mvc.model.Water -> com.newland.payment.mvc.model.Water:
    java.lang.Integer id -> id
    java.lang.Integer transType -> transType
    java.lang.Integer transCode -> transCode
    java.lang.String outOrderNo -> outOrderNo
    java.lang.Integer oldTransType -> oldTransType
    java.lang.Integer transAttr -> transAttr
    java.lang.Integer transStatus -> transStatus
    java.lang.Integer emvStatus -> emvStatus
    java.lang.String pan -> pan
    java.lang.Long amount -> amount
    java.lang.Long discountAmount -> discountAmount
    java.lang.Long orderAmount -> orderAmount
    java.lang.String trace -> trace
    java.lang.String time -> time
    java.lang.String date -> date
    java.lang.String expDate -> expDate
    java.lang.String settleDate -> settleDate
    java.lang.String inputMode -> inputMode
    java.lang.String cardSerialNo -> cardSerialNo
    java.lang.String track2 -> track2
    java.lang.String track3 -> track3
    java.lang.String referNum -> referNum
    java.lang.String authCode -> authCode
    java.lang.String respCode -> respCode
    java.lang.String batchNum -> batchNum
    java.lang.String funcCode -> funcCode
    java.lang.String oldBatch -> oldBatch
    java.lang.String oldTrace -> oldTrace
    java.lang.String oldAuthCode -> oldAuthCode
    java.lang.String oldRefNum -> oldRefNum
    java.lang.String telNo -> telNo
    java.lang.String appointmentNo -> appointmentNo
    java.lang.String oper -> oper
    java.lang.String interOrg -> interOrg
    java.lang.String iisCode -> iisCode
    java.lang.String acqCode -> acqCode
    java.lang.String cardType -> cardType
    java.lang.String acqCenterCode -> acqCenterCode
    java.lang.Long tipAmount -> tipAmount
    java.lang.String iisInfo -> iisInfo
    java.lang.String cupInfo -> cupInfo
    java.lang.String merAcqInfo -> merAcqInfo
    java.lang.String termInfo -> termInfo
    java.lang.Integer offSendFlag -> offSendFlag
    java.lang.Integer batchUpFlag -> batchUpFlag
    java.lang.String oldDate -> oldDate
    java.lang.String emvAddition -> emvAddition
    java.lang.String addition -> addition
    java.lang.String currency -> currency
    java.lang.String emvAuthResp -> emvAuthResp
    java.lang.String tvr -> tvr
    java.lang.String tsi -> tsi
    java.lang.String field55 -> field55
    java.lang.Long ecBalance -> ecBalance
    java.lang.String oldTerminalId -> oldTerminalId
    java.lang.Boolean signatureFlag -> signatureFlag
    java.lang.Integer signSendFlag -> signSendFlag
    java.lang.String cardHolderTelphone -> cardHolderTelphone
    java.lang.String cardNoTransIn -> cardNoTransIn
    java.lang.Long balance -> balance
    java.lang.Boolean noSignFlag -> noSignFlag
    java.lang.Boolean noPswFlag -> noPswFlag
    void <init>() -> <init>
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
    java.lang.Integer getTransType() -> getTransType
    void setTransType(java.lang.Integer) -> setTransType
    java.lang.Integer getOldTransType() -> getOldTransType
    void setOldTransType(java.lang.Integer) -> setOldTransType
    java.lang.Integer getTransAttr() -> getTransAttr
    void setTransAttr(java.lang.Integer) -> setTransAttr
    java.lang.Integer getTransStatus() -> getTransStatus
    void setTransStatus(java.lang.Integer) -> setTransStatus
    java.lang.Integer getEmvStatus() -> getEmvStatus
    void setEmvStatus(java.lang.Integer) -> setEmvStatus
    java.lang.String getPan() -> getPan
    void setPan(java.lang.String) -> setPan
    java.lang.Long getAmount() -> getAmount
    void setAmount(java.lang.Long) -> setAmount
    java.lang.String getTrace() -> getTrace
    void setTrace(java.lang.String) -> setTrace
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    java.lang.String getExpDate() -> getExpDate
    void setExpDate(java.lang.String) -> setExpDate
    java.lang.String getSettleDate() -> getSettleDate
    void setSettleDate(java.lang.String) -> setSettleDate
    java.lang.String getInputMode() -> getInputMode
    void setInputMode(java.lang.String) -> setInputMode
    java.lang.String getCardSerialNo() -> getCardSerialNo
    void setCardSerialNo(java.lang.String) -> setCardSerialNo
    java.lang.String getTrack2() -> getTrack2
    void setTrack2(java.lang.String) -> setTrack2
    java.lang.String getTrack3() -> getTrack3
    void setTrack3(java.lang.String) -> setTrack3
    java.lang.String getReferNum() -> getReferNum
    void setReferNum(java.lang.String) -> setReferNum
    java.lang.String getAuthCode() -> getAuthCode
    void setAuthCode(java.lang.String) -> setAuthCode
    java.lang.String getRespCode() -> getRespCode
    void setRespCode(java.lang.String) -> setRespCode
    java.lang.String getBatchNum() -> getBatchNum
    void setBatchNum(java.lang.String) -> setBatchNum
    java.lang.String getFuncCode() -> getFuncCode
    void setFuncCode(java.lang.String) -> setFuncCode
    java.lang.String getOldBatch() -> getOldBatch
    void setOldBatch(java.lang.String) -> setOldBatch
    java.lang.String getOldTrace() -> getOldTrace
    void setOldTrace(java.lang.String) -> setOldTrace
    java.lang.String getOldAuthCode() -> getOldAuthCode
    void setOldAuthCode(java.lang.String) -> setOldAuthCode
    java.lang.String getOldRefNum() -> getOldRefNum
    void setOldRefNum(java.lang.String) -> setOldRefNum
    java.lang.String getTelNo() -> getTelNo
    void setTelNo(java.lang.String) -> setTelNo
    java.lang.String getAppointmentNo() -> getAppointmentNo
    void setAppointmentNo(java.lang.String) -> setAppointmentNo
    java.lang.String getOper() -> getOper
    void setOper(java.lang.String) -> setOper
    java.lang.String getInterOrg() -> getInterOrg
    void setInterOrg(java.lang.String) -> setInterOrg
    java.lang.String getIisCode() -> getIisCode
    void setIisCode(java.lang.String) -> setIisCode
    java.lang.String getAcqCode() -> getAcqCode
    void setAcqCode(java.lang.String) -> setAcqCode
    java.lang.String getAcqCenterCode() -> getAcqCenterCode
    void setAcqCenterCode(java.lang.String) -> setAcqCenterCode
    java.lang.Long getTipAmount() -> getTipAmount
    void setTipAmount(java.lang.Long) -> setTipAmount
    java.lang.String getIisInfo() -> getIisInfo
    void setIisInfo(java.lang.String) -> setIisInfo
    java.lang.String getCupInfo() -> getCupInfo
    void setCupInfo(java.lang.String) -> setCupInfo
    java.lang.String getMerAcqInfo() -> getMerAcqInfo
    void setMerAcqInfo(java.lang.String) -> setMerAcqInfo
    java.lang.String getTermInfo() -> getTermInfo
    void setTermInfo(java.lang.String) -> setTermInfo
    java.lang.Integer getOffSendFlag() -> getOffSendFlag
    void setOffSendFlag(java.lang.Integer) -> setOffSendFlag
    java.lang.Integer getBatchUpFlag() -> getBatchUpFlag
    void setBatchUpFlag(java.lang.Integer) -> setBatchUpFlag
    java.lang.String getEmvAddition() -> getEmvAddition
    void setEmvAddition(java.lang.String) -> setEmvAddition
    java.lang.String getAddition() -> getAddition
    void setAddition(java.lang.String) -> setAddition
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
    java.lang.String getOldDate() -> getOldDate
    void setOldDate(java.lang.String) -> setOldDate
    java.lang.String getEmvAuthResp() -> getEmvAuthResp
    void setEmvAuthResp(java.lang.String) -> setEmvAuthResp
    java.lang.String getTvr() -> getTvr
    void setTvr(java.lang.String) -> setTvr
    java.lang.String getTsi() -> getTsi
    void setTsi(java.lang.String) -> setTsi
    java.lang.String getField55() -> getField55
    void setField55(java.lang.String) -> setField55
    java.lang.Long getEcBalance() -> getEcBalance
    void setEcBalance(java.lang.Long) -> setEcBalance
    java.lang.String getOldTerminalId() -> getOldTerminalId
    void setOldTerminalId(java.lang.String) -> setOldTerminalId
    java.lang.Boolean getSignatureFlag() -> getSignatureFlag
    void setSignatureFlag(java.lang.Boolean) -> setSignatureFlag
    int getSignSendFlag() -> getSignSendFlag
    void setSignSendFlag(int) -> setSignSendFlag
    java.lang.String getCardNoTransIn() -> getCardNoTransIn
    void setCardNoTransIn(java.lang.String) -> setCardNoTransIn
    void setSignSendFlag(java.lang.Integer) -> setSignSendFlag
    java.lang.Long getBalance() -> getBalance
    void setBalance(java.lang.Long) -> setBalance
    java.lang.String getCardHolderTelphone() -> getCardHolderTelphone
    void setCardHolderTelphone(java.lang.String) -> setCardHolderTelphone
    java.lang.Boolean getNoSignFlag() -> getNoSignFlag
    void setNoSignFlag(java.lang.Boolean) -> setNoSignFlag
    java.lang.Boolean getNoPswFlag() -> getNoPswFlag
    void setNoPswFlag(java.lang.Boolean) -> setNoPswFlag
    java.lang.Integer getTransCode() -> getTransCode
    void setTransCode(java.lang.Integer) -> setTransCode
    java.lang.String getOutOrderNo() -> getOutOrderNo
    void setOutOrderNo(java.lang.String) -> setOutOrderNo
    java.lang.Long getDiscountAmount() -> getDiscountAmount
    void setDiscountAmount(java.lang.Long) -> setDiscountAmount
    java.lang.Long getOrderAmount() -> getOrderAmount
    void setOrderAmount(java.lang.Long) -> setOrderAmount
    java.lang.String getCardType() -> getCardType
    void setCardType(java.lang.String) -> setCardType
com.newland.payment.mvc.service.BlackCardService -> com.newland.payment.mvc.service.a:
    long addBlackCard(java.lang.String) -> a
    java.util.List findAll() -> a
    long deleteAll() -> b
com.newland.payment.mvc.service.CommonDBService -> com.newland.payment.mvc.service.CommonDBService:
    void cleanWater(com.newland.payment.mvc.service.CommonDBService$CleanType) -> a
com.newland.payment.mvc.service.CommonDBService$CleanType -> com.newland.payment.mvc.service.CommonDBService$CleanType:
    com.newland.payment.mvc.service.CommonDBService$CleanType WATER -> WATER
    com.newland.payment.mvc.service.CommonDBService$CleanType REVERSE_WATER -> REVERSE_WATER
    com.newland.payment.mvc.service.CommonDBService$CleanType SCRIPT_RESULT -> SCRIPT_RESULT
    com.newland.payment.mvc.service.CommonDBService$CleanType SETTLEMENT -> SETTLEMENT
    com.newland.payment.mvc.service.CommonDBService$CleanType EMV_FAIL_WATER -> EMV_FAIL_WATER
    com.newland.payment.mvc.service.CommonDBService$CleanType[] $VALUES -> a
    com.newland.payment.mvc.service.CommonDBService$CleanType[] values() -> values
    com.newland.payment.mvc.service.CommonDBService$CleanType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.mvc.service.EmvFailWaterService -> com.newland.payment.mvc.service.b:
    long addEmvFailWater(com.newland.payment.mvc.model.EmvFailWater) -> a
    int updateEmvFailWater(com.newland.payment.mvc.model.EmvFailWater) -> b
    com.newland.payment.mvc.model.EmvFailWater findEmvFailWater(long) -> a
    void clearEmvFailWater() -> a
    int getCount() -> b
com.newland.payment.mvc.service.ReverseWaterService -> com.newland.payment.mvc.service.c:
    com.newland.payment.mvc.model.ReverseWater getReverseWater() -> a
    long add(com.newland.payment.mvc.model.ReverseWater) -> a
    int delete() -> b
    int changeField39Result(java.lang.String) -> a
    int changeField55(java.lang.String) -> b
    int changeReverseWater(java.lang.String,java.lang.String,java.lang.String) -> a
com.newland.payment.mvc.service.ScriptResultService -> com.newland.payment.mvc.service.d:
    com.newland.payment.mvc.model.ScriptResult getScriptResult() -> a
    long addScriptResult(com.newland.payment.mvc.model.ScriptResult) -> a
    int delete() -> b
    int updateScriptResult(com.newland.payment.mvc.model.ScriptResult) -> b
com.newland.payment.mvc.service.SettlementService -> com.newland.payment.mvc.service.e:
    int getSettleNum_NK(java.lang.String) -> a
    long getSettleAmount_NK(java.lang.String) -> b
    int getSettleNum_WK(java.lang.String) -> c
    long getSettleAmount_WK(java.lang.String) -> d
    int addSettleNum_NK(java.lang.String,int) -> a
    int addSettleAmount_NK(java.lang.String,long) -> a
    void clearSettlement() -> a
com.newland.payment.mvc.service.UserService -> com.newland.payment.mvc.service.f:
    int getPasswdLenByUserNo(java.lang.String) -> a
    int checkLogin(java.lang.String,java.lang.String) -> a
    java.util.List findAllUsers() -> a
com.newland.payment.mvc.service.WaterService -> com.newland.payment.mvc.service.g:
    long addWater(com.newland.payment.mvc.model.Water) -> a
    int updateWater(com.newland.payment.mvc.model.Water) -> b
    com.newland.payment.mvc.model.Water findByTrace(java.lang.String) -> a
    com.newland.payment.mvc.model.Water findByReferNum(java.lang.String) -> b
    com.newland.payment.mvc.model.Water findById(long) -> a
    int getWaterCount() -> a
    java.util.List findByPage(int,int) -> a
    void clearWater() -> b
    com.newland.payment.mvc.model.Water findByTrace(java.lang.String,java.lang.String) -> a
    com.newland.payment.mvc.model.Water findByOutOrderNo(java.lang.String) -> c
com.newland.payment.mvc.service.impl.BlackCardServiceImpl -> com.newland.payment.mvc.service.a.a:
    com.newland.payment.mvc.dao.BlackCardDao blackCardDao -> a
    void <init>(android.content.Context) -> <init>
    long addBlackCard(java.lang.String) -> a
    java.util.List findAll() -> a
    long deleteAll() -> b
com.newland.payment.mvc.service.impl.CardBinAServiceImpl -> com.newland.payment.mvc.service.a.b:
    com.newland.payment.mvc.dao.impl.CardBinADaoImpl cardBinADao -> a
    void <init>(android.content.Context) -> <init>
    com.newland.payment.mvc.model.CardBinA findByCardBin(java.lang.String) -> a
com.newland.payment.mvc.service.impl.CardBinBServiceImpl -> com.newland.payment.mvc.service.a.c:
    com.newland.payment.mvc.dao.impl.CardBinBDaoImpl CardBinBDao -> a
    void <init>(android.content.Context) -> <init>
    long addCardBin(java.lang.String) -> a
    com.newland.payment.mvc.model.CardBinB findByCardBin(java.lang.String) -> b
com.newland.payment.mvc.service.impl.CardBinCServiceImpl -> com.newland.payment.mvc.service.a.d:
    com.newland.payment.mvc.dao.impl.CardBinCDaoImpl CardBinCDao -> a
    void <init>(android.content.Context) -> <init>
    long addCardBin(java.lang.String) -> a
    com.newland.payment.mvc.model.CardBinC findByCardBin(java.lang.String) -> b
    long deleteAll() -> a
com.newland.payment.mvc.service.impl.CommonDBServiceImpl -> com.newland.payment.mvc.service.a.e:
    com.newland.payment.mvc.dao.impl.ReverseWaterDaoImpl reverseWaterDao -> a
    com.newland.payment.mvc.dao.impl.WaterDaoImpl waterDao -> b
    com.newland.payment.mvc.dao.impl.ScriptResultDaoImpl scriptResultDao -> c
    com.newland.payment.mvc.dao.impl.UserDaoImpl userDao -> d
    com.newland.payment.mvc.dao.impl.SettlementDaoImpl settlementDao -> e
    com.newland.payment.mvc.dao.impl.EmvFailWaterDaoImpl emvFailWaterDao -> f
    com.newland.payment.mvc.dao.impl.BlackCardDaoImpl blackCardDao -> g
    void <init>(android.content.Context) -> <init>
    void cleanWater(com.newland.payment.mvc.service.CommonDBService$CleanType) -> a
com.newland.payment.mvc.service.impl.CommonDBServiceImpl$1 -> com.newland.payment.mvc.service.a.e$1:
    int[] $SwitchMap$com$newland$payment$mvc$service$CommonDBService$CleanType -> a
    void <clinit>() -> <clinit>
com.newland.payment.mvc.service.impl.EmvFailWaterServiceImpl -> com.newland.payment.mvc.service.a.f:
    android.content.Context context -> a
    com.newland.payment.mvc.dao.EmvFailWaterDao emvFailWaterDao -> b
    void <init>(android.content.Context) -> <init>
    long addEmvFailWater(com.newland.payment.mvc.model.EmvFailWater) -> a
    int updateEmvFailWater(com.newland.payment.mvc.model.EmvFailWater) -> b
    com.newland.payment.mvc.model.EmvFailWater findEmvFailWater(long) -> a
    void clearEmvFailWater() -> a
    int getCount() -> b
com.newland.payment.mvc.service.impl.ReverseWaterServiceImpl -> com.newland.payment.mvc.service.a.g:
    com.newland.payment.mvc.dao.ReverseWaterDao reverseWaterDao -> a
    void <init>(android.content.Context) -> <init>
    com.newland.payment.mvc.model.ReverseWater getReverseWater() -> a
    long add(com.newland.payment.mvc.model.ReverseWater) -> a
    int delete() -> b
    int changeField39Result(java.lang.String) -> a
    int changeField55(java.lang.String) -> b
    int changeReverseWater(java.lang.String,java.lang.String,java.lang.String) -> a
com.newland.payment.mvc.service.impl.ScriptResultServiceImpl -> com.newland.payment.mvc.service.a.h:
    com.newland.payment.mvc.dao.ScriptResultDao scriptResultDao -> a
    void <init>(android.content.Context) -> <init>
    com.newland.payment.mvc.model.ScriptResult getScriptResult() -> a
    long addScriptResult(com.newland.payment.mvc.model.ScriptResult) -> a
    int delete() -> b
    int updateScriptResult(com.newland.payment.mvc.model.ScriptResult) -> b
com.newland.payment.mvc.service.impl.SettlementServiceImpl -> com.newland.payment.mvc.service.a.i:
    android.content.Context context -> a
    com.newland.payment.mvc.dao.SettlementDao settlementDao -> b
    void <init>(android.content.Context) -> <init>
    int getSettleNum_NK(java.lang.String) -> a
    long getSettleAmount_NK(java.lang.String) -> b
    int getSettleNum_WK(java.lang.String) -> c
    long getSettleAmount_WK(java.lang.String) -> d
    int addSettleNum_NK(java.lang.String,int) -> a
    int addSettleAmount_NK(java.lang.String,long) -> a
    void clearSettlement() -> a
com.newland.payment.mvc.service.impl.UserServiceImpl -> com.newland.payment.mvc.service.a.j:
    com.newland.payment.mvc.dao.UserDao userDao -> a
    void <init>(android.content.Context) -> <init>
    int getPasswdLenByUserNo(java.lang.String) -> a
    long addUser(com.newland.payment.mvc.model.User) -> a
    int deleteUser(java.lang.String) -> b
    int checkLogin(java.lang.String,java.lang.String) -> a
    int updateManagerPassword(java.lang.String,java.lang.String) -> b
    int updateMasterPassword(java.lang.String,java.lang.String) -> c
    int updateUserPassword(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean isUserNo(java.lang.String) -> c
    java.util.List findAllUsers() -> a
com.newland.payment.mvc.service.impl.WaterServiceImpl -> com.newland.payment.mvc.service.a.k:
    android.content.Context context -> a
    com.newland.payment.mvc.dao.WaterDao waterDao -> b
    void <init>(android.content.Context) -> <init>
    long addWater(com.newland.payment.mvc.model.Water) -> a
    com.newland.payment.mvc.model.Water findByTrace(java.lang.String) -> a
    com.newland.payment.mvc.model.Water findByReferNum(java.lang.String) -> b
    com.newland.payment.mvc.model.Water findLastWater() -> c
    int getWaterCount() -> a
    java.util.List findByPage(int,int) -> a
    int updateWater(com.newland.payment.mvc.model.Water) -> b
    com.newland.payment.mvc.model.Water findById(long) -> a
    void clearWater() -> b
    com.newland.payment.mvc.model.Water findByTrace(java.lang.String,java.lang.String) -> a
    com.newland.payment.mvc.model.Water findByOutOrderNo(java.lang.String) -> c
com.newland.payment.printer.template.model.PrintAllWaterModel -> com.newland.payment.printer.template.model.PrintAllWaterModel:
    java.lang.String isTitleFlag -> isTitleFlag
    java.lang.String isDescript -> isDescript
    java.lang.String isExplain -> isExplain
    java.lang.String isEnd -> isEnd
    java.lang.String traceNo -> traceNo
    java.lang.String type -> type
    java.lang.String cardNo -> cardNo
    java.lang.String amount -> amount
    java.lang.String authNo -> authNo
    java.lang.String unsucc -> unsucc
    java.lang.String denied -> denied
    java.lang.String currency -> currency
    void <init>() -> <init>
    java.lang.String getIsTitleFlag() -> getIsTitleFlag
    void setIsTitleFlag(java.lang.String) -> setIsTitleFlag
    java.lang.String getIsDescript() -> getIsDescript
    void setIsDescript(java.lang.String) -> setIsDescript
    java.lang.String getIsExplain() -> getIsExplain
    void setIsExplain(java.lang.String) -> setIsExplain
    java.lang.String getIsEnd() -> getIsEnd
    void setIsEnd(java.lang.String) -> setIsEnd
    java.lang.String getTraceNo() -> getTraceNo
    void setTraceNo(java.lang.String) -> setTraceNo
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getCardNo() -> getCardNo
    void setCardNo(java.lang.String) -> setCardNo
    java.lang.String getAmount() -> getAmount
    void setAmount(java.lang.String) -> setAmount
    java.lang.String getAuthNo() -> getAuthNo
    void setAuthNo(java.lang.String) -> setAuthNo
    java.lang.String getUnsucc() -> getUnsucc
    void setUnsucc(java.lang.String) -> setUnsucc
    java.lang.String getDenied() -> getDenied
    void setDenied(java.lang.String) -> setDenied
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
com.newland.payment.printer.template.model.PrintFailWaterModel -> com.newland.payment.printer.template.model.PrintFailWaterModel:
    java.lang.String unsucc -> unsucc
    java.lang.String denied -> denied
    java.lang.String isDescript -> isDescript
    java.lang.String traceNo -> traceNo
    java.lang.String type -> type
    java.lang.String cardNo -> cardNo
    java.lang.String amount -> amount
    java.lang.String isEnd -> isEnd
    void <init>() -> <init>
    java.lang.String getUnsucc() -> getUnsucc
    void setUnsucc(java.lang.String) -> setUnsucc
    java.lang.String getDenied() -> getDenied
    void setDenied(java.lang.String) -> setDenied
    java.lang.String getIsDescript() -> getIsDescript
    void setIsDescript(java.lang.String) -> setIsDescript
    java.lang.String getTraceNo() -> getTraceNo
    void setTraceNo(java.lang.String) -> setTraceNo
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getCardNo() -> getCardNo
    void setCardNo(java.lang.String) -> setCardNo
    java.lang.String getAmount() -> getAmount
    void setAmount(java.lang.String) -> setAmount
    java.lang.String getIsEnd() -> getIsEnd
    void setIsEnd(java.lang.String) -> setIsEnd
com.newland.payment.printer.template.model.PrintInfoModel -> com.newland.payment.printer.template.model.PrintInfoModel:
    java.lang.String isPrintShopParam -> isPrintShopParam
    java.lang.String merchantName -> merchantName
    java.lang.String shopId -> shopId
    java.lang.String terminalId -> terminalId
    java.lang.String appName -> appName
    java.lang.String adsInfo -> adsInfo
    java.lang.String isPrintVer -> isPrintVer
    java.lang.String appVer -> appVer
    void <init>() -> <init>
    java.lang.String getIsPrintShopParam() -> getIsPrintShopParam
    void setIsPrintShopParam(java.lang.String) -> setIsPrintShopParam
    java.lang.String getMerchantName() -> getMerchantName
    void setMerchantName(java.lang.String) -> setMerchantName
    java.lang.String getShopId() -> getShopId
    void setShopId(java.lang.String) -> setShopId
    java.lang.String getTerminalId() -> getTerminalId
    void setTerminalId(java.lang.String) -> setTerminalId
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
    java.lang.String getAdsInfo() -> getAdsInfo
    void setAdsInfo(java.lang.String) -> setAdsInfo
    java.lang.String getIsPrintVer() -> getIsPrintVer
    void setIsPrintVer(java.lang.String) -> setIsPrintVer
    java.lang.String getAppVer() -> getAppVer
    void setAppVer(java.lang.String) -> setAppVer
com.newland.payment.printer.template.model.PrintSettleModel -> com.newland.payment.printer.template.model.PrintSettleModel:
    java.lang.String merchantName -> merchantName
    java.lang.String shopId -> shopId
    java.lang.String terminalId -> terminalId
    java.lang.String operId -> operId
    java.lang.String batchNo -> batchNo
    java.lang.String dateTime -> dateTime
    java.lang.String isSettleEok0EqualFlag -> isSettleEok0EqualFlag
    java.lang.String isSettleEok0NotEqualFlag -> isSettleEok0NotEqualFlag
    java.lang.String isSettleEok0ErrFlag -> isSettleEok0ErrFlag
    java.lang.String saleAmt0 -> saleAmt0
    java.lang.String voidSaleAmt0 -> voidSaleAmt0
    java.lang.String refundAmt0 -> refundAmt0
    java.lang.String authSaleAmt0 -> authSaleAmt0
    java.lang.String voidAuthSaleAmt0 -> voidAuthSaleAmt0
    java.lang.String offlineAmt0 -> offlineAmt0
    java.lang.String authSaleOffAmt0 -> authSaleOffAmt0
    java.lang.String LoadAmt0 -> LoadAmt0
    java.lang.String ECSaleAmt0 -> ECSaleAmt0
    java.lang.String totalAmt0 -> totalAmt0
    java.lang.String saleNum0 -> saleNum0
    java.lang.String voidSaleNum0 -> voidSaleNum0
    java.lang.String refundNum0 -> refundNum0
    java.lang.String authSaleNum0 -> authSaleNum0
    java.lang.String voidAuthSaleNum0 -> voidAuthSaleNum0
    java.lang.String offlineNum0 -> offlineNum0
    java.lang.String authSaleOffNum0 -> authSaleOffNum0
    java.lang.String LoadNum0 -> LoadNum0
    java.lang.String ECSaleNum0 -> ECSaleNum0
    java.lang.String totalNum0 -> totalNum0
    java.lang.String isSettleEok1EqualFlag -> isSettleEok1EqualFlag
    java.lang.String isSettleEok1NotEqualFlag -> isSettleEok1NotEqualFlag
    java.lang.String isSettleEok1ErrFlag -> isSettleEok1ErrFlag
    java.lang.String saleAmt1 -> saleAmt1
    java.lang.String voidSaleAmt1 -> voidSaleAmt1
    java.lang.String refundAmt1 -> refundAmt1
    java.lang.String authSaleAmt1 -> authSaleAmt1
    java.lang.String voidAuthSaleAmt1 -> voidAuthSaleAmt1
    java.lang.String offlineAmt1 -> offlineAmt1
    java.lang.String authSaleOffAmt1 -> authSaleOffAmt1
    java.lang.String LoadAmt1 -> LoadAmt1
    java.lang.String ECSaleAmt1 -> ECSaleAmt1
    java.lang.String saleNum1 -> saleNum1
    java.lang.String voidSaleNum1 -> voidSaleNum1
    java.lang.String refundNum1 -> refundNum1
    java.lang.String authSaleNum1 -> authSaleNum1
    java.lang.String voidAuthSaleNum1 -> voidAuthSaleNum1
    java.lang.String offlineNum1 -> offlineNum1
    java.lang.String authSaleOffNum1 -> authSaleOffNum1
    java.lang.String LoadNum1 -> LoadNum1
    java.lang.String ECSaleNum1 -> ECSaleNum1
    java.lang.String totalNum1 -> totalNum1
    java.lang.String totalAmt1 -> totalAmt1
    java.lang.String isReprint -> isReprint
    void <init>() -> <init>
    java.lang.String getTotalAmt1() -> getTotalAmt1
    void setTotalAmt1(java.lang.String) -> setTotalAmt1
    java.lang.String getTotalAmt0() -> getTotalAmt0
    void setTotalAmt0(java.lang.String) -> setTotalAmt0
    java.lang.String getSaleNum0() -> getSaleNum0
    void setSaleNum0(java.lang.String) -> setSaleNum0
    java.lang.String getVoidSaleNum0() -> getVoidSaleNum0
    void setVoidSaleNum0(java.lang.String) -> setVoidSaleNum0
    java.lang.String getRefundNum0() -> getRefundNum0
    void setRefundNum0(java.lang.String) -> setRefundNum0
    java.lang.String getAuthSaleNum0() -> getAuthSaleNum0
    void setAuthSaleNum0(java.lang.String) -> setAuthSaleNum0
    java.lang.String getVoidAuthSaleNum0() -> getVoidAuthSaleNum0
    void setVoidAuthSaleNum0(java.lang.String) -> setVoidAuthSaleNum0
    java.lang.String getOfflineNum0() -> getOfflineNum0
    void setOfflineNum0(java.lang.String) -> setOfflineNum0
    java.lang.String getAuthSaleOffNum0() -> getAuthSaleOffNum0
    void setAuthSaleOffNum0(java.lang.String) -> setAuthSaleOffNum0
    java.lang.String getLoadNum0() -> getLoadNum0
    void setLoadNum0(java.lang.String) -> setLoadNum0
    java.lang.String getECSaleNum0() -> getECSaleNum0
    void setECSaleNum0(java.lang.String) -> setECSaleNum0
    java.lang.String getTotalNum0() -> getTotalNum0
    void setTotalNum0(java.lang.String) -> setTotalNum0
    java.lang.String getSaleNum1() -> getSaleNum1
    void setSaleNum1(java.lang.String) -> setSaleNum1
    java.lang.String getVoidSaleNum1() -> getVoidSaleNum1
    void setVoidSaleNum1(java.lang.String) -> setVoidSaleNum1
    java.lang.String getRefundNum1() -> getRefundNum1
    void setRefundNum1(java.lang.String) -> setRefundNum1
    java.lang.String getAuthSaleNum1() -> getAuthSaleNum1
    void setAuthSaleNum1(java.lang.String) -> setAuthSaleNum1
    java.lang.String getVoidAuthSaleNum1() -> getVoidAuthSaleNum1
    void setVoidAuthSaleNum1(java.lang.String) -> setVoidAuthSaleNum1
    java.lang.String getOfflineNum1() -> getOfflineNum1
    void setOfflineNum1(java.lang.String) -> setOfflineNum1
    java.lang.String getAuthSaleOffNum1() -> getAuthSaleOffNum1
    void setAuthSaleOffNum1(java.lang.String) -> setAuthSaleOffNum1
    java.lang.String getLoadNum1() -> getLoadNum1
    void setLoadNum1(java.lang.String) -> setLoadNum1
    java.lang.String getECSaleNum1() -> getECSaleNum1
    void setECSaleNum1(java.lang.String) -> setECSaleNum1
    java.lang.String getTotalNum1() -> getTotalNum1
    void setTotalNum1(java.lang.String) -> setTotalNum1
    java.lang.String getIsReprint() -> getIsReprint
    void setIsReprint(java.lang.String) -> setIsReprint
    java.lang.String getMerchantName() -> getMerchantName
    void setMerchantName(java.lang.String) -> setMerchantName
    java.lang.String getShopId() -> getShopId
    void setShopId(java.lang.String) -> setShopId
    java.lang.String getTerminalId() -> getTerminalId
    void setTerminalId(java.lang.String) -> setTerminalId
    java.lang.String getOperId() -> getOperId
    void setOperId(java.lang.String) -> setOperId
    java.lang.String getBatchNo() -> getBatchNo
    void setBatchNo(java.lang.String) -> setBatchNo
    java.lang.String getDateTime() -> getDateTime
    void setDateTime(java.lang.String) -> setDateTime
    java.lang.String getSaleAmt0() -> getSaleAmt0
    void setSaleAmt0(java.lang.String) -> setSaleAmt0
    java.lang.String getVoidSaleAmt0() -> getVoidSaleAmt0
    void setVoidSaleAmt0(java.lang.String) -> setVoidSaleAmt0
    java.lang.String getRefundAmt0() -> getRefundAmt0
    void setRefundAmt0(java.lang.String) -> setRefundAmt0
    java.lang.String getAuthSaleAmt0() -> getAuthSaleAmt0
    void setAuthSaleAmt0(java.lang.String) -> setAuthSaleAmt0
    java.lang.String getVoidAuthSaleAmt0() -> getVoidAuthSaleAmt0
    void setVoidAuthSaleAmt0(java.lang.String) -> setVoidAuthSaleAmt0
    java.lang.String getOfflineAmt0() -> getOfflineAmt0
    void setOfflineAmt0(java.lang.String) -> setOfflineAmt0
    java.lang.String getAuthSaleOffAmt0() -> getAuthSaleOffAmt0
    void setAuthSaleOffAmt0(java.lang.String) -> setAuthSaleOffAmt0
    java.lang.String getLoadAmt0() -> getLoadAmt0
    void setLoadAmt0(java.lang.String) -> setLoadAmt0
    java.lang.String getECSaleAmt0() -> getECSaleAmt0
    void setECSaleAmt0(java.lang.String) -> setECSaleAmt0
    java.lang.String getSaleAmt1() -> getSaleAmt1
    void setSaleAmt1(java.lang.String) -> setSaleAmt1
    java.lang.String getVoidSaleAmt1() -> getVoidSaleAmt1
    void setVoidSaleAmt1(java.lang.String) -> setVoidSaleAmt1
    java.lang.String getRefundAmt1() -> getRefundAmt1
    void setRefundAmt1(java.lang.String) -> setRefundAmt1
    java.lang.String getAuthSaleAmt1() -> getAuthSaleAmt1
    void setAuthSaleAmt1(java.lang.String) -> setAuthSaleAmt1
    java.lang.String getVoidAuthSaleAmt1() -> getVoidAuthSaleAmt1
    void setVoidAuthSaleAmt1(java.lang.String) -> setVoidAuthSaleAmt1
    java.lang.String getOfflineAmt1() -> getOfflineAmt1
    void setOfflineAmt1(java.lang.String) -> setOfflineAmt1
    java.lang.String getAuthSaleOffAmt1() -> getAuthSaleOffAmt1
    void setAuthSaleOffAmt1(java.lang.String) -> setAuthSaleOffAmt1
    java.lang.String getLoadAmt1() -> getLoadAmt1
    void setLoadAmt1(java.lang.String) -> setLoadAmt1
    java.lang.String getECSaleAmt1() -> getECSaleAmt1
    void setECSaleAmt1(java.lang.String) -> setECSaleAmt1
    java.lang.String getIsSettleEok0EqualFlag() -> getIsSettleEok0EqualFlag
    void setIsSettleEok0EqualFlag(java.lang.String) -> setIsSettleEok0EqualFlag
    java.lang.String getIsSettleEok0NotEqualFlag() -> getIsSettleEok0NotEqualFlag
    void setIsSettleEok0NotEqualFlag(java.lang.String) -> setIsSettleEok0NotEqualFlag
    java.lang.String getIsSettleEok0ErrFlag() -> getIsSettleEok0ErrFlag
    void setIsSettleEok0ErrFlag(java.lang.String) -> setIsSettleEok0ErrFlag
    java.lang.String getIsSettleEok1EqualFlag() -> getIsSettleEok1EqualFlag
    void setIsSettleEok1EqualFlag(java.lang.String) -> setIsSettleEok1EqualFlag
    java.lang.String getIsSettleEok1NotEqualFlag() -> getIsSettleEok1NotEqualFlag
    void setIsSettleEok1NotEqualFlag(java.lang.String) -> setIsSettleEok1NotEqualFlag
    java.lang.String getIsSettleEok1ErrFlag() -> getIsSettleEok1ErrFlag
    void setIsSettleEok1ErrFlag(java.lang.String) -> setIsSettleEok1ErrFlag
com.newland.payment.printer.template.model.PrintSysParamModel -> com.newland.payment.printer.template.model.PrintSysParamModel:
    java.lang.String ISPRINTTRANS -> ISPRINTTRANS
    java.lang.String ISSALE -> ISSALE
    java.lang.String ISVOIDSALE -> ISVOIDSALE
    java.lang.String ISREFUND -> ISREFUND
    java.lang.String ISBALANCE -> ISBALANCE
    java.lang.String ISPREAUTH -> ISPREAUTH
    java.lang.String ISVOIDPREAUTH -> ISVOIDPREAUTH
    java.lang.String ISAUTHSALE -> ISAUTHSALE
    java.lang.String ISAUTHSALEOFF -> ISAUTHSALEOFF
    java.lang.String ISVOIDAUTHSALE -> ISVOIDAUTHSALE
    java.lang.String ISOFFLINE -> ISOFFLINE
    java.lang.String ISREJUST -> ISREJUST
    java.lang.String ISECSALE -> ISECSALE
    java.lang.String ISECFASTSALE -> ISECFASTSALE
    java.lang.String ISECLOAD -> ISECLOAD
    java.lang.String NOTBINDECLOAD -> NOTBINDECLOAD
    java.lang.String ISECLOADCASH -> ISECLOADCASH
    java.lang.String ISECVOIDLOADCASH -> ISECVOIDLOADCASH
    java.lang.String ISECOFFREFUND -> ISECOFFREFUND
    java.lang.String ISEPSALE -> ISEPSALE
    java.lang.String ISINSTALL -> ISINSTALL
    java.lang.String ISVOIDINSTALL -> ISVOIDINSTALL
    java.lang.String BONUS_ALLIANCE -> BONUS_ALLIANCE
    java.lang.String BONUS_IIS_SALE -> BONUS_IIS_SALE
    java.lang.String VOIDBONUS_ALL -> VOIDBONUS_ALL
    java.lang.String VOID_BONUS_IIS -> VOID_BONUS_IIS
    java.lang.String ALLIANCE_BALANCE -> ALLIANCE_BALANCE
    java.lang.String ALLIANCE_REFUND -> ALLIANCE_REFUND
    java.lang.String ISPHONESALE -> ISPHONESALE
    java.lang.String ISVOIDPHONESALE -> ISVOIDPHONESALE
    java.lang.String ISREFUNDPHONE -> ISREFUNDPHONE
    java.lang.String ISPHONEPREAUTH -> ISPHONEPREAUTH
    java.lang.String ISPHONEVOIDPRE -> ISPHONEVOIDPRE
    java.lang.String ISPHONEAUTH -> ISPHONEAUTH
    java.lang.String ISPHONEVOIDAUTH -> ISPHONEVOIDAUTH
    java.lang.String ISPHONEBALANCE -> ISPHONEBALANCE
    java.lang.String ISAPPOINT -> ISAPPOINT
    java.lang.String ISVOIDAPPOINT -> ISVOIDAPPOINT
    java.lang.String ISORDERSALE -> ISORDERSALE
    java.lang.String ISORDERVOIDSALE -> ISORDERVOIDSALE
    java.lang.String ISREFUNDORDER -> ISREFUNDORDER
    java.lang.String ISORDERPREAUTH -> ISORDERPREAUTH
    java.lang.String ISORDERVOIDPRE -> ISORDERVOIDPRE
    java.lang.String ISORDERAUTHSALE -> ISORDERAUTHSALE
    java.lang.String ISORDERAUTHOFF -> ISORDERAUTHOFF
    java.lang.String ISORDERVOIDAUTH -> ISORDERVOIDAUTH
    java.lang.String ISSTRIPECASHLOAD -> ISSTRIPECASHLOAD
    java.lang.String ISSTRIPELOAD -> ISSTRIPELOAD
    java.lang.String AUTOLOGOUT -> AUTOLOGOUT
    java.lang.String PRNWATERREC -> PRNWATERREC
    java.lang.String OFFLINESENDTYPE -> OFFLINESENDTYPE
    java.lang.String OFFLINESENDCOUNT -> OFFLINESENDCOUNT
    java.lang.String OFFLINESENDTIME -> OFFLINESENDTIME
    java.lang.String ADMINPWD -> ADMINPWD
    java.lang.String CARDINPUT -> CARDINPUT
    java.lang.String DEFAULTTRANSTYPE -> DEFAULTTRANSTYPE
    java.lang.String MAXREFUNDAMT -> MAXREFUNDAMT
    java.lang.String ISPRINTSYSPARAM -> ISPRINTSYSPARAM
    java.lang.String TRACENO -> TRACENO
    java.lang.String BATCHNO -> BATCHNO
    java.lang.String PNTCHACQUIRER -> PNTCHACQUIRER
    java.lang.String PNTCHCARDSCHEME -> PNTCHCARDSCHEME
    java.lang.String PNTTYPE -> PNTTYPE
    java.lang.String PRINTPAGE -> PRINTPAGE
    java.lang.String TICKETWITHEN -> TICKETWITHEN
    java.lang.String REVERSALNUM -> REVERSALNUM
    java.lang.String MAXTRANSCOUNT -> MAXTRANSCOUNT
    java.lang.String TIPRATE -> TIPRATE
    java.lang.String PNTFONTSIZE -> PNTFONTSIZE
    java.lang.String PRINTMINUS -> PRINTMINUS
    java.lang.String PNTALLTRANS -> PNTALLTRANS
    java.lang.String UNKNOWBANK -> UNKNOWBANK
    java.lang.String ISPRINTINPUTPIN -> ISPRINTINPUTPIN
    java.lang.String SALEVOIDSTRIP -> SALEVOIDSTRIP
    java.lang.String AUTHSALEVOIDSTRIP -> AUTHSALEVOIDSTRIP
    java.lang.String VOIDPIN -> VOIDPIN
    java.lang.String PREAUTHVOIDPIN -> PREAUTHVOIDPIN
    java.lang.String AUTHSALEVOIDPIN -> AUTHSALEVOIDPIN
    java.lang.String AUTHSALEPIN -> AUTHSALEPIN
    java.lang.String ISPRINTKEY -> ISPRINTKEY
    java.lang.String MAINKEYNO -> MAINKEYNO
    java.lang.String ENCYPTMODE -> ENCYPTMODE
    java.lang.String ISPRINTCOMM -> ISPRINTCOMM
    java.lang.String COMMTYPE -> COMMTYPE
    java.lang.String TELNO1 -> TELNO1
    java.lang.String TELNO2 -> TELNO2
    java.lang.String TELNO3 -> TELNO3
    java.lang.String MANAGETELNO -> MANAGETELNO
    java.lang.String APN1 -> APN1
    java.lang.String APN2 -> APN2
    java.lang.String COMMMODE -> COMMMODE
    java.lang.String IPADDR -> IPADDR
    java.lang.String MASK -> MASK
    java.lang.String GATE -> GATE
    java.lang.String WIFISSID -> WIFISSID
    java.lang.String WIFIMODE -> WIFIMODE
    java.lang.String DNSIP -> DNSIP
    java.lang.String DOMAIN1 -> DOMAIN1
    java.lang.String DNSPORT1 -> DNSPORT1
    java.lang.String DOMAIN2 -> DOMAIN2
    java.lang.String DNSPORT2 -> DNSPORT2
    java.lang.String IP1 -> IP1
    java.lang.String PORT1 -> PORT1
    java.lang.String IP2 -> IP2
    java.lang.String PORT2 -> PORT2
    java.lang.String USERNAME -> USERNAME
    java.lang.String USERPWD -> USERPWD
    java.lang.String WIRELESSDIALNUN -> WIRELESSDIALNUN
    java.lang.String TPDU -> TPDU
    java.lang.String REDIALNUM -> REDIALNUM
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String ISPREDIAL -> ISPREDIAL
    void <init>() -> <init>
    java.lang.String getISSALE() -> getISSALE
    void setISSALE(java.lang.String) -> setISSALE
    java.lang.String getISVOIDSALE() -> getISVOIDSALE
    void setISVOIDSALE(java.lang.String) -> setISVOIDSALE
    java.lang.String getISREFUND() -> getISREFUND
    void setISREFUND(java.lang.String) -> setISREFUND
    java.lang.String getISBALANCE() -> getISBALANCE
    void setISBALANCE(java.lang.String) -> setISBALANCE
    java.lang.String getISPREAUTH() -> getISPREAUTH
    void setISPREAUTH(java.lang.String) -> setISPREAUTH
    java.lang.String getISVOIDPREAUTH() -> getISVOIDPREAUTH
    void setISVOIDPREAUTH(java.lang.String) -> setISVOIDPREAUTH
    java.lang.String getISAUTHSALE() -> getISAUTHSALE
    void setISAUTHSALE(java.lang.String) -> setISAUTHSALE
    java.lang.String getISAUTHSALEOFF() -> getISAUTHSALEOFF
    void setISAUTHSALEOFF(java.lang.String) -> setISAUTHSALEOFF
    java.lang.String getISVOIDAUTHSALE() -> getISVOIDAUTHSALE
    void setISVOIDAUTHSALE(java.lang.String) -> setISVOIDAUTHSALE
    java.lang.String getISOFFLINE() -> getISOFFLINE
    void setISOFFLINE(java.lang.String) -> setISOFFLINE
    java.lang.String getISREJUST() -> getISREJUST
    void setISREJUST(java.lang.String) -> setISREJUST
    java.lang.String getISECSALE() -> getISECSALE
    void setISECSALE(java.lang.String) -> setISECSALE
    java.lang.String getISECFASTSALE() -> getISECFASTSALE
    void setISECFASTSALE(java.lang.String) -> setISECFASTSALE
    java.lang.String getISECLOAD() -> getISECLOAD
    void setISECLOAD(java.lang.String) -> setISECLOAD
    java.lang.String getNOTBINDECLOAD() -> getNOTBINDECLOAD
    void setNOTBINDECLOAD(java.lang.String) -> setNOTBINDECLOAD
    java.lang.String getISECLOADCASH() -> getISECLOADCASH
    void setISECLOADCASH(java.lang.String) -> setISECLOADCASH
    java.lang.String getISECVOIDLOADCASH() -> getISECVOIDLOADCASH
    void setISECVOIDLOADCASH(java.lang.String) -> setISECVOIDLOADCASH
    java.lang.String getISECOFFREFUND() -> getISECOFFREFUND
    void setISECOFFREFUND(java.lang.String) -> setISECOFFREFUND
    java.lang.String getISEPSALE() -> getISEPSALE
    void setISEPSALE(java.lang.String) -> setISEPSALE
    java.lang.String getISINSTALL() -> getISINSTALL
    void setISINSTALL(java.lang.String) -> setISINSTALL
    java.lang.String getISVOIDINSTALL() -> getISVOIDINSTALL
    void setISVOIDINSTALL(java.lang.String) -> setISVOIDINSTALL
    java.lang.String getBONUS_ALLIANCE() -> getBONUS_ALLIANCE
    void setBONUS_ALLIANCE(java.lang.String) -> setBONUS_ALLIANCE
    java.lang.String getBONUS_IIS_SALE() -> getBONUS_IIS_SALE
    void setBONUS_IIS_SALE(java.lang.String) -> setBONUS_IIS_SALE
    java.lang.String getVOIDBONUS_ALL() -> getVOIDBONUS_ALL
    void setVOIDBONUS_ALL(java.lang.String) -> setVOIDBONUS_ALL
    java.lang.String getVOID_BONUS_IIS() -> getVOID_BONUS_IIS
    void setVOID_BONUS_IIS(java.lang.String) -> setVOID_BONUS_IIS
    java.lang.String getALLIANCE_BALANCE() -> getALLIANCE_BALANCE
    void setALLIANCE_BALANCE(java.lang.String) -> setALLIANCE_BALANCE
    java.lang.String getALLIANCE_REFUND() -> getALLIANCE_REFUND
    void setALLIANCE_REFUND(java.lang.String) -> setALLIANCE_REFUND
    java.lang.String getISPHONESALE() -> getISPHONESALE
    void setISPHONESALE(java.lang.String) -> setISPHONESALE
    java.lang.String getISVOIDPHONESALE() -> getISVOIDPHONESALE
    void setISVOIDPHONESALE(java.lang.String) -> setISVOIDPHONESALE
    java.lang.String getISREFUNDPHONE() -> getISREFUNDPHONE
    void setISREFUNDPHONE(java.lang.String) -> setISREFUNDPHONE
    java.lang.String getISPHONEPREAUTH() -> getISPHONEPREAUTH
    void setISPHONEPREAUTH(java.lang.String) -> setISPHONEPREAUTH
    java.lang.String getISPHONEVOIDPRE() -> getISPHONEVOIDPRE
    void setISPHONEVOIDPRE(java.lang.String) -> setISPHONEVOIDPRE
    java.lang.String getISPHONEAUTH() -> getISPHONEAUTH
    void setISPHONEAUTH(java.lang.String) -> setISPHONEAUTH
    java.lang.String getISPHONEVOIDAUTH() -> getISPHONEVOIDAUTH
    void setISPHONEVOIDAUTH(java.lang.String) -> setISPHONEVOIDAUTH
    java.lang.String getISPHONEBALANCE() -> getISPHONEBALANCE
    void setISPHONEBALANCE(java.lang.String) -> setISPHONEBALANCE
    java.lang.String getISAPPOINT() -> getISAPPOINT
    void setISAPPOINT(java.lang.String) -> setISAPPOINT
    java.lang.String getISVOIDAPPOINT() -> getISVOIDAPPOINT
    void setISVOIDAPPOINT(java.lang.String) -> setISVOIDAPPOINT
    java.lang.String getISORDERSALE() -> getISORDERSALE
    void setISORDERSALE(java.lang.String) -> setISORDERSALE
    java.lang.String getISORDERVOIDSALE() -> getISORDERVOIDSALE
    void setISORDERVOIDSALE(java.lang.String) -> setISORDERVOIDSALE
    java.lang.String getISREFUNDORDER() -> getISREFUNDORDER
    void setISREFUNDORDER(java.lang.String) -> setISREFUNDORDER
    java.lang.String getISORDERPREAUTH() -> getISORDERPREAUTH
    void setISORDERPREAUTH(java.lang.String) -> setISORDERPREAUTH
    java.lang.String getISORDERVOIDPRE() -> getISORDERVOIDPRE
    void setISORDERVOIDPRE(java.lang.String) -> setISORDERVOIDPRE
    java.lang.String getISORDERAUTHSALE() -> getISORDERAUTHSALE
    void setISORDERAUTHSALE(java.lang.String) -> setISORDERAUTHSALE
    java.lang.String getISORDERAUTHOFF() -> getISORDERAUTHOFF
    void setISORDERAUTHOFF(java.lang.String) -> setISORDERAUTHOFF
    java.lang.String getISORDERVOIDAUTH() -> getISORDERVOIDAUTH
    void setISORDERVOIDAUTH(java.lang.String) -> setISORDERVOIDAUTH
    java.lang.String getISSTRIPECASHLOAD() -> getISSTRIPECASHLOAD
    void setISSTRIPECASHLOAD(java.lang.String) -> setISSTRIPECASHLOAD
    java.lang.String getAUTOLOGOUT() -> getAUTOLOGOUT
    void setAUTOLOGOUT(java.lang.String) -> setAUTOLOGOUT
    java.lang.String getPRNWATERREC() -> getPRNWATERREC
    void setPRNWATERREC(java.lang.String) -> setPRNWATERREC
    java.lang.String getOFFLINESENDTYPE() -> getOFFLINESENDTYPE
    void setOFFLINESENDTYPE(java.lang.String) -> setOFFLINESENDTYPE
    java.lang.String getOFFLINESENDCOUNT() -> getOFFLINESENDCOUNT
    void setOFFLINESENDCOUNT(java.lang.String) -> setOFFLINESENDCOUNT
    java.lang.String getADMINPWD() -> getADMINPWD
    void setADMINPWD(java.lang.String) -> setADMINPWD
    java.lang.String getCARDINPUT() -> getCARDINPUT
    void setCARDINPUT(java.lang.String) -> setCARDINPUT
    java.lang.String getDEFAULTTRANSTYPE() -> getDEFAULTTRANSTYPE
    void setDEFAULTTRANSTYPE(java.lang.String) -> setDEFAULTTRANSTYPE
    java.lang.String getMAXREFUNDAMT() -> getMAXREFUNDAMT
    void setMAXREFUNDAMT(java.lang.String) -> setMAXREFUNDAMT
    java.lang.String getISPRINTTRANS() -> getISPRINTTRANS
    void setISPRINTTRANS(java.lang.String) -> setISPRINTTRANS
    java.lang.String getISPRINTSYSPARAM() -> getISPRINTSYSPARAM
    void setISPRINTSYSPARAM(java.lang.String) -> setISPRINTSYSPARAM
    java.lang.String getTRACENO() -> getTRACENO
    void setTRACENO(java.lang.String) -> setTRACENO
    java.lang.String getBATCHNO() -> getBATCHNO
    void setBATCHNO(java.lang.String) -> setBATCHNO
    java.lang.String getPNTCHACQUIRER() -> getPNTCHACQUIRER
    void setPNTCHACQUIRER(java.lang.String) -> setPNTCHACQUIRER
    java.lang.String getPNTCHCARDSCHEME() -> getPNTCHCARDSCHEME
    void setPNTCHCARDSCHEME(java.lang.String) -> setPNTCHCARDSCHEME
    java.lang.String getPNTTYPE() -> getPNTTYPE
    void setPNTTYPE(java.lang.String) -> setPNTTYPE
    java.lang.String getPRINTPAGE() -> getPRINTPAGE
    void setPRINTPAGE(java.lang.String) -> setPRINTPAGE
    java.lang.String getTICKETWITHEN() -> getTICKETWITHEN
    void setTICKETWITHEN(java.lang.String) -> setTICKETWITHEN
    java.lang.String getREVERSALNUM() -> getREVERSALNUM
    void setREVERSALNUM(java.lang.String) -> setREVERSALNUM
    java.lang.String getMAXTRANSCOUNT() -> getMAXTRANSCOUNT
    void setMAXTRANSCOUNT(java.lang.String) -> setMAXTRANSCOUNT
    java.lang.String getTIPRATE() -> getTIPRATE
    void setTIPRATE(java.lang.String) -> setTIPRATE
    java.lang.String getPNTFONTSIZE() -> getPNTFONTSIZE
    void setPNTFONTSIZE(java.lang.String) -> setPNTFONTSIZE
    java.lang.String getPRINTMINUS() -> getPRINTMINUS
    void setPRINTMINUS(java.lang.String) -> setPRINTMINUS
    java.lang.String getPNTALLTRANS() -> getPNTALLTRANS
    void setPNTALLTRANS(java.lang.String) -> setPNTALLTRANS
    java.lang.String getUNKNOWBANK() -> getUNKNOWBANK
    void setUNKNOWBANK(java.lang.String) -> setUNKNOWBANK
    java.lang.String getISPRINTINPUTPIN() -> getISPRINTINPUTPIN
    void setISPRINTINPUTPIN(java.lang.String) -> setISPRINTINPUTPIN
    java.lang.String getSALEVOIDSTRIP() -> getSALEVOIDSTRIP
    void setSALEVOIDSTRIP(java.lang.String) -> setSALEVOIDSTRIP
    java.lang.String getAUTHSALEVOIDSTRIP() -> getAUTHSALEVOIDSTRIP
    void setAUTHSALEVOIDSTRIP(java.lang.String) -> setAUTHSALEVOIDSTRIP
    java.lang.String getVOIDPIN() -> getVOIDPIN
    void setVOIDPIN(java.lang.String) -> setVOIDPIN
    java.lang.String getPREAUTHVOIDPIN() -> getPREAUTHVOIDPIN
    void setPREAUTHVOIDPIN(java.lang.String) -> setPREAUTHVOIDPIN
    java.lang.String getAUTHSALEVOIDPIN() -> getAUTHSALEVOIDPIN
    void setAUTHSALEVOIDPIN(java.lang.String) -> setAUTHSALEVOIDPIN
    java.lang.String getAUTHSALEPIN() -> getAUTHSALEPIN
    void setAUTHSALEPIN(java.lang.String) -> setAUTHSALEPIN
    java.lang.String getISPRINTKEY() -> getISPRINTKEY
    void setISPRINTKEY(java.lang.String) -> setISPRINTKEY
    java.lang.String getMAINKEYNO() -> getMAINKEYNO
    void setMAINKEYNO(java.lang.String) -> setMAINKEYNO
    java.lang.String getENCYPTMODE() -> getENCYPTMODE
    void setENCYPTMODE(java.lang.String) -> setENCYPTMODE
    java.lang.String getISPRINTCOMM() -> getISPRINTCOMM
    void setISPRINTCOMM(java.lang.String) -> setISPRINTCOMM
    java.lang.String getCOMMTYPE() -> getCOMMTYPE
    void setCOMMTYPE(java.lang.String) -> setCOMMTYPE
    java.lang.String getTELNO1() -> getTELNO1
    void setTELNO1(java.lang.String) -> setTELNO1
    java.lang.String getTELNO2() -> getTELNO2
    void setTELNO2(java.lang.String) -> setTELNO2
    java.lang.String getTELNO3() -> getTELNO3
    void setTELNO3(java.lang.String) -> setTELNO3
    java.lang.String getMANAGETELNO() -> getMANAGETELNO
    void setMANAGETELNO(java.lang.String) -> setMANAGETELNO
    java.lang.String getAPN1() -> getAPN1
    void setAPN1(java.lang.String) -> setAPN1
    java.lang.String getAPN2() -> getAPN2
    void setAPN2(java.lang.String) -> setAPN2
    java.lang.String getCOMMMODE() -> getCOMMMODE
    void setCOMMMODE(java.lang.String) -> setCOMMMODE
    java.lang.String getIPADDR() -> getIPADDR
    void setIPADDR(java.lang.String) -> setIPADDR
    java.lang.String getMASK() -> getMASK
    void setMASK(java.lang.String) -> setMASK
    java.lang.String getGATE() -> getGATE
    void setGATE(java.lang.String) -> setGATE
    java.lang.String getWIFISSID() -> getWIFISSID
    void setWIFISSID(java.lang.String) -> setWIFISSID
    java.lang.String getWIFIMODE() -> getWIFIMODE
    void setWIFIMODE(java.lang.String) -> setWIFIMODE
    java.lang.String getDNSIP() -> getDNSIP
    void setDNSIP(java.lang.String) -> setDNSIP
    java.lang.String getDOMAIN1() -> getDOMAIN1
    void setDOMAIN1(java.lang.String) -> setDOMAIN1
    java.lang.String getDNSPORT1() -> getDNSPORT1
    void setDNSPORT1(java.lang.String) -> setDNSPORT1
    java.lang.String getDOMAIN2() -> getDOMAIN2
    void setDOMAIN2(java.lang.String) -> setDOMAIN2
    java.lang.String getDNSPORT2() -> getDNSPORT2
    void setDNSPORT2(java.lang.String) -> setDNSPORT2
    java.lang.String getIP1() -> getIP1
    void setIP1(java.lang.String) -> setIP1
    java.lang.String getPORT1() -> getPORT1
    void setPORT1(java.lang.String) -> setPORT1
    java.lang.String getIP2() -> getIP2
    void setIP2(java.lang.String) -> setIP2
    java.lang.String getPORT2() -> getPORT2
    void setPORT2(java.lang.String) -> setPORT2
    java.lang.String getUSERNAME() -> getUSERNAME
    void setUSERNAME(java.lang.String) -> setUSERNAME
    java.lang.String getUSERPWD() -> getUSERPWD
    void setUSERPWD(java.lang.String) -> setUSERPWD
    java.lang.String getWIRELESSDIALNUN() -> getWIRELESSDIALNUN
    void setWIRELESSDIALNUN(java.lang.String) -> setWIRELESSDIALNUN
    java.lang.String getTPDU() -> getTPDU
    void setTPDU(java.lang.String) -> setTPDU
    java.lang.String getREDIALNUM() -> getREDIALNUM
    void setREDIALNUM(java.lang.String) -> setREDIALNUM
    java.lang.String getTIMEOUT() -> getTIMEOUT
    void setTIMEOUT(java.lang.String) -> setTIMEOUT
    java.lang.String getISPREDIAL() -> getISPREDIAL
    void setISPREDIAL(java.lang.String) -> setISPREDIAL
    java.lang.String getISSTRIPELOAD() -> getISSTRIPELOAD
    void setISSTRIPELOAD(java.lang.String) -> setISSTRIPELOAD
    java.lang.String getOFFLINESENDTIME() -> getOFFLINESENDTIME
    void setOFFLINESENDTIME(java.lang.String) -> setOFFLINESENDTIME
com.newland.payment.printer.template.model.PrintTotalModel -> com.newland.payment.printer.template.model.PrintTotalModel:
    java.lang.String debitNum_nk -> debitNum_nk
    java.lang.String debitAmt_nk -> debitAmt_nk
    java.lang.String debitNum_wk -> debitNum_wk
    java.lang.String debitAmt_wk -> debitAmt_wk
    java.lang.String creditNum_nk -> creditNum_nk
    java.lang.String creditAmt_nk -> creditAmt_nk
    java.lang.String creditNum_wk -> creditNum_wk
    java.lang.String creditAmt_wk -> creditAmt_wk
    void <init>() -> <init>
    java.lang.String getDebitNum_nk() -> getDebitNum_nk
    void setDebitNum_nk(java.lang.String) -> setDebitNum_nk
    java.lang.String getDebitAmt_nk() -> getDebitAmt_nk
    void setDebitAmt_nk(java.lang.String) -> setDebitAmt_nk
    java.lang.String getDebitNum_wk() -> getDebitNum_wk
    void setDebitNum_wk(java.lang.String) -> setDebitNum_wk
    java.lang.String getDebitAmt_wk() -> getDebitAmt_wk
    void setDebitAmt_wk(java.lang.String) -> setDebitAmt_wk
    java.lang.String getCreditNum_nk() -> getCreditNum_nk
    void setCreditNum_nk(java.lang.String) -> setCreditNum_nk
    java.lang.String getCreditAmt_nk() -> getCreditAmt_nk
    void setCreditAmt_nk(java.lang.String) -> setCreditAmt_nk
    java.lang.String getCreditNum_wk() -> getCreditNum_wk
    void setCreditNum_wk(java.lang.String) -> setCreditNum_wk
    java.lang.String getCreditAmt_wk() -> getCreditAmt_wk
    void setCreditAmt_wk(java.lang.String) -> setCreditAmt_wk
com.newland.payment.printer.template.model.PrintVourcherModel -> com.newland.payment.printer.template.model.PrintVourcherModel:
    java.lang.String merchantFlag -> merchantFlag
    java.lang.String bankFlag -> bankFlag
    java.lang.String customerFlag -> customerFlag
    java.lang.String reprintFlag -> reprintFlag
    java.lang.String isCashCard -> isCashCard
    java.lang.String printTopName -> printTopName
    java.lang.String printTopImg -> printTopImg
    java.lang.String merchantName -> merchantName
    java.lang.String shopId -> shopId
    java.lang.String terminalId -> terminalId
    java.lang.String operId -> operId
    java.lang.String acqCode -> acqCode
    java.lang.String iisCode -> iisCode
    java.lang.String cardNo -> cardNo
    java.lang.String entryMode -> entryMode
    java.lang.String expDate -> expDate
    java.lang.String cardSerialNo -> cardSerialNo
    java.lang.String transType_cn -> transType_cn
    java.lang.String batchNo -> batchNo
    java.lang.String traceNo -> traceNo
    java.lang.String refNum -> refNum
    java.lang.String authCode -> authCode
    java.lang.String dateTime -> dateTime
    java.lang.String interOrg -> interOrg
    java.lang.String amount -> amount
    java.lang.String oldAmount -> oldAmount
    java.lang.String feeAmount -> feeAmount
    java.lang.String totalAmount -> totalAmount
    java.lang.String balance -> balance
    java.lang.String oldRefNum -> oldRefNum
    java.lang.String oldBatchNo -> oldBatchNo
    java.lang.String oldAuthCode -> oldAuthCode
    java.lang.String totalAuthAmount -> totalAuthAmount
    java.lang.String currency -> currency
    java.lang.String installNum -> installNum
    java.lang.String firstAmt -> firstAmt
    java.lang.String installFee -> installFee
    java.lang.String bonus -> bonus
    java.lang.String firstFee -> firstFee
    java.lang.String normalFee -> normalFee
    java.lang.String code -> code
    java.lang.String bonusBalance -> bonusBalance
    java.lang.String bonusSpoint -> bonusSpoint
    java.lang.String selfAmt -> selfAmt
    java.lang.String cardType -> cardType
    java.lang.String telNo -> telNo
    java.lang.String transIncardNo -> transIncardNo
    java.lang.String oldTraceNo -> oldTraceNo
    java.lang.String oldDate -> oldDate
    java.lang.String iisInfo -> iisInfo
    java.lang.String cupInfo -> cupInfo
    java.lang.String acqInfo -> acqInfo
    java.lang.String adsInfo -> adsInfo
    java.lang.String arqc -> arqc
    java.lang.String tc -> tc
    java.lang.String aid -> aid
    java.lang.String csn -> csn
    java.lang.String cvm -> cvm
    java.lang.String tsi -> tsi
    java.lang.String tvr -> tvr
    java.lang.String atc -> atc
    java.lang.String unpr -> unpr
    java.lang.String aip -> aip
    java.lang.String termCap -> termCap
    java.lang.String iad -> iad
    java.lang.String applab -> applab
    java.lang.String appName -> appName
    java.lang.String cardProductId -> cardProductId
    java.lang.String hotLine -> hotLine
    java.lang.String eleSignTureDate -> eleSignTureDate
    java.lang.String isSignature -> isSignature
    java.lang.String cardNoTransIn -> cardNoTransIn
    java.lang.String isEleSign -> isEleSign
    java.lang.String amountLimit -> amountLimit
    java.lang.String isNoSign -> isNoSign
    java.lang.String isNoPsw -> isNoPsw
    java.lang.String isNoSignAndPsw -> isNoSignAndPsw
    java.lang.String discountAmount -> discountAmount
    java.lang.String orderAmount -> orderAmount
    void <init>() -> <init>
    java.lang.String getDiscountAmount() -> getDiscountAmount
    void setDiscountAmount(java.lang.String) -> setDiscountAmount
    java.lang.String getOrderAmount() -> getOrderAmount
    void setOrderAmount(java.lang.String) -> setOrderAmount
    java.lang.String getMerchantFlag() -> getMerchantFlag
    void setMerchantFlag(java.lang.String) -> setMerchantFlag
    java.lang.String getBankFlag() -> getBankFlag
    void setBankFlag(java.lang.String) -> setBankFlag
    java.lang.String getCustomerFlag() -> getCustomerFlag
    void setCustomerFlag(java.lang.String) -> setCustomerFlag
    java.lang.String getReprintFlag() -> getReprintFlag
    void setReprintFlag(java.lang.String) -> setReprintFlag
    java.lang.String getPrintTopName() -> getPrintTopName
    void setPrintTopName(java.lang.String) -> setPrintTopName
    java.lang.String getMerchantName() -> getMerchantName
    void setMerchantName(java.lang.String) -> setMerchantName
    java.lang.String getShopId() -> getShopId
    void setShopId(java.lang.String) -> setShopId
    java.lang.String getTerminalId() -> getTerminalId
    void setTerminalId(java.lang.String) -> setTerminalId
    java.lang.String getOperId() -> getOperId
    void setOperId(java.lang.String) -> setOperId
    java.lang.String getAcqCode() -> getAcqCode
    void setAcqCode(java.lang.String) -> setAcqCode
    java.lang.String getIisCode() -> getIisCode
    void setIisCode(java.lang.String) -> setIisCode
    java.lang.String getCardNo() -> getCardNo
    void setCardNo(java.lang.String) -> setCardNo
    java.lang.String getEntryMode() -> getEntryMode
    void setEntryMode(java.lang.String) -> setEntryMode
    java.lang.String getExpDate() -> getExpDate
    void setExpDate(java.lang.String) -> setExpDate
    java.lang.String getCardSerialNo() -> getCardSerialNo
    java.lang.String getIsEleSign() -> getIsEleSign
    void setIsEleSign(java.lang.String) -> setIsEleSign
    void setCardSerialNo(java.lang.String) -> setCardSerialNo
    java.lang.String getTransType_cn() -> getTransType_cn
    void setTransType_cn(java.lang.String) -> setTransType_cn
    java.lang.String getBatchNo() -> getBatchNo
    void setBatchNo(java.lang.String) -> setBatchNo
    java.lang.String getTraceNo() -> getTraceNo
    void setTraceNo(java.lang.String) -> setTraceNo
    java.lang.String getRefNum() -> getRefNum
    void setRefNum(java.lang.String) -> setRefNum
    java.lang.String getAuthCode() -> getAuthCode
    void setAuthCode(java.lang.String) -> setAuthCode
    java.lang.String getDateTime() -> getDateTime
    void setDateTime(java.lang.String) -> setDateTime
    java.lang.String getInterOrg() -> getInterOrg
    void setInterOrg(java.lang.String) -> setInterOrg
    java.lang.String getAmount() -> getAmount
    void setAmount(java.lang.String) -> setAmount
    java.lang.String getOldAmount() -> getOldAmount
    void setOldAmount(java.lang.String) -> setOldAmount
    java.lang.String getFeeAmount() -> getFeeAmount
    void setFeeAmount(java.lang.String) -> setFeeAmount
    java.lang.String getTotalAmount() -> getTotalAmount
    void setTotalAmount(java.lang.String) -> setTotalAmount
    java.lang.String getBalance() -> getBalance
    void setBalance(java.lang.String) -> setBalance
    java.lang.String getOldRefNum() -> getOldRefNum
    void setOldRefNum(java.lang.String) -> setOldRefNum
    java.lang.String getOldBatchNo() -> getOldBatchNo
    void setOldBatchNo(java.lang.String) -> setOldBatchNo
    java.lang.String getOldAuthCode() -> getOldAuthCode
    void setOldAuthCode(java.lang.String) -> setOldAuthCode
    java.lang.String getTotalAuthAmount() -> getTotalAuthAmount
    void setTotalAuthAmount(java.lang.String) -> setTotalAuthAmount
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
    java.lang.String getInstallNum() -> getInstallNum
    void setInstallNum(java.lang.String) -> setInstallNum
    java.lang.String getFirstAmt() -> getFirstAmt
    void setFirstAmt(java.lang.String) -> setFirstAmt
    java.lang.String getInstallFee() -> getInstallFee
    void setInstallFee(java.lang.String) -> setInstallFee
    java.lang.String getBonus() -> getBonus
    void setBonus(java.lang.String) -> setBonus
    java.lang.String getFirstFee() -> getFirstFee
    void setFirstFee(java.lang.String) -> setFirstFee
    java.lang.String getNormalFee() -> getNormalFee
    void setNormalFee(java.lang.String) -> setNormalFee
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getBonusBalance() -> getBonusBalance
    void setBonusBalance(java.lang.String) -> setBonusBalance
    java.lang.String getBonusSpoint() -> getBonusSpoint
    void setBonusSpoint(java.lang.String) -> setBonusSpoint
    java.lang.String getSelfAmt() -> getSelfAmt
    void setSelfAmt(java.lang.String) -> setSelfAmt
    java.lang.String getTelNo() -> getTelNo
    void setTelNo(java.lang.String) -> setTelNo
    java.lang.String getTransIncardNo() -> getTransIncardNo
    void setTransIncardNo(java.lang.String) -> setTransIncardNo
    java.lang.String getOldTraceNo() -> getOldTraceNo
    void setOldTraceNo(java.lang.String) -> setOldTraceNo
    java.lang.String getOldDate() -> getOldDate
    void setOldDate(java.lang.String) -> setOldDate
    java.lang.String getIisInfo() -> getIisInfo
    void setIisInfo(java.lang.String) -> setIisInfo
    java.lang.String getCupInfo() -> getCupInfo
    void setCupInfo(java.lang.String) -> setCupInfo
    java.lang.String getAcqInfo() -> getAcqInfo
    void setAcqInfo(java.lang.String) -> setAcqInfo
    java.lang.String getAdsInfo() -> getAdsInfo
    void setAdsInfo(java.lang.String) -> setAdsInfo
    java.lang.String getArqc() -> getArqc
    void setArqc(java.lang.String) -> setArqc
    java.lang.String getTc() -> getTc
    void setTc(java.lang.String) -> setTc
    java.lang.String getAid() -> getAid
    void setAid(java.lang.String) -> setAid
    java.lang.String getCsn() -> getCsn
    void setCsn(java.lang.String) -> setCsn
    java.lang.String getCvm() -> getCvm
    void setCvm(java.lang.String) -> setCvm
    java.lang.String getTsi() -> getTsi
    void setTsi(java.lang.String) -> setTsi
    java.lang.String getTvr() -> getTvr
    void setTvr(java.lang.String) -> setTvr
    java.lang.String getAip() -> getAip
    void setAip(java.lang.String) -> setAip
    java.lang.String getTermCap() -> getTermCap
    void setTermCap(java.lang.String) -> setTermCap
    java.lang.String getIad() -> getIad
    void setIad(java.lang.String) -> setIad
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
    java.lang.String getHotLine() -> getHotLine
    void setHotLine(java.lang.String) -> setHotLine
    java.lang.String getEleSignTureDate() -> getEleSignTureDate
    void setEleSignTureDate(java.lang.String) -> setEleSignTureDate
    java.lang.String getIsCashCard() -> getIsCashCard
    void setIsCashCard(java.lang.String) -> setIsCashCard
    java.lang.String getAtc() -> getAtc
    void setAtc(java.lang.String) -> setAtc
    java.lang.String getUnpr() -> getUnpr
    void setUnpr(java.lang.String) -> setUnpr
    java.lang.String getApplab() -> getApplab
    void setApplab(java.lang.String) -> setApplab
    java.lang.String getIsSignature() -> getIsSignature
    void setIsSignature(java.lang.String) -> setIsSignature
    java.lang.String getCardNoTransIn() -> getCardNoTransIn
    void setCardNoTransIn(java.lang.String) -> setCardNoTransIn
    java.lang.String getPrintTopImg() -> getPrintTopImg
    void setPrintTopImg(java.lang.String) -> setPrintTopImg
    java.lang.String getCardProductId() -> getCardProductId
    void setCardProductId(java.lang.String) -> setCardProductId
    java.lang.String getIsNoSign() -> getIsNoSign
    void setIsNoSign(java.lang.String) -> setIsNoSign
    java.lang.String getIsNoPsw() -> getIsNoPsw
    void setIsNoPsw(java.lang.String) -> setIsNoPsw
    java.lang.String getIsNoSignAndPsw() -> getIsNoSignAndPsw
    void setIsNoSignAndPsw(java.lang.String) -> setIsNoSignAndPsw
    java.lang.String getAmountLimit() -> getAmountLimit
    void setAmountLimit(java.lang.String) -> setAmountLimit
    java.lang.String getCardType() -> getCardType
    void setCardType(java.lang.String) -> setCardType
com.newland.payment.service.ManagerService -> com.newland.payment.service.ManagerService:
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.newland.payment.service.ManagerService$1 -> com.newland.payment.service.ManagerService$1:
com.newland.payment.service.ManagerService$ManagerServiceStub -> com.newland.payment.service.ManagerService$a:
    com.newland.payment.service.ManagerService this$0 -> a
    void <init>(com.newland.payment.service.ManagerService) -> <init>
    boolean reset() -> reset
    boolean activate() -> activate
    void <init>(com.newland.payment.service.ManagerService,com.newland.payment.service.ManagerService$1) -> <init>
com.newland.payment.service.PaymentService -> com.newland.payment.service.PaymentService:
    android.content.Context context -> context
    int result -> result
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
    android.content.Context access$100(com.newland.payment.service.PaymentService) -> access$100
com.newland.payment.service.PaymentService$1 -> com.newland.payment.service.PaymentService$1:
com.newland.payment.service.PaymentService$PaymentInfServiceStub -> com.newland.payment.service.PaymentService$PaymentInfServiceStub:
    com.newland.payment.service.PaymentService this$0 -> a
    void <init>(com.newland.payment.service.PaymentService) -> <init>
    boolean setParam(java.lang.String,java.lang.String) -> setParam
    java.lang.String getParam(java.lang.String) -> getParam
    int rePrint(java.lang.String,java.lang.String) -> rePrint
    boolean isRightfulCalling() -> a
    boolean isRightfulCalling(java.lang.String,java.lang.String) -> a
    int printVouchers(java.lang.String,java.lang.String) -> b
    int printVoucher(java.lang.String) -> a
    int printSingleVoucher(android.content.Context,com.newland.payment.mvc.model.Water,com.newland.payment.common.PrintType$PrintWaterType) -> a
    java.lang.String getPrintWaterData(com.newland.payment.mvc.model.Water,com.newland.payment.common.PrintType$PrintWaterType,boolean) -> getPrintWaterData
    void lockData(java.lang.String) -> b
    void unLockData(java.lang.String,boolean) -> a
    int findWater(com.newland.payment.aidl.SimpleWater,java.lang.String,java.lang.String) -> findWater
    int findWaterByOutOrderNo(com.newland.payment.aidl.SimpleWater,java.lang.String) -> findWaterByOutOrderNo
    int rePrintSettle() -> rePrintSettle
    void <init>(com.newland.payment.service.PaymentService,com.newland.payment.service.PaymentService$1) -> <init>
    int access$200(com.newland.payment.service.PaymentService$PaymentInfServiceStub,java.lang.String) -> a
com.newland.payment.service.PaymentService$PaymentInfServiceStub$1 -> com.newland.payment.service.PaymentService$PaymentInfServiceStub$1:
    java.lang.String val$printCmdData -> a
    com.newland.payment.service.PaymentService$PaymentInfServiceStub this$1 -> b
    void <init>(com.newland.payment.service.PaymentService$PaymentInfServiceStub,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans -> com.newland.payment.trans.AbstractBaseTrans:
    int FINISH -> FINISH
    int SUCC -> SUCC
    int STEP_CONTINUE -> STEP_CONTINUE
    int STEP_FINISH -> STEP_FINISH
    int STEP_CANCEL -> STEP_CANCEL
    boolean checkSingIn -> checkSingIn
    boolean checkWaterCount -> checkWaterCount
    boolean checkSettlementStatus -> checkSettlementStatus
    boolean checkIsExistWater -> checkIsExistWater
    boolean checkManagerPassword -> checkManagerPassword
    boolean checkCardExsit -> checkCardExsit
    boolean transcationManagerFlag -> transcationManagerFlag
    int transcationTimeOut -> transcationTimeOut
    com.newland.payment.ui.fragment.InputMoneyFragment inputMoneyFragment -> inputMoneyFragment
    com.newland.payment.ui.fragment.InputPinFragment passwordFragment -> passwordFragment
    com.newland.payment.ui.fragment.InputPinOfflineFragment passwordOfflineFragment -> passwordOfflineFragment
    com.newland.payment.ui.fragment.CardFragment cardFragment -> cardFragment
    com.newland.payment.ui.fragment.BillFragment billFragment -> billFragment
    com.newland.payment.ui.fragment.CommunicationFragment communicationFragment -> communicationFragment
    com.newland.payment.ui.fragment.CommunicationFragment2 communicationFragment2 -> communicationFragment2
    com.newland.payment.ui.fragment.InputInfoFragment inputInfoFragment -> inputInfoFragment
    com.newland.payment.ui.fragment.MessageTipFragment messageTipFragment -> messageTipFragment
    com.newland.payment.ui.fragment.MenuSelectFragment menuSelectFragment -> menuSelectFragment
    com.newland.payment.ui.fragment.SignatureFragment signatureFragment -> signatureFragment
    com.newland.payment.ui.fragment.ConfirmInfoFragment confirmInfoFragment -> confirmInfoFragment
    com.newland.payment.ui.fragment.NewConsumeInfoFragment consumeInfoFragment -> consumeInfoFragment
    com.newland.payment.trans.bean.TransResultBean transResultBean -> transResultBean
    com.newland.payment.mvc.service.ReverseWaterService reverseWaterService -> reverseWaterService
    com.newland.payment.mvc.service.ScriptResultService scriptResultService -> scriptResultService
    com.newland.payment.trans.bean.CommunicationBean communicationBean -> communicationBean
    com.newland.payment.ui.activity.MainActivity activity -> activity
    int TRANS_FRAGMENT_COUNT -> TRANS_FRAGMENT_COUNT
    com.newland.pos.sdk.util.ISO8583 iso8583 -> iso8583
    com.newland.pos.sdk.util.ISO8583 mposIso8583 -> mposIso8583
    com.newland.payment.trans.bean.PubBean pubBean -> pubBean
    com.newland.payment.trans.TransStepProvider stepProvider -> stepProvider
    int MUST_CHECK_MAC -> MUST_CHECK_MAC
    int MSG_ID_ERR -> MSG_ID_ERR
    int PROC_CODE_ERR -> PROC_CODE_ERR
    int AMOUNT_ERR -> AMOUNT_ERR
    int TRACE_NO_ERR -> TRACE_NO_ERR
    int SERVER_CODE_ERR -> SERVER_CODE_ERR
    int ACQ_CENTER_CODE_ERR -> ACQ_CENTER_CODE_ERR
    int REFNUM_ERR -> REFNUM_ERR
    int POS_ID_ERR -> POS_ID_ERR
    int SHOP_ID_ERR -> SHOP_ID_ERR
    int CURRENCY_CODE_ERR -> CURRENCY_CODE_ERR
    void <init>() -> <init>
    void stopStep(com.newland.pos.sdk.bean.BaseBean) -> stopStep
    void goOnStep(com.newland.pos.sdk.bean.BaseBean) -> goOnStep
    void initPubBean() -> initPubBean
    void initManagePubBean() -> initManagePubBean
    com.newland.payment.trans.bean.CommunicationBean initCommunicationBean() -> initCommunicationBean
    int init() -> init
    void release() -> release
    void checkPower() -> checkPower
    void backToTransMenu() -> backToTransMenu
    void transSwitchContent(android.support.v4.app.Fragment) -> transSwitchContent
    com.newland.pos.sdk.bean.AmountBean showUIInputAmount(com.newland.pos.sdk.bean.AmountBean) -> showUIInputAmount
    com.newland.payment.trans.bean.CommonBean showConsumeInfo(com.newland.payment.trans.bean.CommonBean) -> showConsumeInfo
    com.newland.pos.sdk.bean.CardBean showReadCard(com.newland.pos.sdk.bean.CardBean) -> showReadCard
    com.newland.pos.sdk.bean.CardBean showReadCard(com.newland.pos.sdk.bean.CardBean,com.newland.payment.trans.bean.PubBean) -> showReadCard
    void showReadForRefund(com.newland.payment.trans.bean.NewRefundBean) -> showReadForRefund
    com.newland.payment.trans.bean.InputInfoBean showUIInputInfo(com.newland.payment.trans.bean.InputInfoBean) -> showUIInputInfo
    com.newland.pos.sdk.bean.MenuSelectBean showUIMenuSelect(com.newland.pos.sdk.bean.MenuSelectBean) -> showUIMenuSelect
    com.newland.pos.sdk.bean.MessageTipBean showUIMessageTip(com.newland.pos.sdk.bean.MessageTipBean) -> showUIMessageTip
    com.newland.pos.sdk.bean.MessageTipBean showUIMessageTip(com.newland.pos.sdk.bean.MessageTipBean,boolean) -> showUIMessageTip
    com.newland.payment.trans.bean.CommunicationBean showUICommunication(com.newland.payment.trans.bean.CommunicationBean) -> showUICommunication
    com.newland.payment.trans.bean.CommunicationBean showUICommunication2(com.newland.payment.trans.bean.CommunicationBean) -> showUICommunication2
    com.newland.pos.sdk.bean.PasswordBean showUIPinOfflineInput(com.newland.pos.sdk.bean.PasswordBean) -> showUIPinOfflineInput
    com.newland.pos.sdk.bean.PasswordBean showUIPinInput(com.newland.pos.sdk.bean.PasswordBean) -> showUIPinInput
    com.newland.payment.trans.bean.CommonBean showUIPbocLog(com.newland.payment.trans.bean.CommonBean) -> showUIPbocLog
    com.newland.payment.trans.bean.CommonBean showUIEcLoadLog(com.newland.payment.trans.bean.CommonBean) -> showUIEcLoadLog
    com.newland.payment.trans.bean.TransResultBean showUITransResult(com.newland.payment.trans.bean.TransResultBean) -> showUITransResult
    com.newland.payment.trans.bean.CommonBean showUIConfirmInfo(com.newland.payment.trans.bean.CommonBean) -> showUIConfirmInfo
    com.newland.payment.trans.bean.SignatureBean showUISignatureView(com.newland.payment.trans.bean.SignatureBean) -> showUISignatureView
    boolean doQpboc(com.newland.payment.trans.bean.PubBean) -> doQpboc
    boolean doScriptAdvise() -> doScriptAdvise
    boolean doReverseWater() -> doReverseWater
    boolean doElecSignSend(java.lang.Integer) -> doElecSignSend
    boolean doElecSign(com.newland.payment.mvc.model.Water) -> doElecSign
    java.lang.String getFeatureCode(java.lang.String,java.lang.String) -> getFeatureCode
    boolean doOfflineSend() -> doOfflineSend
    boolean doVoidPartialSale(com.newland.payment.trans.bean.PubBean) -> doVoidPartialSale
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int dealPackAndComm(boolean,boolean,boolean) -> dealPackAndComm
    int dealPackAndComm2(boolean,java.lang.String,boolean) -> dealPackAndComm2
    int dealPackAndComm3(boolean,boolean,boolean) -> dealPackAndComm3
    void addTraceNo() -> addTraceNo
    java.lang.String encryptTrackData(java.lang.String) -> encryptTrackData
    java.lang.String getSecctrlInfo(com.newland.payment.trans.bean.PubBean) -> getSecctrlInfo
    void addReverseWater(com.newland.payment.mvc.model.ReverseWater) -> addReverseWater
    void changeReverseField55(java.lang.String) -> changeReverseField55
    com.newland.payment.mvc.model.ReverseWater getReverseWater(com.newland.payment.trans.bean.PubBean) -> getReverseWater
    boolean reverseToPubBean(com.newland.payment.mvc.model.ReverseWater,com.newland.payment.trans.bean.PubBean) -> reverseToPubBean
    boolean scriptToPubBean(com.newland.payment.mvc.model.ScriptResult,com.newland.payment.trans.bean.PubBean) -> scriptToPubBean
    void addWater(com.newland.payment.mvc.model.Water) -> addWater
    void updateWater(com.newland.payment.mvc.model.Water) -> updateWater
    com.newland.payment.mvc.model.Water getWater(com.newland.payment.trans.bean.PubBean) -> getWater
    boolean waterToPubBean(com.newland.payment.mvc.model.Water,com.newland.payment.trans.bean.PubBean) -> waterToPubBean
    boolean failWaterToPubBean(com.newland.payment.mvc.model.EmvFailWater,com.newland.payment.trans.bean.PubBean) -> failWaterToPubBean
    void addScriptResult(com.newland.payment.mvc.model.ScriptResult) -> addScriptResult
    void updateScriptResult(com.newland.payment.mvc.model.ScriptResult) -> updateScriptResult
    com.newland.payment.mvc.model.ScriptResult getScriptResult(com.newland.payment.trans.bean.PubBean) -> getScriptResult
    java.lang.String getText(int) -> getText
    java.lang.String[] getStringArray(int) -> getStringArray
    int[] getIntArray(int) -> getIntArray
    java.lang.String replaceMac(java.lang.String) -> replaceMac
    java.lang.String replaceMac2(java.lang.String) -> replaceMac2
    java.lang.String getMac(java.lang.String) -> getMac
    java.lang.String getMac2(java.lang.String) -> getMac2
    int checkRespons(com.newland.pos.sdk.util.ISO8583,com.newland.payment.trans.bean.PubBean) -> checkRespons
    java.lang.String getErrorInfo(int) -> getErrorInfo
    void showUIProgressFragment(java.lang.String) -> showUIProgressFragment
    com.newland.payment.trans.bean.PrintBean showUIPrintFragment(com.newland.payment.trans.bean.PrintBean) -> showUIPrintFragment
    void showToast(java.lang.String) -> showToast
    com.newland.payment.trans.bean.CommonBean showUIOperatorPasswordInput(com.newland.payment.trans.bean.CommonBean) -> showUIOperatorPasswordInput
    com.newland.payment.trans.bean.CommonBean showUIDateChoose(com.newland.payment.trans.bean.CommonBean) -> showUIDateChoose
    com.newland.payment.trans.bean.CommonBean showUIYearDateChoose(com.newland.payment.trans.bean.CommonBean) -> showUIYearDateChoose
    java.lang.String dealTrack(int,java.lang.String) -> dealTrack
    java.lang.Integer dealCardInputMode(java.lang.Integer) -> dealCardInputMode
    void transEndCheckCardExist() -> transEndCheckCardExist
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getMessageID(int) -> getMessageID
    java.lang.String getProcessCode(int) -> getProcessCode
    java.lang.String getF25ServerCode(int) -> getF25ServerCode
    java.lang.String getF601FuncCode(int) -> getF601FuncCode
    boolean confirmAmount(java.lang.String,long) -> confirmAmount
    boolean checkRefundAmtLimit(java.lang.String,long) -> checkRefundAmtLimit
    com.newland.payment.trans.bean.PubBean getPubBean() -> getPubBean
    boolean packSaleOffline(com.newland.payment.mvc.model.Water,int) -> packSaleOffline
    boolean packRefund(com.newland.payment.trans.bean.PubBean,int) -> packRefund
    boolean packAuthSaleOff(com.newland.payment.trans.bean.PubBean,int) -> packAuthSaleOff
    void deleteReverse() -> deleteReverse
    void changeSettle(com.newland.payment.trans.bean.PubBean) -> changeSettle
    void displayResponse(boolean,java.lang.String) -> displayResponse
    void displayResponse(boolean,com.newland.payment.trans.bean.PubBean) -> displayResponse
    void setResultContent(java.lang.String) -> setResultContent
    void incOfflineUnSendNum() -> incOfflineUnSendNum
    void delOfflineUnSendNum() -> delOfflineUnSendNum
    void incElecSignUnSendNum() -> incElecSignUnSendNum
    void delElecSignUnSendNum() -> delElecSignUnSendNum
    boolean CheckIsNotInBlk(java.lang.String) -> CheckIsNotInBlk
    boolean dealSendAfterTrade() -> dealSendAfterTrade
    boolean doLogOut() -> doLogOut
    boolean doQuery(com.newland.payment.trans.bean.CommonBean) -> doQuery
    boolean quickPayNoPsw(com.newland.payment.trans.bean.PubBean,com.newland.emv.EmvAppModule) -> quickPayNoPsw
    boolean CheckCardInCardBinA(java.lang.String) -> CheckCardInCardBinA
    boolean CheckCardInCardBinB(java.lang.String) -> CheckCardInCardBinB
    boolean CheckCardInCardBinC(java.lang.String) -> CheckCardInCardBinC
    boolean CheckIsNoSign(com.newland.payment.trans.bean.PubBean) -> CheckIsNoSign
    java.util.HashMap getTlvMap(java.lang.String) -> getTlvMap
    com.newland.payment.ui.fragment.MessageTipFragment access$000(com.newland.payment.trans.AbstractBaseTrans) -> access$000
    void <clinit>() -> <clinit>
com.newland.payment.trans.AbstractBaseTrans$1 -> com.newland.payment.trans.AbstractBaseTrans$1:
    com.newland.payment.trans.AbstractBaseTrans$LockObj val$lockObj -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.AbstractBaseTrans$LockObj) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$10 -> com.newland.payment.trans.AbstractBaseTrans$2:
    com.newland.payment.ui.fragment.PrintFragment val$fragment -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$11 -> com.newland.payment.trans.AbstractBaseTrans$3:
    java.lang.String val$message -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$12 -> com.newland.payment.trans.AbstractBaseTrans$4:
    com.newland.payment.trans.bean.CommonBean val$dateBean -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.bean.CommonBean) -> <init>
    void onEnter(java.lang.Long) -> a
com.newland.payment.trans.AbstractBaseTrans$13 -> com.newland.payment.trans.AbstractBaseTrans$5:
    com.newland.payment.trans.bean.CommonBean val$dateBean -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.bean.CommonBean) -> <init>
    void onEnter(java.lang.Long) -> a
com.newland.payment.trans.AbstractBaseTrans$14 -> com.newland.payment.trans.AbstractBaseTrans$6:
    com.newland.payment.trans.bean.CommonBean val$commonBean -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.bean.CommonBean) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$14$1 -> com.newland.payment.trans.AbstractBaseTrans$6$1:
    com.newland.payment.trans.AbstractBaseTrans$14 this$1 -> a
    void <init>(com.newland.payment.trans.AbstractBaseTrans$14) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.AbstractBaseTrans$15 -> com.newland.payment.trans.AbstractBaseTrans$7:
    com.newland.payment.trans.bean.CommonBean val$commonBean -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.bean.CommonBean) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$16 -> com.newland.payment.trans.AbstractBaseTrans$8:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.AbstractBaseTrans$2 -> com.newland.payment.trans.AbstractBaseTrans$9:
    android.support.v4.app.Fragment val$fragment -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,android.support.v4.app.Fragment) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$3 -> com.newland.payment.trans.AbstractBaseTrans$10:
    com.newland.payment.trans.AbstractBaseTrans this$0 -> a
    void <init>(com.newland.payment.trans.AbstractBaseTrans) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$4 -> com.newland.payment.trans.AbstractBaseTrans$11:
    com.newland.payment.trans.bean.CommonBean val$commonBean -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.bean.CommonBean) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$4$1 -> com.newland.payment.trans.AbstractBaseTrans$11$1:
    com.newland.payment.trans.AbstractBaseTrans$4 this$1 -> a
    void <init>(com.newland.payment.trans.AbstractBaseTrans$4) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.AbstractBaseTrans$5 -> com.newland.payment.trans.AbstractBaseTrans$12:
    com.newland.payment.trans.bean.CommonBean val$commonBean -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.bean.CommonBean) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$6 -> com.newland.payment.trans.AbstractBaseTrans$13:
    com.newland.payment.trans.bean.CommonBean val$commonBean -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.bean.CommonBean) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$7 -> com.newland.payment.trans.AbstractBaseTrans$14:
    com.newland.payment.trans.bean.CommonBean val$commonBean -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.bean.CommonBean) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$8 -> com.newland.payment.trans.AbstractBaseTrans$15:
    com.newland.payment.trans.bean.CommonBean val$commonBean -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.bean.CommonBean) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$9 -> com.newland.payment.trans.AbstractBaseTrans$16:
    com.newland.payment.trans.bean.CommonBean val$commonBean -> a
    com.newland.payment.trans.AbstractBaseTrans this$0 -> b
    void <init>(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.bean.CommonBean) -> <init>
    void run() -> run
com.newland.payment.trans.AbstractBaseTrans$LockObj -> com.newland.payment.trans.AbstractBaseTrans$a:
    int value -> a
    java.lang.Object object -> b
    com.newland.payment.trans.AbstractBaseTrans this$0 -> c
    void <init>(com.newland.payment.trans.AbstractBaseTrans) -> <init>
com.newland.payment.trans.NoStepMethodException -> com.newland.payment.trans.NoStepMethodException:
    long serialVersionUID -> serialVersionUID
    java.lang.String code -> code
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
com.newland.payment.trans.RequireHandler -> com.newland.payment.trans.RequireHandler:
    com.newland.payment.trans.TransController transController -> transController
    java.util.List transList -> transList
    boolean isHandling -> isHandling
    int reSignCount -> reSignCount
    int skipCount -> skipCount
    java.lang.Object syncObject -> syncObject
    com.newland.payment.trans.TransResultListener listener -> listener
    void <init>() -> <init>
    com.newland.payment.trans.RequireHandler getInstance() -> getInstance
    void request() -> request
    void doHandle() -> doHandle
    void preHandle() -> preHandle
    void handle() -> handle
    void done() -> done
    java.util.List getTransList() -> getTransList
    boolean isHandling() -> isHandling
    void setHandling(boolean) -> setHandling
    void <init>(com.newland.payment.trans.RequireHandler$1) -> <init>
    java.util.List access$200(com.newland.payment.trans.RequireHandler) -> access$200
    void access$300(com.newland.payment.trans.RequireHandler) -> access$300
    com.newland.payment.trans.TransResultListener access$400(com.newland.payment.trans.RequireHandler) -> access$400
    com.newland.payment.trans.TransController access$500(com.newland.payment.trans.RequireHandler) -> access$500
    void access$600(com.newland.payment.trans.RequireHandler) -> access$600
    int access$700(com.newland.payment.trans.RequireHandler) -> access$700
    int access$710(com.newland.payment.trans.RequireHandler) -> access$710
    int access$808(com.newland.payment.trans.RequireHandler) -> access$808
com.newland.payment.trans.RequireHandler$1 -> com.newland.payment.trans.RequireHandler$1:
    com.newland.payment.trans.RequireHandler this$0 -> a
    void <init>(com.newland.payment.trans.RequireHandler) -> <init>
    void run() -> run
com.newland.payment.trans.RequireHandler$1$1 -> com.newland.payment.trans.RequireHandler$1$1:
    com.newland.payment.trans.RequireHandler$1 this$1 -> a
    void <init>(com.newland.payment.trans.RequireHandler$1) -> <init>
    void run() -> run
com.newland.payment.trans.RequireHandler$2 -> com.newland.payment.trans.RequireHandler$2:
    com.newland.payment.trans.RequireHandler this$0 -> a
    void <init>(com.newland.payment.trans.RequireHandler) -> <init>
    void run() -> run
com.newland.payment.trans.RequireHandler$3 -> com.newland.payment.trans.RequireHandler$3:
    com.newland.payment.trans.RequireHandler this$0 -> a
    void <init>(com.newland.payment.trans.RequireHandler) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.RequireHandler$4 -> com.newland.payment.trans.RequireHandler$4:
    com.newland.payment.trans.RequireHandler this$0 -> a
    void <init>(com.newland.payment.trans.RequireHandler) -> <init>
    void run() -> run
com.newland.payment.trans.RequireHandler$InnerClass -> com.newland.payment.trans.RequireHandler$a:
    com.newland.payment.trans.RequireHandler INSTANCE -> a
    com.newland.payment.trans.RequireHandler access$100() -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.TransController -> com.newland.payment.trans.TransController:
    java.util.List methodTask -> methodTask
    java.util.List methodList -> methodList
    com.newland.payment.mvc.service.WaterService waterService -> waterService
    com.newland.payment.trans.TransResultListener listener -> listener
    boolean isRequest -> isRequest
    boolean isCheckRequest -> isCheckRequest
    void <init>(android.content.Context) -> <init>
    java.lang.reflect.Method getNextMethod(int) -> getNextMethod
    void start(com.newland.payment.trans.AbstractBaseTrans,int) -> start
    void endThirdInvoke(int) -> endThirdInvoke
    int doStep(int,com.newland.payment.trans.AbstractBaseTrans) -> doStep
    void start(com.newland.payment.trans.AbstractBaseTrans) -> start
    void start(com.newland.payment.trans.AbstractBaseTrans,com.newland.payment.trans.TransResultListener) -> start
    boolean access$002(boolean) -> access$002
    boolean access$000() -> access$000
    boolean access$102(boolean) -> access$102
    com.newland.payment.mvc.service.WaterService access$200(com.newland.payment.trans.TransController) -> access$200
    void access$300(com.newland.payment.trans.TransController,int) -> access$300
    boolean access$100() -> access$100
    int access$400(com.newland.payment.trans.TransController,int,com.newland.payment.trans.AbstractBaseTrans) -> access$400
    void <clinit>() -> <clinit>
com.newland.payment.trans.TransController$1 -> com.newland.payment.trans.TransController$1:
    com.newland.payment.trans.AbstractBaseTrans val$trans -> a
    int val$stepIndex -> b
    com.newland.payment.trans.TransController this$0 -> c
    void <init>(com.newland.payment.trans.TransController,com.newland.payment.trans.AbstractBaseTrans,int) -> <init>
    void run() -> run
com.newland.payment.trans.TransResultListener -> com.newland.payment.trans.TransResultListener:
    void fail(java.lang.String) -> fail
    void succ() -> succ
com.newland.payment.trans.TransStepProvider -> com.newland.payment.trans.TransStepProvider:
    com.newland.payment.trans.AbstractBaseTrans trans -> trans
    void <init>(com.newland.payment.trans.AbstractBaseTrans) -> <init>
    void syncCardBean(com.newland.payment.trans.bean.PubBean,com.newland.pos.sdk.bean.CardBean) -> syncCardBean
    boolean swipCard(com.newland.payment.trans.bean.PubBean,int) -> swipCard
    boolean inputAmount(com.newland.payment.trans.bean.PubBean) -> inputAmount
    boolean inputAmount(com.newland.payment.trans.bean.PubBean,boolean,boolean) -> inputAmount
    boolean emvInit(com.newland.payment.trans.bean.PubBean,com.newland.emv.EmvApplication) -> emvInit
    boolean emvSimpleProcess(com.newland.payment.trans.bean.PubBean,com.newland.emv.EmvApplication) -> emvSimpleProcess
    boolean inputPin(com.newland.payment.trans.bean.PubBean,com.newland.pos.sdk.common.TransConst$PinInputMode) -> inputPin
    boolean inputPin(com.newland.payment.trans.bean.PubBean) -> inputPin
    boolean preOnlineProcess(com.newland.payment.trans.bean.PubBean) -> preOnlineProcess
    boolean inputValidDate(com.newland.payment.trans.bean.PubBean,boolean) -> inputValidDate
    com.newland.payment.mvc.model.Water inputOldTraceNo(com.newland.payment.trans.bean.PubBean,int) -> inputOldTraceNo
    boolean inputOldAuthCode(com.newland.payment.trans.bean.PubBean) -> inputOldAuthCode
    boolean inputOldTransDate(com.newland.payment.trans.bean.PubBean,boolean) -> inputOldTransDate
com.newland.payment.trans.TransStepProvider$1 -> com.newland.payment.trans.TransStepProvider$1:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.ann.AnnStep -> com.newland.payment.trans.ann.AnnStep:
    int stepIndex() -> stepIndex
com.newland.payment.trans.bean.CommHead -> com.newland.payment.trans.bean.CommHead:
    java.lang.String appType -> appType
    java.lang.String softVer -> softVer
    java.lang.String status -> status
    java.lang.String response -> response
    java.lang.String other -> other
    void <init>(android.content.Context) -> <init>
    java.lang.String getString() -> getString
    java.lang.String getAppType() -> getAppType
    void setAppType(java.lang.String) -> setAppType
    java.lang.String getSoftVer() -> getSoftVer
    void setSoftVer(java.lang.String) -> setSoftVer
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    java.lang.String getResponse() -> getResponse
    void setResponse(java.lang.String) -> setResponse
    java.lang.String getOther() -> getOther
    void setOther(java.lang.String) -> setOther
com.newland.payment.trans.bean.CommonBean -> com.newland.payment.trans.bean.CommonBean:
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> value
    java.lang.String title -> title
    java.lang.String content -> content
    boolean emptyFlag -> emptyFlag
    long timeOut -> timeOut
    boolean result -> result
    void <init>() -> <init>
    long getTimeOut() -> getTimeOut
    void setTimeOut(long) -> setTimeOut
    long getSerialversionuid() -> getSerialversionuid
    boolean getResult() -> getResult
    void setResult(boolean) -> setResult
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    boolean isEmptyFlag() -> isEmptyFlag
    void setEmptyFlag(boolean) -> setEmptyFlag
com.newland.payment.trans.bean.CommunicationBean -> com.newland.payment.trans.bean.CommunicationBean:
    java.lang.String https -> https
    java.lang.String tpdu -> tpdu
    java.lang.String head -> head
    java.lang.String data -> data
    java.lang.String[] content -> content
    byte[] request -> request
    byte[] response -> response
    boolean mposDwnm -> mposDwnm
    com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason reason -> reason
    void <init>() -> <init>
    boolean getMposDwnm() -> getMposDwnm
    void setMposDwnm(boolean) -> setMposDwnm
    java.lang.String getHttps() -> getHttps
    void setHttps(java.lang.String) -> setHttps
    java.lang.String getTpdu() -> getTpdu
    void setTpdu(java.lang.String) -> setTpdu
    java.lang.String getHead() -> getHead
    void setHead(java.lang.String) -> setHead
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    java.lang.String[] getContent() -> getContent
    void setContent(java.lang.String[]) -> setContent
    byte[] getRequest() -> getRequest
    void setResponse(byte[]) -> setResponse
    com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason getReason() -> getReason
    void setReason(com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason) -> setReason
com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason -> com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason:
    com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason CONNECT_FAIL -> CONNECT_FAIL
    com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason SEND_FAIL -> SEND_FAIL
    com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason RECEIVE_FAIL -> RECEIVE_FAIL
    com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason[] $VALUES -> $VALUES
    com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason[] values() -> values
    com.newland.payment.trans.bean.CommunicationBean$CommunicationFailReason valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.trans.bean.InputInfoBean -> com.newland.payment.trans.bean.InputInfoBean:
    long serialVersionUID -> serialVersionUID
    int INPUT_MODE_STRING -> INPUT_MODE_STRING
    int INPUT_MODE_NUMBER -> INPUT_MODE_NUMBER
    int INPUT_MODE_PASSWD -> INPUT_MODE_PASSWD
    int INPUT_MODE_ASCII -> INPUT_MODE_ASCII
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String shortContent -> shortContent
    int minLen -> minLen
    int maxLen -> maxLen
    boolean emptyFlag -> emptyFlag
    int mode -> mode
    int timeOut -> timeOut
    java.lang.String result -> result
    int len -> len
    void <init>() -> <init>
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    int getMinLen() -> getMinLen
    void setMinLen(int) -> setMinLen
    int getMaxLen() -> getMaxLen
    void setMaxLen(int) -> setMaxLen
    boolean getEmptyFlag() -> getEmptyFlag
    void setEmptyFlag(boolean) -> setEmptyFlag
    int getMode() -> getMode
    void setMode(int) -> setMode
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getResult() -> getResult
    void setResult(java.lang.String) -> setResult
    int getLen() -> getLen
    void setLen(int) -> setLen
    java.lang.String getShortContent() -> getShortContent
    void setShortContent(java.lang.String) -> setShortContent
com.newland.payment.trans.bean.NewRefundBean -> com.newland.payment.trans.bean.NewRefundBean:
    com.newland.pos.sdk.bean.CardBean cardBean -> cardBean
    java.lang.String oldRefNo -> oldRefNo
    long oldAmount -> oldAmount
    java.lang.String oldDate -> oldDate
    java.lang.String currency -> currency
    void <init>() -> <init>
    java.lang.String getOldDate() -> getOldDate
    void setOldDate(java.lang.String) -> setOldDate
    com.newland.pos.sdk.bean.CardBean getCardBean() -> getCardBean
    void setCardBean(com.newland.pos.sdk.bean.CardBean) -> setCardBean
    java.lang.String getOldRefNo() -> getOldRefNo
    void setOldRefNo(java.lang.String) -> setOldRefNo
    long getOldAmount() -> getOldAmount
    void setOldAmount(long) -> setOldAmount
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
com.newland.payment.trans.bean.OperatorBean -> com.newland.payment.trans.bean.OperatorBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String OperatorNo -> OperatorNo
    java.lang.String password -> password
    int passwordLen -> passwordLen
    void <init>() -> <init>
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getOperatorNo() -> getOperatorNo
    void setOperatorNo(java.lang.String) -> setOperatorNo
    int getPasswordLen() -> getPasswordLen
    void setPasswordLen(int) -> setPasswordLen
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
com.newland.payment.trans.bean.PrintBean -> com.newland.payment.trans.bean.PrintBean:
    long serialVersionUID -> serialVersionUID
    com.newland.payment.common.Const$PrintStyleConstEnum printType -> printType
    java.lang.String printMessage -> printMessage
    com.newland.payment.mvc.model.Water water -> water
    boolean printResult -> printResult
    void <init>() -> <init>
    com.newland.payment.common.Const$PrintStyleConstEnum getPrintType() -> getPrintType
    void setPrintType(com.newland.payment.common.Const$PrintStyleConstEnum) -> setPrintType
    java.lang.String getPrintMessage() -> getPrintMessage
    void setPrintMessage(java.lang.String) -> setPrintMessage
    com.newland.payment.mvc.model.Water getWater() -> getWater
    void setWater(com.newland.payment.mvc.model.Water) -> setWater
    boolean getPrintResult() -> getPrintResult
    void setPrintResult(java.lang.Boolean) -> setPrintResult
com.newland.payment.trans.bean.PubBean -> com.newland.payment.trans.bean.PubBean:
    com.newland.pos.sdk.bean.EmvBean emvBean -> emvBean
    int cardInputMode -> cardInputMode
    int oldTransType -> oldTransType
    int transCode -> transCode
    int emv_Status -> emv_Status
    java.lang.String messageID -> messageID
    java.lang.String processCode -> processCode
    java.lang.String traceNo -> traceNo
    java.lang.String time -> time
    java.lang.String date -> date
    java.lang.String settleDate -> settleDate
    java.lang.String serverCode -> serverCode
    java.lang.String acqCenterCode -> acqCenterCode
    java.lang.String trackData3 -> trackData3
    java.lang.String systemRefNum -> systemRefNum
    java.lang.String authCode -> authCode
    java.lang.String posID -> posID
    java.lang.String shopID -> shopID
    java.lang.String inputModeForTransIn -> inputModeForTransIn
    java.lang.String secctrlInfo -> secctrlInfo
    int mustChkMAC -> mustChkMAC
    java.lang.String oldAuthCode -> oldAuthCode
    java.lang.String OldRefnum -> OldRefnum
    java.lang.String oldDate -> oldDate
    java.lang.Long oldAmount -> oldAmount
    java.lang.Long tipAmount -> tipAmount
    java.lang.String internationOrg -> internationOrg
    java.lang.String currentOperNo -> currentOperNo
    java.lang.String mobileNo -> mobileNo
    java.lang.String appointmentNo -> appointmentNo
    java.lang.String cardNoTransIn -> cardNoTransIn
    com.newland.payment.trans.bean.field.ISOField44 isoField44 -> isoField44
    java.lang.String isoField48 -> isoField48
    java.lang.String isoField61 -> isoField61
    java.lang.String isoField62 -> isoField62
    java.lang.String isoField63 -> isoField63
    com.newland.payment.trans.bean.field.ISOField60 isoField60 -> isoField60
    java.lang.String emvAddition -> emvAddition
    com.newland.payment.trans.bean.PubBean$EmvTransResult emvTransResult -> emvTransResult
    java.lang.String oldTerminalId -> oldTerminalId
    java.lang.String back_cardInfo -> back_cardInfo
    java.lang.String back_isDiscount -> back_isDiscount
    java.lang.String back_discountType -> back_discountType
    java.lang.String back_discountRate -> back_discountRate
    java.lang.String back_bonus -> back_bonus
    java.lang.String back_name -> back_name
    boolean isPay -> isPay
    java.util.Map cardInfo -> cardInfo
    boolean isFallBack -> isFallBack
    java.lang.String reserve1 -> reserve1
    java.lang.String reserve2 -> reserve2
    java.lang.String message -> message
    java.lang.Long requestAmount -> requestAmount
    java.lang.String odlTrace -> odlTrace
    java.lang.Long balance -> balance
    java.lang.String operatorNo -> operatorNo
    java.lang.String password -> password
    int maxPasswordLen -> maxPasswordLen
    com.newland.pos.sdk.bean.AmountBean amountBean -> amountBean
    boolean forcePassword -> forcePassword
    java.lang.Long price -> price
    java.lang.String ip -> ip
    java.lang.String port -> port
    java.lang.String gasNo -> gasNo
    java.lang.String refuelerNo -> refuelerNo
    java.lang.String oilTypeNo -> oilTypeNo
    java.lang.Long oilWeight -> oilWeight
    java.lang.String posNo -> posNo
    java.lang.Long orderAmount -> orderAmount
    java.lang.String oilType -> oilType
    java.lang.Long liter -> liter
    java.lang.String macKey -> macKey
    java.lang.Long discountAmount -> discountAmount
    void <init>() -> <init>
    java.lang.String getBack_cardInfo() -> getBack_cardInfo
    void setBack_cardInfo(java.lang.String) -> setBack_cardInfo
    java.lang.String getBack_isDiscount() -> getBack_isDiscount
    void setBack_isDiscount(java.lang.String) -> setBack_isDiscount
    java.lang.String getBack_discountType() -> getBack_discountType
    void setBack_discountType(java.lang.String) -> setBack_discountType
    java.lang.String getBack_discountRate() -> getBack_discountRate
    void setBack_discountRate(java.lang.String) -> setBack_discountRate
    java.lang.String getBack_bonus() -> getBack_bonus
    void setBack_bonus(java.lang.String) -> setBack_bonus
    java.util.Map getCardInfo() -> getCardInfo
    void setCardInfo(java.util.Map) -> setCardInfo
    java.lang.Long getOrderAmount() -> getOrderAmount
    void setOrderAmount(java.lang.Long) -> setOrderAmount
    java.lang.Long getPrice() -> getPrice
    void setPrice(java.lang.Long) -> setPrice
    java.lang.String getOilType() -> getOilType
    void setOilType(java.lang.String) -> setOilType
    java.lang.Long getLiter() -> getLiter
    void setLiter(java.lang.Long) -> setLiter
    java.lang.String getMacKey() -> getMacKey
    void setMacKey(java.lang.String) -> setMacKey
    com.newland.pos.sdk.bean.EmvBean getEmvBean() -> getEmvBean
    int getTransType() -> getTransType
    void setTransType(int) -> setTransType
    int getCardInputMode() -> getCardInputMode
    void setCardInputMode(int) -> setCardInputMode
    java.lang.String getTransName() -> getTransName
    void setTransName(java.lang.String) -> setTransName
    int getTransAttr() -> getTransAttr
    void setTransAttr(int) -> setTransAttr
    int getEmv_Status() -> getEmv_Status
    void setEmv_Status(int) -> setEmv_Status
    java.lang.String getMessageID() -> getMessageID
    void setMessageID(java.lang.String) -> setMessageID
    java.lang.String getPan() -> getPan
    void setPan(java.lang.String) -> setPan
    java.lang.String getProcessCode() -> getProcessCode
    void setProcessCode(java.lang.String) -> setProcessCode
    java.lang.Long getAmount() -> getAmount
    java.lang.String getAmountField() -> getAmountField
    void setAmount(java.lang.Long) -> setAmount
    java.lang.Long getOldAmount() -> getOldAmount
    void setOldAmount(java.lang.Long) -> setOldAmount
    java.lang.String getTraceNo() -> getTraceNo
    void setTraceNo(java.lang.String) -> setTraceNo
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    java.lang.String getExpDate() -> getExpDate
    void setExpDate(java.lang.String) -> setExpDate
    java.lang.String getSettleDate() -> getSettleDate
    void setSettleDate(java.lang.String) -> setSettleDate
    java.lang.String getInputMode() -> getInputMode
    void setInputMode(java.lang.String) -> setInputMode
    java.lang.String getCardSerialNo() -> getCardSerialNo
    void setCardSerialNo(java.lang.String) -> setCardSerialNo
    java.lang.String getServerCode() -> getServerCode
    void setServerCode(java.lang.String) -> setServerCode
    java.lang.String getAcqCenterCode() -> getAcqCenterCode
    void setAcqCenterCode(java.lang.String) -> setAcqCenterCode
    java.lang.String getTrackData2() -> getTrackData2
    void setTrackData2(java.lang.String) -> setTrackData2
    java.lang.String getTrackData3() -> getTrackData3
    void setTrackData3(java.lang.String) -> setTrackData3
    java.lang.String getSystemRefNum() -> getSystemRefNum
    void setSystemRefNum(java.lang.String) -> setSystemRefNum
    java.lang.String getAuthCode() -> getAuthCode
    void setAuthCode(java.lang.String) -> setAuthCode
    java.lang.String getResponseCode() -> getResponseCode
    void setResponseCode(java.lang.String) -> setResponseCode
    java.lang.String getPosID() -> getPosID
    void setPosID(java.lang.String) -> setPosID
    java.lang.String getShopID() -> getShopID
    void setShopID(java.lang.String) -> setShopID
    java.lang.String getInputModeForTransIn() -> getInputModeForTransIn
    void setInputModeForTransIn(java.lang.String) -> setInputModeForTransIn
    java.lang.String getPinBlock() -> getPinBlock
    void setPinBlock(java.lang.String) -> setPinBlock
    java.lang.String getSecctrlInfo() -> getSecctrlInfo
    void setSecctrlInfo(java.lang.String) -> setSecctrlInfo
    int getMustChkMAC() -> getMustChkMAC
    void setMustChkMAC(int) -> setMustChkMAC
    java.lang.String getOldAuthCode() -> getOldAuthCode
    void setOldAuthCode(java.lang.String) -> setOldAuthCode
    java.lang.String getOldRefnum() -> getOldRefnum
    void setOldRefnum(java.lang.String) -> setOldRefnum
    java.lang.Long getTipAmount() -> getTipAmount
    void setTipAmount(java.lang.Long) -> setTipAmount
    java.lang.String getInternationOrg() -> getInternationOrg
    void setInternationOrg(java.lang.String) -> setInternationOrg
    java.lang.String getCurrentOperNo() -> getCurrentOperNo
    void setCurrentOperNo(java.lang.String) -> setCurrentOperNo
    java.lang.String getMobileNo() -> getMobileNo
    void setMobileNo(java.lang.String) -> setMobileNo
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
    java.lang.String getAppointmentNo() -> getAppointmentNo
    void setAppointmentNo(java.lang.String) -> setAppointmentNo
    com.newland.payment.trans.bean.field.ISOField44 getIsoField44() -> getIsoField44
    java.lang.String getIsoField48() -> getIsoField48
    void setIsoField48(java.lang.String) -> setIsoField48
    java.lang.String getIsoField55() -> getIsoField55
    void setIsoField55(java.lang.String) -> setIsoField55
    com.newland.payment.trans.bean.field.ISOField60 getIsoField60() -> getIsoField60
    void setIsoField60(com.newland.payment.trans.bean.field.ISOField60) -> setIsoField60
    java.lang.String getIsoField61() -> getIsoField61
    void setIsoField61(java.lang.String) -> setIsoField61
    java.lang.String getIsoField62() -> getIsoField62
    void setIsoField62(java.lang.String) -> setIsoField62
    java.lang.String getIsoField63() -> getIsoField63
    void setIsoField63(java.lang.String) -> setIsoField63
    java.lang.String getReserve1() -> getReserve1
    void setReserve1(java.lang.String) -> setReserve1
    java.lang.String getReserve2() -> getReserve2
    void setReserve2(java.lang.String) -> setReserve2
    void setIsoField44(com.newland.payment.trans.bean.field.ISOField44) -> setIsoField44
    void setOldDate(java.lang.String) -> setOldDate
    java.lang.String getOldDate() -> getOldDate
    boolean isTSIComleted() -> isTSIComleted
    void setTSIComleted(boolean) -> setTSIComleted
    void setEcSelectMode(com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode) -> setEcSelectMode
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode getEcSelectMode() -> getEcSelectMode
    com.newland.payment.trans.bean.PubBean$EmvTransResult getEmvTransResult() -> getEmvTransResult
    void setEmvTransResult(com.newland.payment.trans.bean.PubBean$EmvTransResult) -> setEmvTransResult
    java.lang.Long getEcBalance() -> getEcBalance
    void setEcBalance(java.lang.Long) -> setEcBalance
    java.lang.String getEmvAddition() -> getEmvAddition
    void setEmvAddition(java.lang.String) -> setEmvAddition
    boolean isFallBack() -> isFallBack
    void setFallBack(boolean) -> setFallBack
    java.lang.String getCardNoTransIn() -> getCardNoTransIn
    void setCardNoTransIn(java.lang.String) -> setCardNoTransIn
    java.lang.String getOldTerminalId() -> getOldTerminalId
    void setOldTerminalId(java.lang.String) -> setOldTerminalId
    int getOldTransType() -> getOldTransType
    void setOldTransType(int) -> setOldTransType
    int getqPbocPriority() -> getqPbocPriority
    void setqPbocPriority(int) -> setqPbocPriority
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getMessage() -> getMessage
    void setRequestAmount(java.lang.Long) -> setRequestAmount
    java.lang.Long getRequestAmount() -> getRequestAmount
    void setOldTrace(java.lang.String) -> setOldTrace
    java.lang.String getOldTrace() -> getOldTrace
    void setBalance(java.lang.Long) -> setBalance
    java.lang.Long getBalance() -> getBalance
    java.lang.String getOperatorNo() -> getOperatorNo
    void setOperatorNo(java.lang.String) -> setOperatorNo
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    int getMaxPasswordLen() -> getMaxPasswordLen
    void setMaxPasswordLen(int) -> setMaxPasswordLen
    void setAmountBean(com.newland.pos.sdk.bean.AmountBean) -> setAmountBean
    com.newland.pos.sdk.bean.AmountBean getAmountBean() -> getAmountBean
    void setForcePassword(boolean) -> setForcePassword
    boolean getForcePassword() -> getForcePassword
    int getTransCode() -> getTransCode
    void setTransCode(int) -> setTransCode
    boolean isPay() -> isPay
    void setPay(boolean) -> setPay
    java.lang.Long getDiscountAmount() -> getDiscountAmount
    void setDiscountAmount(java.lang.Long) -> setDiscountAmount
    java.lang.String getIp() -> getIp
    void setIp(java.lang.String) -> setIp
    java.lang.String getPort() -> getPort
    void setPort(java.lang.String) -> setPort
    java.lang.String getGasNo() -> getGasNo
    void setGasNo(java.lang.String) -> setGasNo
    java.lang.String getRefuelerNo() -> getRefuelerNo
    void setRefuelerNo(java.lang.String) -> setRefuelerNo
    java.lang.String getOilTypeNo() -> getOilTypeNo
    void setOilTypeNo(java.lang.String) -> setOilTypeNo
    java.lang.Long getOilWeight() -> getOilWeight
    void setOilWeight(java.lang.Long) -> setOilWeight
    java.lang.String getPosNo() -> getPosNo
    void setPosNo(java.lang.String) -> setPosNo
    java.lang.String getBack_name() -> getBack_name
    void setBack_name(java.lang.String) -> setBack_name
com.newland.payment.trans.bean.PubBean$EmvTransResult -> com.newland.payment.trans.bean.PubBean$EmvTransResult:
    com.newland.payment.trans.bean.PubBean$EmvTransResult SUCCESS -> SUCCESS
    com.newland.payment.trans.bean.PubBean$EmvTransResult FAIL -> FAIL
    com.newland.payment.trans.bean.PubBean$EmvTransResult FALLBACK -> FALLBACK
    com.newland.payment.trans.bean.PubBean$EmvTransResult TRANS_END -> TRANS_END
    com.newland.payment.trans.bean.PubBean$EmvTransResult[] $VALUES -> $VALUES
    com.newland.payment.trans.bean.PubBean$EmvTransResult[] values() -> values
    com.newland.payment.trans.bean.PubBean$EmvTransResult valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.trans.bean.SignatureBean -> com.newland.payment.trans.bean.SignatureBean:
    long serialVersionUID -> serialVersionUID
    int timeOut -> timeOut
    java.lang.String traceCode -> traceCode
    java.lang.String signatureCode -> signatureCode
    java.lang.String jbigFileName -> jbigFileName
    java.lang.String pngFileName -> pngFileName
    java.lang.String title -> title
    void <init>() -> <init>
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getTraceCode() -> getTraceCode
    void setTraceCode(java.lang.String) -> setTraceCode
    java.lang.String getJbigFileName() -> getJbigFileName
    void setJbigFileName(java.lang.String) -> setJbigFileName
    java.lang.String getPngFileName() -> getPngFileName
    void setPngFileName(java.lang.String) -> setPngFileName
    java.lang.String getSignatureCode() -> getSignatureCode
    void setSignatureCode(java.lang.String) -> setSignatureCode
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
com.newland.payment.trans.bean.ThirdInvokeBean -> com.newland.payment.trans.bean.ThirdInvokeBean:
    java.util.Map map -> map
    java.lang.String STORENO -> STORENO
    java.lang.String OPER -> OPER
    java.lang.String CARDNO -> CARDNO
    java.lang.String CARDTYPE -> CARDTYPE
    java.lang.String TRANSTYPE -> TRANSTYPE
    java.lang.String AMOUNT -> AMOUNT
    java.lang.String OLDTRACENO -> OLDTRACENO
    java.lang.String OLDVOUCHERNO -> OLDVOUCHERNO
    java.lang.String VOUCHERNO -> VOUCHERNO
    java.lang.String AUTHCODE -> AUTHCODE
    java.lang.String OLDREFNO -> OLDREFNO
    java.lang.String OLDDATE -> OLDDATE
    java.lang.String EXPDATE -> EXPDATE
    java.lang.String MEMO -> MEMO
    java.lang.String TRANSID -> TRANSID
    java.lang.String TIPS -> TIPS
    java.lang.String TOTAL -> TOTAL
    java.lang.String BALANCEAMOUNT -> BALANCEAMOUNT
    java.lang.String TRACENO -> TRACENO
    java.lang.String BATCHNO -> BATCHNO
    java.lang.String MERCHANTNO -> MERCHANTNO
    java.lang.String MERCHANTNAME -> MERCHANTNAME
    java.lang.String TERMINALNO -> TERMINALNO
    java.lang.String RESPCODE -> RESPCODE
    java.lang.String ISSNO -> ISSNO
    java.lang.String ISSNAME -> ISSNAME
    java.lang.String OLDTIME -> OLDTIME
    java.lang.String RESPEXPLAIN -> RESPEXPLAIN
    java.lang.String OLDREFERENCENO -> OLDREFERENCENO
    java.lang.String PRICE -> PRICE
    java.lang.String OILTYPE -> OILTYPE
    java.lang.String LITER -> LITER
    java.lang.String MACKEY -> MACKEY
    java.lang.String IP -> IP
    java.lang.String PORT -> PORT
    java.lang.String GASNO -> GASNO
    java.lang.String REFUELERNO -> REFUELERNO
    java.lang.String OILTYPENO -> OILTYPENO
    java.lang.String POSNO -> POSNO
    java.lang.String OILWEIGHT -> OILWEIGHT
    java.lang.String respExplain -> respExplain
    java.lang.String oldTime -> oldTime
    java.lang.String issName -> issName
    java.lang.String issNo -> issNo
    java.lang.String respCode -> respCode
    java.lang.String terminalNo -> terminalNo
    java.lang.String mechantName -> mechantName
    java.lang.String mechantNo -> mechantNo
    java.lang.String batchNo -> batchNo
    java.lang.String traceNo -> traceNo
    java.lang.String balanceAmount -> balanceAmount
    java.lang.String total -> total
    java.lang.String tip -> tip
    com.newland.pos.sdk.bean.AmountBean amountBean -> amountBean
    java.lang.String storeNo -> storeNo
    java.lang.String operator -> operator
    java.lang.String cardNo -> cardNo
    java.lang.String cardType -> cardType
    int transType -> transType
    java.lang.String amount -> amount
    java.lang.String oldTraceNo -> oldTraceNo
    java.lang.String oriVoucherNo -> oriVoucherNo
    java.lang.String authCode -> authCode
    java.lang.String oldRefNo -> oldRefNo
    java.lang.String oldDate -> oldDate
    java.lang.String expDate -> expDate
    java.lang.String meMo -> meMo
    java.lang.String transId -> transId
    java.lang.String payAuthCode -> payAuthCode
    java.lang.String oriReferenceNo -> oriReferenceNo
    java.lang.Long price -> price
    java.lang.String oilType -> oilType
    java.lang.Long liter -> liter
    java.lang.String macKey -> macKey
    java.lang.String ip -> ip
    java.lang.String port -> port
    java.lang.String gasNo -> gasNo
    java.lang.String refuelerNo -> refuelerNo
    java.lang.String oilTypeNo -> oilTypeNo
    java.lang.String posNo -> posNo
    java.lang.Long oilWeight -> oilWeight
    void <init>(android.content.Intent) -> <init>
    void <init>() -> <init>
    com.newland.pos.sdk.bean.AmountBean getAmountBean() -> getAmountBean
    com.newland.pos.sdk.bean.AmountBean getAmountBean(android.content.Intent) -> getAmountBean
    com.newland.pos.sdk.bean.AmountBean getAmountBean(java.util.Map) -> getAmountBean
    java.util.Map getMap() -> getMap
    void setMap(java.util.Map) -> setMap
    java.lang.String getStoreNo() -> getStoreNo
    void setStoreNo(java.lang.String) -> setStoreNo
    java.lang.String getOperator() -> getOperator
    void setOperator(java.lang.String) -> setOperator
    java.lang.String getCardNo() -> getCardNo
    void setCardNo(java.lang.String) -> setCardNo
    java.lang.String getCardType() -> getCardType
    void setCardType(java.lang.String) -> setCardType
    int getTransType() -> getTransType
    void setTransType(int) -> setTransType
    java.lang.String getAmount() -> getAmount
    void setAmount(java.lang.String) -> setAmount
    java.lang.String getOldTraceNo() -> getOldTraceNo
    void setOldTraceNo(java.lang.String) -> setOldTraceNo
    java.lang.String getAuthCode() -> getAuthCode
    void setAuthCode(java.lang.String) -> setAuthCode
    java.lang.String getOldRefNo() -> getOldRefNo
    void setOldRefNo(java.lang.String) -> setOldRefNo
    java.lang.String getOldDate() -> getOldDate
    void setOldDate(java.lang.String) -> setOldDate
    java.lang.String getExpDate() -> getExpDate
    void setExpDate(java.lang.String) -> setExpDate
    java.lang.String getMeMo() -> getMeMo
    void setMeMo(java.lang.String) -> setMeMo
    java.lang.String getTransId() -> getTransId
    void setTransId(java.lang.String) -> setTransId
    java.lang.String getOriVoucherNo() -> getOriVoucherNo
    void setOriVoucherNo(java.lang.String) -> setOriVoucherNo
    java.lang.String getPayAuthCode() -> getPayAuthCode
    void setPayAuthCode(java.lang.String) -> setPayAuthCode
    void setAmountBean(com.newland.pos.sdk.bean.AmountBean) -> setAmountBean
    java.lang.String getRespExplain() -> getRespExplain
    void setRespExplain(java.lang.String) -> setRespExplain
    java.lang.String getOldTime() -> getOldTime
    void setOldTime(java.lang.String) -> setOldTime
    java.lang.String getIssName() -> getIssName
    void setIssName(java.lang.String) -> setIssName
    java.lang.String getIssNo() -> getIssNo
    void setIssNo(java.lang.String) -> setIssNo
    java.lang.String getRespCode() -> getRespCode
    void setRespCode(java.lang.String) -> setRespCode
    java.lang.String getTerminalNo() -> getTerminalNo
    void setTerminalNo(java.lang.String) -> setTerminalNo
    java.lang.String getMechantName() -> getMechantName
    void setMechantName(java.lang.String) -> setMechantName
    java.lang.String getMechantNo() -> getMechantNo
    void setMechantNo(java.lang.String) -> setMechantNo
    java.lang.String getBatchNo() -> getBatchNo
    void setBatchNo(java.lang.String) -> setBatchNo
    java.lang.String getTraceNo() -> getTraceNo
    void setTraceNo(java.lang.String) -> setTraceNo
    java.lang.String getBalanceAmount() -> getBalanceAmount
    void setBalanceAmount(java.lang.String) -> setBalanceAmount
    java.lang.String getTotal() -> getTotal
    void setTotal(java.lang.String) -> setTotal
    java.lang.String getTip() -> getTip
    void setTip(java.lang.String) -> setTip
    java.lang.String getOldRefnum() -> getOldRefnum
    void setOldRefnum(java.lang.String) -> setOldRefnum
    java.lang.String getMacKey() -> getMacKey
    void setMacKey(java.lang.String) -> setMacKey
    java.lang.Long getPrice() -> getPrice
    void setPrice(java.lang.Long) -> setPrice
    java.lang.String getOilType() -> getOilType
    void setOilType(java.lang.String) -> setOilType
    java.lang.Long getLiter() -> getLiter
    void setLiter(java.lang.Long) -> setLiter
    java.lang.String getIp() -> getIp
    void setIp(java.lang.String) -> setIp
    java.lang.String getPort() -> getPort
    void setPort(java.lang.String) -> setPort
    java.lang.String getGasNo() -> getGasNo
    void setGasNo(java.lang.String) -> setGasNo
    java.lang.String getRefuelerNo() -> getRefuelerNo
    void setRefuelerNo(java.lang.String) -> setRefuelerNo
    java.lang.String getOilTypeNo() -> getOilTypeNo
    void setOilTypeNo(java.lang.String) -> setOilTypeNo
    java.lang.String getPosNo() -> getPosNo
    void setPosNo(java.lang.String) -> setPosNo
    java.lang.Long getOilWeight() -> getOilWeight
    void setOilWeight(java.lang.Long) -> setOilWeight
    java.lang.String toString() -> toString
com.newland.payment.trans.bean.TransResultBean -> com.newland.payment.trans.bean.TransResultBean:
    java.lang.String respCode -> respCode
    java.lang.Boolean isSucess -> isSucess
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.Boolean isPrint -> isPrint
    int transType -> transType
    com.newland.payment.mvc.model.Water water -> water
    void <init>() -> <init>
    int getTransType() -> getTransType
    void setTransType(int) -> setTransType
    java.lang.Boolean getIsPrint() -> getIsPrint
    void setIsPrint(java.lang.Boolean) -> setIsPrint
    com.newland.payment.mvc.model.Water getWater() -> getWater
    void setWater(com.newland.payment.mvc.model.Water) -> setWater
    java.lang.Boolean getIsSucess() -> getIsSucess
    void setIsSucess(java.lang.Boolean) -> setIsSucess
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getRespCode() -> getRespCode
    void setRespCode(java.lang.String) -> setRespCode
com.newland.payment.trans.bean.TransStepBeanException -> com.newland.payment.trans.bean.TransStepBeanException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
com.newland.payment.trans.bean.field.Field48_BatchMagOnline -> com.newland.payment.trans.bean.field.Field48_BatchMagOnline:
    int num -> num
    java.lang.String cardType -> cardType
    java.lang.String trace -> trace
    java.lang.String pan -> pan
    java.lang.String amount -> amount
    java.lang.String field48 -> field48
    void <init>() -> <init>
    int getNum() -> getNum
    void setNum(int) -> setNum
    java.lang.String getCardType() -> getCardType
    void setCardType(java.lang.String) -> setCardType
    java.lang.String getTrace() -> getTrace
    void setTrace(java.lang.String) -> setTrace
    java.lang.String getPan() -> getPan
    void setPan(java.lang.String) -> setPan
    java.lang.String getAmount() -> getAmount
    void setAmount(java.lang.String) -> setAmount
    java.lang.String getField48() -> getField48
    void setField48(java.lang.String) -> setField48
    void add() -> add
    java.lang.String getString() -> getString
com.newland.payment.trans.bean.field.Field48_Settle -> com.newland.payment.trans.bean.field.Field48_Settle:
    int debitNum_N -> debitNum_N
    long debitAmount_N -> debitAmount_N
    int creditNum_N -> creditNum_N
    long creditAmount_N -> creditAmount_N
    java.lang.String settleCode_N -> settleCode_N
    int debitNum_W -> debitNum_W
    long debitAmount_W -> debitAmount_W
    int creditNum_W -> creditNum_W
    long creditAmount_W -> creditAmount_W
    java.lang.String settleCode_W -> settleCode_W
    void <init>() -> <init>
    int getDebitNum_N() -> getDebitNum_N
    void setDebitNum_N(int) -> setDebitNum_N
    long getDebitAmount_N() -> getDebitAmount_N
    void setDebitAmount_N(long) -> setDebitAmount_N
    int getCreditNum_N() -> getCreditNum_N
    void setCreditNum_N(int) -> setCreditNum_N
    long getCreditAmount_N() -> getCreditAmount_N
    void setCreditAmount_N(long) -> setCreditAmount_N
    int getDebitNum_W() -> getDebitNum_W
    void setDebitNum_W(int) -> setDebitNum_W
    long getDebitAmount_W() -> getDebitAmount_W
    void setDebitAmount_W(long) -> setDebitAmount_W
    int getCreditNum_W() -> getCreditNum_W
    void setCreditNum_W(int) -> setCreditNum_W
    long getCreditAmount_W() -> getCreditAmount_W
    void setCreditAmount_W(long) -> setCreditAmount_W
    java.lang.String getString() -> getString
    long getTotalAmount() -> getTotalAmount
com.newland.payment.trans.bean.field.Field_54 -> com.newland.payment.trans.bean.field.Field_54:
    java.lang.String availableBalanceType -> availableBalanceType
    java.lang.String balanceAmouont -> balanceAmouont
    java.lang.String additionalAmount -> additionalAmount
    java.util.Map availableBalanceTypeMap -> availableBalanceTypeMap
    void <init>(java.lang.String) -> <init>
    java.lang.String getData(int,int) -> getData
    java.lang.String getAvailableBalanceType() -> getAvailableBalanceType
    void setAvailableBalanceType(java.lang.String) -> setAvailableBalanceType
    java.lang.String getBalanceAmouont() -> getBalanceAmouont
    void setBalanceAmouont(java.lang.String) -> setBalanceAmouont
com.newland.payment.trans.bean.field.Field_54$1 -> com.newland.payment.trans.bean.field.Field_54$1:
    long serialVersionUID -> serialVersionUID
    com.newland.payment.trans.bean.field.Field_54 this$0 -> this$0
    void <init>(com.newland.payment.trans.bean.field.Field_54) -> <init>
com.newland.payment.trans.bean.field.Field_55_PrintData -> com.newland.payment.trans.bean.field.Field_55_PrintData:
    byte[] iad -> iad
    byte[] aip -> aip
    byte[] TC -> TC
    byte[] termCap -> termCap
    byte[] arqc -> arqc
    byte[] cvm -> cvm
    byte[] tvr -> tvr
    byte[] unpr -> unpr
    byte[] aid -> aid
    byte[] tsi -> tsi
    byte[] atc -> atc
    byte[] appName -> appName
    byte[] appLable -> appLable
    byte[] signalFlag -> signalFlag
    byte[] cardProductId -> cardProductId
    void <init>(byte[]) -> <init>
    java.lang.String getIad() -> getIad
    byte[] getAppname() -> getAppname
    void setAppname(byte[]) -> setAppname
    byte[] getApplable() -> getApplable
    void setApplable(byte[]) -> setApplable
    java.lang.String getSignalFlag() -> getSignalFlag
    void setSignalFlag(byte[]) -> setSignalFlag
    void setIad(byte[]) -> setIad
    java.lang.String getTsi() -> getTsi
    void setTsi(byte[]) -> setTsi
    java.lang.String getAip() -> getAip
    void setAip(byte[]) -> setAip
    java.lang.String getTermCap() -> getTermCap
    void setTermCap(byte[]) -> setTermCap
    java.lang.String getArqc() -> getArqc
    void setArqc(byte[]) -> setArqc
    java.lang.String getCvm() -> getCvm
    void setCvm(byte[]) -> setCvm
    java.lang.String getTvr() -> getTvr
    void setTvr(byte[]) -> setTvr
    java.lang.String getUnpr() -> getUnpr
    void setUnpr(byte[]) -> setUnpr
    java.lang.String getAid() -> getAid
    void setAid(byte[]) -> setAid
    java.lang.String getAtc() -> getAtc
    void setAtc(byte[]) -> setAtc
    java.lang.String getTC() -> getTC
    void setTC(byte[]) -> setTC
    java.lang.String getCardProductId() -> getCardProductId
    void setCardProductId(byte[]) -> setCardProductId
com.newland.payment.trans.bean.field.Field_55_Signature -> com.newland.payment.trans.bean.field.Field_55_Signature:
    com.newland.payment.mvc.model.Water water -> water
    void <init>(com.newland.payment.mvc.model.Water) -> <init>
    byte[] pack() -> pack
com.newland.payment.trans.bean.field.ISOField44 -> com.newland.payment.trans.bean.field.ISOField44:
    java.lang.String iisCode -> iisCode
    java.lang.String acqCode -> acqCode
    java.lang.String cardType -> cardType
    void <init>() -> <init>
    void setField(java.lang.String) -> setField
    java.lang.String getIisCode() -> getIisCode
    void setIisCode(java.lang.String) -> setIisCode
    java.lang.String getAcqCode() -> getAcqCode
    void setAcqCode(java.lang.String) -> setAcqCode
    java.lang.String getCardType() -> getCardType
    void setCardType(java.lang.String) -> setCardType
com.newland.payment.trans.bean.field.ISOField60 -> com.newland.payment.trans.bean.field.ISOField60:
    java.lang.String funcCode -> funcCode
    java.lang.String batchNum -> batchNum
    java.lang.String netManCode -> netManCode
    java.lang.String termCapacity -> termCapacity
    java.lang.String icConditionCode -> icConditionCode
    java.lang.String partSaleflag -> partSaleflag
    java.lang.String accountType -> accountType
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(int,boolean) -> <init>
    java.lang.String getFuncCode() -> getFuncCode
    void setFuncCode(java.lang.String) -> setFuncCode
    java.lang.String getBatchNum() -> getBatchNum
    void setBatchNum(java.lang.String) -> setBatchNum
    java.lang.String getNetManCode() -> getNetManCode
    void setNetManCode(java.lang.String) -> setNetManCode
    java.lang.String getTermCapacity() -> getTermCapacity
    void setTermCapacity(java.lang.String) -> setTermCapacity
    java.lang.String getIcConditionCode() -> getIcConditionCode
    void setIcConditionCode(java.lang.String) -> setIcConditionCode
    java.lang.String getPartSaleflag() -> getPartSaleflag
    void setPartSaleflag(java.lang.String) -> setPartSaleflag
    java.lang.String getAccountType() -> getAccountType
    void setAccountType(java.lang.String) -> setAccountType
    java.lang.String getString() -> getString
com.newland.payment.trans.bean.field.ISOField61 -> com.newland.payment.trans.bean.field.ISOField61:
    java.lang.String oldBatchNum -> oldBatchNum
    java.lang.String oldTrace -> oldTrace
    java.lang.String oldDate -> oldDate
    java.lang.String oldAuthWay -> oldAuthWay
    java.lang.String oldAuthOrgCode -> oldAuthOrgCode
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getOldBatchNum() -> getOldBatchNum
    void setOldBatchNum(java.lang.String) -> setOldBatchNum
    java.lang.String getOldTrace() -> getOldTrace
    void setOldTrace(java.lang.String) -> setOldTrace
    java.lang.String getOldDate() -> getOldDate
    void setOldDate(java.lang.String) -> setOldDate
    java.lang.String getOldAuthWay() -> getOldAuthWay
    void setOldAuthWay(java.lang.String) -> setOldAuthWay
    java.lang.String getOldAuthOrgCode() -> getOldAuthOrgCode
    void setOldAuthOrgCode(java.lang.String) -> setOldAuthOrgCode
    java.lang.String getString() -> getString
com.newland.payment.trans.bean.field.ISOField62_Bonus -> com.newland.payment.trans.bean.field.ISOField62_Bonus:
    java.lang.String m_ItemCode -> m_ItemCode
    java.lang.String m_BonusPoint -> m_BonusPoint
    java.lang.String m_SelfAmt -> m_SelfAmt
    java.lang.String m_BonusBalance -> m_BonusBalance
    java.lang.String m_Rfu -> m_Rfu
    java.lang.String m_Field62 -> m_Field62
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void setItemCode(java.lang.String) -> setItemCode
    java.lang.String getItemCode() -> getItemCode
    void setRfu(java.lang.String) -> setRfu
    java.lang.String getReq() -> getReq
    java.lang.String getBonusPoint() -> getBonusPoint
    java.lang.String getSelfAmt() -> getSelfAmt
    java.lang.String getBonusBalance() -> getBonusBalance
    void setBonusBalance(java.lang.String) -> setBonusBalance
    void setBonusPoint(java.lang.String) -> setBonusPoint
    void setSelfAmt(java.lang.String) -> setSelfAmt
    void setField62(java.lang.String) -> setField62
    java.lang.String getResp() -> getResp
com.newland.payment.trans.bean.field.ISOField62_EmvBatchUp -> com.newland.payment.trans.bean.field.ISOField62_EmvBatchUp:
    java.lang.String use -> use
    java.lang.String cardClass -> cardClass
    java.lang.String respCode -> respCode
    java.lang.String authAmt -> authAmt
    java.lang.String authCurrency -> authCurrency
    java.lang.String acType -> acType
    java.lang.String arpcRes -> arpcRes
    void <init>() -> <init>
    java.lang.String getStringUsage6() -> getStringUsage6
    java.lang.String getStringUsage7() -> getStringUsage7
    java.lang.String getUse() -> getUse
    void setUse(java.lang.String) -> setUse
    java.lang.String getCardClass() -> getCardClass
    void setCardClass(java.lang.String) -> setCardClass
    java.lang.String getRespCode() -> getRespCode
    void setRespCode(java.lang.String) -> setRespCode
    java.lang.String getAuthAmt() -> getAuthAmt
    void setAuthAmt(java.lang.String) -> setAuthAmt
    java.lang.String getAuthCurrency() -> getAuthCurrency
    void setAuthCurrency(java.lang.String) -> setAuthCurrency
    java.lang.String getAcType() -> getAcType
    void setAcType(java.lang.String) -> setAcType
    java.lang.String getArpcRes() -> getArpcRes
    void setArpcRes(java.lang.String) -> setArpcRes
com.newland.payment.trans.bean.field.ISOField62_Installment -> com.newland.payment.trans.bean.field.ISOField62_Installment:
    java.lang.String m_InstallmentNum -> m_InstallmentNum
    java.lang.String m_ItemCode -> m_ItemCode
    java.lang.String m_Rfu -> m_Rfu
    java.lang.String m_FirstAmt -> m_FirstAmt
    java.lang.String m_Currency -> m_Currency
    java.lang.String m_Fee -> m_Fee
    java.lang.String m_Bonus -> m_Bonus
    java.lang.String m_Type -> m_Type
    java.lang.String m_FirstFee -> m_FirstFee
    java.lang.String m_NormalFee -> m_NormalFee
    java.lang.String m_Other -> m_Other
    java.lang.String m_RespField62 -> m_RespField62
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void setInstallmentNum(java.lang.String) -> setInstallmentNum
    void setItemCode(java.lang.String) -> setItemCode
    void setRfu(java.lang.String) -> setRfu
    void setResp(java.lang.String) -> setResp
    java.lang.String getInstallmentNum() -> getInstallmentNum
    java.lang.String getFirstAmt() -> getFirstAmt
    java.lang.String getCurrency() -> getCurrency
    java.lang.String getFee() -> getFee
    java.lang.String getBonus() -> getBonus
    java.lang.String getType() -> getType
    java.lang.String getFirstFee() -> getFirstFee
    java.lang.String getNormalFee() -> getNormalFee
    java.lang.String getOther() -> getOther
    java.lang.String getReq() -> getReq
    java.lang.String getResp() -> getResp
com.newland.payment.trans.bean.field.ISOField62_Params -> com.newland.payment.trans.bean.field.ISOField62_Params:
    java.lang.String posAppType -> posAppType
    java.lang.String timeout -> timeout
    java.lang.String retryTime -> retryTime
    java.lang.String transPhone1 -> transPhone1
    java.lang.String transPhone2 -> transPhone2
    java.lang.String transPhone3 -> transPhone3
    java.lang.String managePhone -> managePhone
    java.lang.String isSupportTip -> isSupportTip
    java.lang.String tipPercent -> tipPercent
    java.lang.String isSupportHandInputCardNo -> isSupportHandInputCardNo
    java.lang.String isAutoSignOut -> isAutoSignOut
    java.lang.String shopName -> shopName
    java.lang.String transRetryTime -> transRetryTime
    java.lang.String mainKey -> mainKey
    java.lang.String supportTransType -> supportTransType
    void <init>(java.lang.String) -> <init>
    java.lang.String getPosAppType() -> getPosAppType
    void setPosAppType(java.lang.String) -> setPosAppType
    java.lang.String getTimeout() -> getTimeout
    void setTimeout(java.lang.String) -> setTimeout
    java.lang.String getRetryTime() -> getRetryTime
    void setRetryTime(java.lang.String) -> setRetryTime
    java.lang.String getTransPhone1() -> getTransPhone1
    void setTransPhone1(java.lang.String) -> setTransPhone1
    java.lang.String getTransPhone2() -> getTransPhone2
    void setTransPhone2(java.lang.String) -> setTransPhone2
    java.lang.String getTransPhone3() -> getTransPhone3
    void setTransPhone3(java.lang.String) -> setTransPhone3
    java.lang.String getManagePhone() -> getManagePhone
    void setManagePhone(java.lang.String) -> setManagePhone
    java.lang.String getIsSupportTip() -> getIsSupportTip
    void setIsSupportTip(java.lang.String) -> setIsSupportTip
    java.lang.String getTipPercent() -> getTipPercent
    void setTipPercent(java.lang.String) -> setTipPercent
    java.lang.String getIsSupportHandInputCardNo() -> getIsSupportHandInputCardNo
    void setIsSupportHandInputCardNo(java.lang.String) -> setIsSupportHandInputCardNo
    java.lang.String getIsAutoSignOut() -> getIsAutoSignOut
    void setIsAutoSignOut(java.lang.String) -> setIsAutoSignOut
    java.lang.String getShopName() -> getShopName
    void setShopName(java.lang.String) -> setShopName
    java.lang.String getTransRetryTime() -> getTransRetryTime
    void setTransRetryTime(java.lang.String) -> setTransRetryTime
    java.lang.String getMainKey() -> getMainKey
    void setMainKey(java.lang.String) -> setMainKey
    java.lang.String getSupportTransType() -> getSupportTransType
    void setSupportTransType(java.lang.String) -> setSupportTransType
com.newland.payment.trans.bean.field.ISOField62_Status -> com.newland.payment.trans.bean.field.ISOField62_Status:
    java.lang.String statusKeyboard -> statusKeyboard
    java.lang.String statusKeyboardPassword -> statusKeyboardPassword
    java.lang.String statusCardReader -> statusCardReader
    java.lang.String statusPrint -> statusPrint
    java.lang.String statusDisplay -> statusDisplay
    java.lang.String posAppType -> posAppType
    java.lang.String timeout -> timeout
    java.lang.String retryTime -> retryTime
    java.lang.String transPhone1 -> transPhone1
    java.lang.String transPhone2 -> transPhone2
    java.lang.String transPhone3 -> transPhone3
    java.lang.String managePhone -> managePhone
    java.lang.String isSupportTip -> isSupportTip
    java.lang.String tipPercent -> tipPercent
    java.lang.String isSupportHandInputCardNo -> isSupportHandInputCardNo
    java.lang.String isAutoSignOut -> isAutoSignOut
    java.lang.String transRetryTime -> transRetryTime
    java.lang.String mainKeyIndex -> mainKeyIndex
    java.lang.String autoUploadTotal -> autoUploadTotal
    java.lang.String dialPercent -> dialPercent
    void <init>() -> <init>
    java.lang.String getStatusKeyboard() -> getStatusKeyboard
    void setStatusKeyboard(java.lang.String) -> setStatusKeyboard
    java.lang.String getStatusKeyboardPassword() -> getStatusKeyboardPassword
    void setStatusKeyboardPassword(java.lang.String) -> setStatusKeyboardPassword
    java.lang.String getStatusCardReader() -> getStatusCardReader
    void setStatusCardReader(java.lang.String) -> setStatusCardReader
    java.lang.String getStatusPrint() -> getStatusPrint
    void setStatusPrint(java.lang.String) -> setStatusPrint
    java.lang.String getStatusDisplay() -> getStatusDisplay
    void setStatusDisplay(java.lang.String) -> setStatusDisplay
    java.lang.String getPosAppType() -> getPosAppType
    void setPosAppType(java.lang.String) -> setPosAppType
    java.lang.String getTimeout() -> getTimeout
    void setTimeout(java.lang.String) -> setTimeout
    java.lang.String getRetryTime() -> getRetryTime
    void setRetryTime(java.lang.String) -> setRetryTime
    java.lang.String getTransPhone1() -> getTransPhone1
    void setTransPhone1(java.lang.String) -> setTransPhone1
    java.lang.String getTransPhone2() -> getTransPhone2
    void setTransPhone2(java.lang.String) -> setTransPhone2
    java.lang.String getTransPhone3() -> getTransPhone3
    void setTransPhone3(java.lang.String) -> setTransPhone3
    java.lang.String getManagePhone() -> getManagePhone
    void setManagePhone(java.lang.String) -> setManagePhone
    java.lang.String getIsSupportTip() -> getIsSupportTip
    void setIsSupportTip(java.lang.String) -> setIsSupportTip
    java.lang.String getTipPercent() -> getTipPercent
    void setTipPercent(java.lang.String) -> setTipPercent
    java.lang.String getIsSupportHandInputCardNo() -> getIsSupportHandInputCardNo
    void setIsSupportHandInputCardNo(java.lang.String) -> setIsSupportHandInputCardNo
    java.lang.String getIsAutoSignOut() -> getIsAutoSignOut
    void setIsAutoSignOut(java.lang.String) -> setIsAutoSignOut
    java.lang.String getTransRetryTime() -> getTransRetryTime
    void setTransRetryTime(java.lang.String) -> setTransRetryTime
    java.lang.String getMainKeyIndex() -> getMainKeyIndex
    void setMainKeyIndex(java.lang.String) -> setMainKeyIndex
    java.lang.String getAutoUploadTotal() -> getAutoUploadTotal
    void setAutoUploadTotal(java.lang.String) -> setAutoUploadTotal
    java.lang.String getDialPercent() -> getDialPercent
    void setDialPercent(java.lang.String) -> setDialPercent
    java.lang.String toString() -> toString
com.newland.payment.trans.bean.field.ISOField62_TmsParams -> com.newland.payment.trans.bean.field.ISOField62_TmsParams:
    java.lang.String platformId -> platformId
    java.lang.String downContextSign -> downContextSign
    java.lang.String task -> task
    java.lang.String limitDate -> limitDate
    java.lang.String appVersion -> appVersion
    java.lang.String downOccasion -> downOccasion
    java.lang.String telephone1 -> telephone1
    java.lang.String telephone2 -> telephone2
    java.lang.String ipAndPort1 -> ipAndPort1
    java.lang.String ipAndPort2 -> ipAndPort2
    java.lang.String gprsParam -> gprsParam
    java.lang.String cdmaParam -> cdmaParam
    java.lang.String checkCode -> checkCode
    java.lang.String redialTime -> redialTime
    java.lang.String taskInfo -> taskInfo
    java.lang.String tpdu -> tpdu
    java.lang.String downStartDate -> downStartDate
    java.lang.String downEndDate -> downEndDate
    void <init>(java.lang.String) -> <init>
    java.lang.String getPlatformId() -> getPlatformId
    void setPlatformId(java.lang.String) -> setPlatformId
    java.lang.String getDownContextSign() -> getDownContextSign
    void setDownContextSign(java.lang.String) -> setDownContextSign
    java.lang.String getTask() -> getTask
    void setTask(java.lang.String) -> setTask
    java.lang.String getLimitDate() -> getLimitDate
    void setLimitDate(java.lang.String) -> setLimitDate
    java.lang.String getAppVersion() -> getAppVersion
    void setAppVersion(java.lang.String) -> setAppVersion
    java.lang.String getDownOccasion() -> getDownOccasion
    void setDownOccasion(java.lang.String) -> setDownOccasion
    java.lang.String getTelephone1() -> getTelephone1
    void setTelephone1(java.lang.String) -> setTelephone1
    java.lang.String getTelephone2() -> getTelephone2
    void setTelephone2(java.lang.String) -> setTelephone2
    java.lang.String getIpAndPort1() -> getIpAndPort1
    void setIpAndPort1(java.lang.String) -> setIpAndPort1
    java.lang.String getIpAndPort2() -> getIpAndPort2
    void setIpAndPort2(java.lang.String) -> setIpAndPort2
    java.lang.String getGprsParam() -> getGprsParam
    void setGprsParam(java.lang.String) -> setGprsParam
    java.lang.String getCdmaParam() -> getCdmaParam
    void setCdmaParam(java.lang.String) -> setCdmaParam
    java.lang.String getCheckCode() -> getCheckCode
    void setCheckCode(java.lang.String) -> setCheckCode
    java.lang.String getRedialTime() -> getRedialTime
    void setRedialTime(java.lang.String) -> setRedialTime
    java.lang.String getTaskInfo() -> getTaskInfo
    void setTaskInfo(java.lang.String) -> setTaskInfo
    java.lang.String getTpdu() -> getTpdu
    void setTpdu(java.lang.String) -> setTpdu
    java.lang.String getDownStartDate() -> getDownStartDate
    void setDownStartDate(java.lang.String) -> setDownStartDate
    java.lang.String getDownEndDate() -> getDownEndDate
    void setDownEndDate(java.lang.String) -> setDownEndDate
com.newland.payment.trans.bean.field.ISOField62_Usage12 -> com.newland.payment.trans.bean.field.ISOField62_Usage12:
    java.lang.String infoType -> infoType
    java.lang.String cvn2 -> cvn2
    java.lang.String idLast6 -> idLast6
    java.lang.String phone -> phone
    java.lang.String name -> name
    java.lang.String appointmentNo -> appointmentNo
    java.lang.String CV -> CV
    java.lang.String SF -> SF
    java.lang.String TX -> TX
    java.lang.String NM -> NM
    void <init>() -> <init>
    java.lang.String getInfoType() -> getInfoType
    void setInfoType(java.lang.String) -> setInfoType
    java.lang.String getCvn2() -> getCvn2
    void setCvn2(java.lang.String) -> setCvn2
    java.lang.String getIdLast6() -> getIdLast6
    void setIdLast6(java.lang.String) -> setIdLast6
    java.lang.String getPhone() -> getPhone
    void setPhone(java.lang.String) -> setPhone
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getString() -> getString
    java.lang.String getAppointmentNo() -> getAppointmentNo
    void setAppointmentNo(java.lang.String) -> setAppointmentNo
    boolean isEmpty() -> isEmpty
    java.lang.String getCardHoldAuthInfo() -> getCardHoldAuthInfo
com.newland.payment.trans.bean.field.ISOField62_WorkKey -> com.newland.payment.trans.bean.field.ISOField62_WorkKey:
    java.lang.String PIK -> PIK
    java.lang.String PIKCheck -> PIKCheck
    java.lang.String MAK -> MAK
    java.lang.String MAKCheck -> MAKCheck
    java.lang.String TMK -> TMK
    java.lang.String TMKCheck -> TMKCheck
    java.lang.String TDK -> TDK
    java.lang.String TDKCheck -> TDKCheck
    boolean isErr -> isErr
    void <init>(java.lang.String) -> <init>
    java.lang.String getPIK() -> getPIK
    void setPIK(java.lang.String) -> setPIK
    java.lang.String getPIKCheck() -> getPIKCheck
    void setPIKCheck(java.lang.String) -> setPIKCheck
    java.lang.String getMAK() -> getMAK
    void setMAK(java.lang.String) -> setMAK
    java.lang.String getMAKCheck() -> getMAKCheck
    void setMAKCheck(java.lang.String) -> setMAKCheck
    java.lang.String getTDK() -> getTDK
    void setTDK(java.lang.String) -> setTDK
    java.lang.String getTDKCheck() -> getTDKCheck
    java.lang.String getTMK() -> getTMK
    void setTMK(java.lang.String) -> setTMK
    java.lang.String getTMKCheck() -> getTMKCheck
    void setTMKCheck(java.lang.String) -> setTMKCheck
    void setTDKCheck(java.lang.String) -> setTDKCheck
    boolean isErr() -> isErr
    void setErr(boolean) -> setErr
com.newland.payment.trans.impl.Auth -> com.newland.payment.trans.impl.Auth:
    com.newland.pos.sdk.bean.CardBean cardBean -> cardBean
    java.lang.String arqcTLV -> arqcTLV
    com.newland.emv.EmvApplication emvApp -> emvApp
    com.newland.emv.EmvAppModule emvAppModule -> emvAppModule
    boolean isEmv -> isEmv
    boolean isNoPsw -> isNoPsw
    com.newland.payment.trans.bean.ThirdInvokeBean thirdInvokeBean -> thirdInvokeBean
    void <init>() -> <init>
    void <init>(com.newland.pos.sdk.bean.CardBean) -> <init>
    void <init>(boolean) -> <init>
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_InputAmount() -> step_InputAmount
    int step_SwipCard() -> step_SwipCard
    int step_EmvInitRf() -> step_EmvInitRf
    int step_EmvInit() -> step_EmvInit
    int step_EmvProcess() -> step_EmvProcess
    int step_InputPin() -> step_InputPin
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_EmvComplete() -> step_EmvComplete
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.AuthSale -> com.newland.payment.trans.impl.AuthSale:
    boolean isInputPin -> isInputPin
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_SwipCard() -> step_SwipCard
    int step_EmvSimpleProcess() -> step_EmvSimpleProcess
    int step_InputOldDate() -> step_InputOldDate
    int step_InputOldAuthCode() -> step_InputOldAuthCode
    int step_InputAmount() -> step_InputAmount
    int step_InputPin() -> step_InputPin
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.AuthSaleOff -> com.newland.payment.trans.impl.AuthSaleOff:
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_SwipCard() -> step_SwipCard
    int step_EmvSimpleProcess() -> step_EmvSimpleProcess
    int step_InputOldDate() -> step_InputOldDate
    int step_InputOldAuthCode() -> step_InputOldAuthCode
    int step_InputAmount() -> step_InputAmount
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.BalanceQuery -> com.newland.payment.trans.impl.BalanceQuery:
    int m_TransType -> m_TransType
    com.newland.emv.EmvApplication emvApp -> emvApp
    com.newland.pos.sdk.emv.EmvModule emvModule -> emvModule
    void <init>(int) -> <init>
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_SwipCard() -> step_SwipCard
    int step_EmvInitRf() -> step_EmvInitRf
    int step_EmvInit() -> step_EmvInit
    int step_EmvProcess() -> step_EmvProcess
    int step_InputPin() -> step_InputPin
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_EmvComplete() -> step_EmvComplete
    int step_DisplayBalance() -> step_DisplayBalance
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.BonusLogin -> com.newland.payment.trans.impl.BonusLogin:
    com.newland.pos.sdk.emv.EmvModule emvModule -> emvModule
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_SwipCard() -> step_SwipCard
    int step_EmvSimpleProcess() -> step_EmvSimpleProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.ElecSignSend -> com.newland.payment.trans.impl.ElecSignSend:
    com.newland.payment.mvc.service.WaterService waterService -> waterService
    com.newland.payment.mvc.model.Water water -> water
    int maxTimes -> maxTimes
    int failTimes -> failTimes
    int connectTimes -> connectTimes
    int STEP_QUIT -> STEP_QUIT
    boolean isFirstFail -> isFirstFail
    int count -> count
    int waterSum -> waterSum
    int sendType -> sendType
    com.newland.payment.trans.bean.CommonBean commonBean -> commonBean
    int dealType -> dealType
    void <init>(int) -> <init>
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_transStart() -> step_transStart
    int elecSignSend(com.newland.payment.mvc.model.Water,java.lang.String) -> elecSignSend
    int step_ElecSignSend() -> step_ElecSignSend
    int step_ElecSignSendSettle() -> step_ElecSignSendSettle
    int packAndComm() -> packAndComm
com.newland.payment.trans.impl.ElecSignSend$1 -> com.newland.payment.trans.impl.ElecSignSend$1:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.impl.JycMposDown -> com.newland.payment.trans.impl.JycMposDown:
    java.lang.String mPosKey -> mPosKey
    java.lang.String mPosTransNo -> mPosTransNo
    java.lang.String mPosSn -> mPosSn
    com.newland.usb.TransPort tport -> tport
    boolean isruntime -> isruntime
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_CommMpos() -> step_CommMpos
    int step_CommMposBegin() -> step_CommMposBegin
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_PackAndComm() -> step_PackAndComm
    int step_LoadEnd() -> step_LoadEnd
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.JycMposDown$1 -> com.newland.payment.trans.impl.JycMposDown$1:
    com.newland.payment.trans.impl.JycMposDown this$0 -> a
    void <init>(com.newland.payment.trans.impl.JycMposDown) -> <init>
    void run() -> run
com.newland.payment.trans.impl.JycMposLoad -> com.newland.payment.trans.impl.JycMposLoad:
    java.lang.String mPosKey -> mPosKey
    com.newland.usb.TransPort tport -> tport
    boolean isruntime -> isruntime
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    int step_transStart() -> step_transStart
    int step_CommMpos() -> step_CommMpos
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.JycMposLoad$1 -> com.newland.payment.trans.impl.JycMposLoad$1:
    com.newland.payment.trans.impl.JycMposLoad this$0 -> a
    void <init>(com.newland.payment.trans.impl.JycMposLoad) -> <init>
    void run() -> run
com.newland.payment.trans.impl.LogOut -> com.newland.payment.trans.impl.LogOut:
    com.newland.payment.trans.bean.CommonBean commonBean -> commonBean
    void <init>() -> <init>
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    void checkPower() -> checkPower
    void release() -> release
    int init() -> init
    int step_transStart() -> step_transStart
    int step_PackAndComm() -> step_PackAndComm
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.Login -> com.newland.payment.trans.impl.Login:
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    int step_transStart() -> step_transStart
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_PackAndComm() -> step_PackAndComm
    int step_LoadAndUpdate() -> step_LoadAndUpdate
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.MagRefund -> com.newland.payment.trans.impl.MagRefund:
    int m_TransType -> m_TransType
    int m_CardInpuMode -> m_CardInpuMode
    boolean isInputPin -> isInputPin
    com.newland.payment.trans.bean.ThirdInvokeBean thirdInvokeBean -> thirdInvokeBean
    com.newland.pos.sdk.emv.EmvModule emvModule -> emvModule
    void <init>(int) -> <init>
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_SwipCard() -> step_SwipCard
    int step_EmvSimpleProcess() -> step_EmvSimpleProcess
    int step_InputPin() -> step_InputPin
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.Reprint -> com.newland.payment.trans.impl.Reprint:
    com.newland.payment.mvc.model.Water oldWater -> oldWater
    com.newland.payment.trans.bean.ThirdInvokeBean thirdInvokeBean -> thirdInvokeBean
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void <init>(int) -> <init>
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    int step_transStart() -> step_transStart
    int step_InputTraceNo() -> step_InputTraceNo
    int step_showWater() -> step_showWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.Reverse -> com.newland.payment.trans.impl.Reverse:
    com.newland.payment.mvc.model.ReverseWater reverseWater -> reverseWater
    com.newland.payment.trans.bean.CommonBean commonBean -> commonBean
    com.newland.payment.trans.bean.CommunicationBean communicationBean -> communicationBean
    int maxTimes -> maxTimes
    int failTimes -> failTimes
    int connectTimes -> connectTimes
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_Reversal() -> step_Reversal
    void stepGoOn() -> stepGoOn
    int packAndComm() -> packAndComm
com.newland.payment.trans.impl.Reverse$1 -> com.newland.payment.trans.impl.Reverse$1:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.impl.Sale -> com.newland.payment.trans.impl.Sale:
    com.newland.pos.sdk.bean.CardBean cardBean -> cardBean
    com.newland.pos.sdk.bean.AmountBean amountBean -> amountBean
    com.newland.payment.trans.bean.CommonBean commonBean -> commonBean
    java.lang.String arqcTLV -> arqcTLV
    com.newland.emv.EmvApplication emvApp -> emvApp
    com.newland.emv.EmvAppModule emvAppModule -> emvAppModule
    int transType -> transType
    boolean isOnline -> isOnline
    boolean isShowLight -> isShowLight
    com.newland.pos.sdk.bean.MessageTipBean messageTipBean -> messageTipBean
    boolean isPartial -> isPartial
    java.lang.Long inputAmount -> inputAmount
    java.lang.Integer qPbocPriority -> qPbocPriority
    com.newland.payment.trans.bean.ThirdInvokeBean thirdInvokeBean -> thirdInvokeBean
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(com.newland.pos.sdk.bean.CardBean,com.newland.pos.sdk.bean.AmountBean) -> <init>
    void <init>(int,int) -> <init>
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_InputAmount() -> step_InputAmount
    int step_do_query() -> step_do_query
    int step_SwipCard() -> step_SwipCard
    int step_EmvInit() -> step_EmvInit
    int step_EmvProcess() -> step_EmvProcess
    int step_InputPin() -> step_InputPin
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_EmvComplete() -> step_EmvComplete
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.Sale$1 -> com.newland.payment.trans.impl.Sale$1:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.impl.ScriptResultAdvise -> com.newland.payment.trans.impl.ScriptResultAdvise:
    com.newland.payment.mvc.model.ScriptResult scriptResult -> scriptResult
    com.newland.payment.trans.bean.CommonBean commonBean -> commonBean
    com.newland.payment.trans.bean.CommunicationBean communicationBean -> communicationBean
    int maxTimes -> maxTimes
    int failTimes -> failTimes
    int connectTimes -> connectTimes
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    int step_ScriptResultAdvise() -> step_ScriptResultAdvise
    void release() -> release
    void stepGoOn() -> stepGoOn
    int packAndComm() -> packAndComm
com.newland.payment.trans.impl.ScriptResultAdvise$1 -> com.newland.payment.trans.impl.ScriptResultAdvise$1:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.impl.SendInfo -> com.newland.payment.trans.impl.SendInfo:
    com.newland.payment.trans.bean.CommonBean commonBean -> commonBean
    com.newland.payment.trans.bean.CommunicationBean communicationBean -> communicationBean
    int maxTimes -> maxTimes
    int failTimes -> failTimes
    int connectTimes -> connectTimes
    java.lang.String requstJSON -> requstJSON
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_Reversal() -> step_Reversal
    int packAndCommHttp() -> packAndCommHttp
    boolean httpUrlConnection() -> httpUrlConnection
com.newland.payment.trans.impl.SendInfo$1 -> com.newland.payment.trans.impl.SendInfo$1:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.impl.Settle -> com.newland.payment.trans.impl.Settle:
    com.newland.payment.mvc.model.Water water -> water
    com.newland.payment.mvc.service.WaterService waterService -> waterService
    com.newland.payment.mvc.service.EmvFailWaterService failWaterService -> failWaterService
    int maxResend -> maxResend
    int waterSum -> waterSum
    int failWaterSum -> failWaterSum
    boolean isFirstFail -> isFirstFail
    int CHECK_CN -> CHECK_CN
    int CHECK_EN -> CHECK_EN
    int CHECK_FAIL -> CHECK_FAIL
    java.lang.String keyBatchHlat -> keyBatchHlat
    int connectFail -> connectFail
    int step -> step
    com.newland.payment.trans.bean.field.ISOField60 isoField60 -> isoField60
    com.newland.payment.trans.bean.field.ISOField62_EmvBatchUp isoField62 -> isoField62
    int batchUpNum -> batchUpNum
    int dealType -> dealType
    void <init>(int) -> <init>
    void <init>() -> <init>
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_Settle() -> step_Settle
    int step_BatchUp() -> step_BatchUp
    int step_PrintSettle() -> step_PrintSettle
    int step_PrintAllWater() -> step_PrintAllWater
    int step_ClearSettle() -> step_ClearSettle
    int step_Result() -> step_Result
    int checkCnEnSend(com.newland.payment.mvc.model.Water) -> checkCnEnSend
    boolean dealBatchUpFail(com.newland.payment.mvc.model.Water,int,java.lang.String) -> dealBatchUpFail
    boolean dealFailWaterBatchUpFail(com.newland.payment.mvc.model.EmvFailWater,int,java.lang.String) -> dealFailWaterBatchUpFail
    boolean batchMagOffline() -> batchMagOffline
    boolean batchEmvOfflineSucc() -> batchEmvOfflineSucc
    boolean batchMagOnline() -> batchMagOnline
    boolean batchInform() -> batchInform
    boolean batchEmvOnlineSucc() -> batchEmvOnlineSucc
    boolean batchEmvOfflineFail() -> batchEmvOfflineFail
    boolean batchEmvOnlineSuccArpcErr() -> batchEmvOnlineSuccArpcErr
    boolean batchUpEnd() -> batchUpEnd
    void addBatchNo() -> addBatchNo
    void displayFailResp(java.lang.String) -> displayFailResp
    int getDealType() -> getDealType
    void setDealType(int) -> setDealType
com.newland.payment.trans.impl.VoidAuth -> com.newland.payment.trans.impl.VoidAuth:
    boolean isInputPin -> isInputPin
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_SwipCard() -> step_SwipCard
    int step_EmvSimpleProcess() -> step_EmvSimpleProcess
    int step_InputOldDate() -> step_InputOldDate
    int step_InputOldAuthCode() -> step_InputOldAuthCode
    int step_InputAmount() -> step_InputAmount
    int step_InputPin() -> step_InputPin
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.VoidAuthSale -> com.newland.payment.trans.impl.VoidAuthSale:
    com.newland.payment.mvc.model.Water oldWater -> oldWater
    boolean isSwipeCard -> isSwipeCard
    boolean isInputPin -> isInputPin
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_InputTraceNo() -> step_InputTraceNo
    int step_SwipCard() -> step_SwipCard
    int step_EmvSimpleProcess() -> step_EmvSimpleProcess
    int step_InputPin() -> step_InputPin
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.VoidPartialSale -> com.newland.payment.trans.impl.VoidPartialSale:
    com.newland.payment.mvc.model.Water oldWater -> oldWater
    com.newland.payment.trans.bean.CommonBean commonBean -> commonBean
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_PackAndComm() -> step_PackAndComm
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.VoidSale -> com.newland.payment.trans.impl.VoidSale:
    com.newland.payment.mvc.model.Water oldWater -> oldWater
    boolean isSwipeCard -> isSwipeCard
    boolean isInputPin -> isInputPin
    com.newland.payment.trans.bean.ThirdInvokeBean thirdInvokeBean -> thirdInvokeBean
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void <init>(int) -> <init>
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    int step_transStart() -> step_transStart
    int step_InputTraceNo() -> step_InputTraceNo
    int step_SwipCard() -> step_SwipCard
    int step_EmvSimpleProcess() -> step_EmvSimpleProcess
    int step_InputPin() -> step_InputPin
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.elecash.ECBalanceQuery -> com.newland.payment.trans.impl.elecash.ECBalanceQuery:
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_SwipCard() -> step_SwipCard
    int step_EmvInit() -> step_EmvInit
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.elecash.ECLoad -> com.newland.payment.trans.impl.elecash.ECLoad:
    com.newland.payment.trans.bean.PubBean outPubBean -> outPubBean
    int transType -> transType
    java.lang.String arqcTLV -> arqcTLV
    com.newland.emv.EmvApplication emvApp -> emvApp
    com.newland.emv.EmvAppModule emvAppModule -> emvAppModule
    void <init>(int) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_SwipCard_Out() -> step_SwipCard_Out
    int step_SwipCard_In() -> step_SwipCard_In
    int step_EmvInit() -> step_EmvInit
    int step_EmvProcess() -> step_EmvProcess
    int step_InputPin() -> step_InputPin
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_EmvComplete() -> step_EmvComplete
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.elecash.ECLoadDetail -> com.newland.payment.trans.impl.elecash.ECLoadDetail:
    java.util.List ecLoadDetails -> ecLoadDetails
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_TransStart() -> step_TransStart
    int step_SwipCard() -> step_SwipCard
    int step_ShowPbocLog() -> step_ShowPbocLog
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.elecash.ECLoadDetail$1 -> com.newland.payment.trans.impl.elecash.ECLoadDetail$1:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.impl.elecash.ECRefund -> com.newland.payment.trans.impl.elecash.ECRefund:
    java.lang.String traceNo -> traceNo
    java.lang.String batchNo -> batchNo
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_SwipCard() -> step_SwipCard
    int step_EmvSimpleProcess() -> step_EmvSimpleProcess
    int step_InputOldTerminalNo() -> step_InputOldTerminalNo
    int step_InputOldTraceNo() -> step_InputOldTraceNo
    int step_InputOldBatchNo() -> step_InputOldBatchNo
    int step_InputOldTransDate() -> step_InputOldTransDate
    int step_InputAmount() -> step_InputAmount
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.elecash.ECRefund$1 -> com.newland.payment.trans.impl.elecash.ECRefund$1:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.impl.elecash.ECTransDetail -> com.newland.payment.trans.impl.elecash.ECTransDetail:
    java.util.List pbocDetails -> pbocDetails
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_TransStart() -> step_TransStart
    int step_SwipCard() -> step_SwipCard
    int step_ShowPbocLog() -> step_ShowPbocLog
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.elecash.ECTransDetail$1 -> com.newland.payment.trans.impl.elecash.ECTransDetail$1:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.impl.elecash.ECVoidCashLoad -> com.newland.payment.trans.impl.elecash.ECVoidCashLoad:
    com.newland.payment.mvc.model.Water oldWater -> oldWater
    java.lang.String arqcTLV -> arqcTLV
    com.newland.emv.EmvApplication emvApp -> emvApp
    com.newland.emv.EmvAppModule emvAppModule -> emvAppModule
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_InputTraceNo() -> step_InputTraceNo
    int step_SwipCard() -> step_SwipCard
    int step_EmvInit() -> step_EmvInit
    int step_EmvProcess() -> step_EmvProcess
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_EmvComplete() -> step_EmvComplete
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.impl.elecash.QPbocSale -> com.newland.payment.trans.impl.elecash.QPbocSale:
    java.lang.String arqcTLV -> arqcTLV
    com.newland.emv.EmvApplication emvApp -> emvApp
    com.newland.emv.EmvAppModule emvAppModule -> emvAppModule
    long amount -> amount
    int qPbocPriority -> qPbocPriority
    boolean isNoPsw -> isNoPsw
    com.newland.payment.trans.bean.CommonBean commonBean -> commonBean
    void <init>() -> <init>
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_InputAmount() -> step_InputAmount
    int step_InputPin() -> step_InputPin
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
    void saveFailWater() -> saveFailWater
    void getCardInfoAddtion() -> getCardInfoAddtion
com.newland.payment.trans.impl.offline.SendOffline -> com.newland.payment.trans.impl.offline.SendOffline:
    com.newland.payment.trans.bean.CommonBean commonBean -> commonBean
    com.newland.payment.trans.bean.CommunicationBean communicationBean -> communicationBean
    com.newland.payment.mvc.service.WaterService waterService -> waterService
    com.newland.payment.mvc.model.Water water -> water
    int unSendOfflineNum -> unSendOfflineNum
    int waterSum -> waterSum
    int maxTimes -> maxTimes
    int failTimes -> failTimes
    int connectTimes -> connectTimes
    int waterHalt -> waterHalt
    boolean isFirstFail -> isFirstFail
    int count -> count
    int dealType -> dealType
    void <init>(int) -> <init>
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_SendOffline() -> step_SendOffline
    void release() -> release
    int packAndComm() -> packAndComm
com.newland.payment.trans.impl.offline.SendOffline$1 -> com.newland.payment.trans.impl.offline.SendOffline$1:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$StepResult -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.impl.payQuery -> com.newland.payment.trans.impl.payQuery:
    com.newland.pos.sdk.bean.CardBean cardBean -> cardBean
    java.lang.String arqcTLV -> arqcTLV
    com.newland.emv.EmvApplication emvApp -> emvApp
    com.newland.emv.EmvAppModule emvAppModule -> emvAppModule
    java.util.Map cardMSG -> cardMSG
    boolean isEmv -> isEmv
    boolean isNoPsw -> isNoPsw
    com.newland.pos.sdk.emv.EmvModule emvModule -> emvModule
    com.newland.payment.trans.bean.CommonBean commonBean -> commonBean
    com.newland.payment.trans.bean.ThirdInvokeBean thirdInvokeBean -> thirdInvokeBean
    void <init>() -> <init>
    void <init>(com.newland.pos.sdk.bean.CardBean) -> <init>
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    void <init>(boolean) -> <init>
    void <init>(com.newland.payment.trans.bean.ThirdInvokeBean) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    int step_transStart() -> step_transStart
    int step_InputAmount() -> step_InputAmount
    int step_SwipCard() -> step_SwipCard
    int step_EmvInitRf() -> step_EmvInitRf
    int step_show_cardinfo() -> step_show_cardinfo
    int step_PreOnlineProcess() -> step_PreOnlineProcess
    int step_PackAndComm() -> step_PackAndComm
    java.lang.String getCardMSG() -> getCardMSG
    java.lang.String getCardMSGALL() -> getCardMSGALL
    int step_AppendWater() -> step_AppendWater
    int step_TransResult() -> step_TransResult
    boolean readSocialCard(com.newland.payment.trans.bean.PubBean) -> readSocialCard
    byte[] replace(byte[],byte,byte) -> replace
com.newland.payment.trans.invoke.InvokeParamException -> com.newland.payment.trans.invoke.InvokeParamException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
com.newland.payment.trans.invoke.ThirdInvokeController -> com.newland.payment.trans.invoke.ThirdInvokeController:
    int TRANS_SUCC -> TRANS_SUCC
    android.content.Context context -> context
    com.newland.payment.trans.invoke.listener.InvokeResultListener listener -> listener
    java.lang.String traceNo -> traceNo
    android.content.Intent intentG -> intentG
    void <init>() -> <init>
    void invoke(android.content.Context,int,android.content.Intent,com.newland.payment.trans.invoke.listener.InvokeResultListener) -> invoke
    void invokeMposDown(android.content.Intent) -> invokeMposDown
    void invokeMposLoad(android.content.Intent) -> invokeMposLoad
    void invokeReprint(android.content.Intent) -> invokeReprint
    void invokeSettle(android.content.Intent) -> invokeSettle
    void invokeSale(android.content.Intent) -> invokeSale
    void invokeVoidSale(android.content.Intent) -> invokeVoidSale
    void invokeBalance(android.content.Intent) -> invokeBalance
    void invokePreauth(android.content.Intent) -> invokePreauth
    void invokePreauthSale(android.content.Intent) -> invokePreauthSale
    void invokePreVoidAuth(android.content.Intent) -> invokePreVoidAuth
    void invokePreVoidAuthSale(android.content.Intent) -> invokePreVoidAuthSale
    void invokeRefund(android.content.Intent) -> invokeRefund
    void invokeLogin(android.content.Intent) -> invokeLogin
    com.newland.pos.sdk.bean.AmountBean getAmountBean(android.content.Intent) -> getAmountBean
    com.newland.pos.sdk.bean.CardBean getCardBean(android.content.Intent) -> getCardBean
    void setIntentValue(android.content.Intent,com.newland.payment.trans.bean.PubBean) -> setIntentValue
    void access$000(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.bean.PubBean) -> access$000
    com.newland.payment.trans.invoke.listener.InvokeResultListener access$100(com.newland.payment.trans.invoke.ThirdInvokeController) -> access$100
com.newland.payment.trans.invoke.ThirdInvokeController$1 -> com.newland.payment.trans.invoke.ThirdInvokeController$1:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.JycMposDown val$sale -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.JycMposDown) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$10 -> com.newland.payment.trans.invoke.ThirdInvokeController$2:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.VoidAuth val$sale -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.VoidAuth) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$11 -> com.newland.payment.trans.invoke.ThirdInvokeController$3:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.VoidAuthSale val$sale -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.VoidAuthSale) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$12 -> com.newland.payment.trans.invoke.ThirdInvokeController$4:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.MagRefund val$sale -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.MagRefund) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$13 -> com.newland.payment.trans.invoke.ThirdInvokeController$5:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.Login val$login -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.Login) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$2 -> com.newland.payment.trans.invoke.ThirdInvokeController$6:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.JycMposLoad val$sale -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.JycMposLoad) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$3 -> com.newland.payment.trans.invoke.ThirdInvokeController$7:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.Reprint val$reprint -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.Reprint) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$4 -> com.newland.payment.trans.invoke.ThirdInvokeController$8:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.Settle val$settle -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.Settle) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$5 -> com.newland.payment.trans.invoke.ThirdInvokeController$9:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.Sale val$sale -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.Sale) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$6 -> com.newland.payment.trans.invoke.ThirdInvokeController$10:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.VoidSale val$sale -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.VoidSale) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$7 -> com.newland.payment.trans.invoke.ThirdInvokeController$11:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.BalanceQuery val$sale -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.BalanceQuery) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$8 -> com.newland.payment.trans.invoke.ThirdInvokeController$12:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.Auth val$sale -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.Auth) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.ThirdInvokeController$9 -> com.newland.payment.trans.invoke.ThirdInvokeController$13:
    android.content.Intent val$intent -> a
    com.newland.payment.trans.impl.AuthSale val$sale -> b
    com.newland.payment.trans.invoke.ThirdInvokeController this$0 -> c
    void <init>(com.newland.payment.trans.invoke.ThirdInvokeController,android.content.Intent,com.newland.payment.trans.impl.AuthSale) -> <init>
    void succ() -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.trans.invoke.listener.InvokeResultListener -> com.newland.payment.trans.invoke.listener.InvokeResultListener:
    void fail(java.lang.String) -> fail
    void succ(android.content.Intent) -> succ
com.newland.payment.trans.manage.ParamsHelper -> com.newland.payment.trans.manage.ParamsHelper:
    java.lang.String data -> data
    void <init>(java.lang.String) -> <init>
    java.lang.String get(int) -> get
    java.lang.String getData(int) -> getData
com.newland.payment.trans.manage.impl.CardBInCUpdate -> com.newland.payment.trans.manage.impl.CardBInCUpdate:
    java.lang.String field62 -> field62
    int count -> count
    com.newland.payment.mvc.service.impl.CardBinCServiceImpl cardBinService -> cardBinService
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_transStart() -> step_transStart
    int step_statusSend() -> step_statusSend
    boolean SaveCardBin(java.lang.String) -> SaveCardBin
    int step_sendEndParam() -> step_sendEndParam
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.manage.impl.CardBinBUpdate -> com.newland.payment.trans.manage.impl.CardBinBUpdate:
    java.lang.String field62 -> field62
    int count -> count
    com.newland.payment.mvc.service.impl.CardBinBServiceImpl cardBinService -> cardBinService
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_transStart() -> step_transStart
    int step_statusSend() -> step_statusSend
    boolean SaveCardBin(java.lang.String) -> SaveCardBin
    int step_sendEndParam() -> step_sendEndParam
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.manage.impl.Echo -> com.newland.payment.trans.manage.impl.Echo:
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_transStart() -> step_transStart
    int step_packIsoData() -> step_packIsoData
    int step_showResult() -> step_showResult
com.newland.payment.trans.manage.impl.EmvBlackListDownload -> com.newland.payment.trans.manage.impl.EmvBlackListDownload:
    java.lang.String field62 -> field62
    int count -> count
    boolean isDelParams -> isDelParams
    com.newland.payment.mvc.service.BlackCardService blackCardService -> blackCardService
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_transStart() -> step_transStart
    int step_statusSend() -> step_statusSend
    boolean SaveBlackList(java.lang.String) -> SaveBlackList
    int step_sendEndParam() -> step_sendEndParam
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.manage.impl.EmvParamsDownload -> com.newland.payment.trans.manage.impl.EmvParamsDownload:
    boolean mustSendReq -> mustSendReq
    java.lang.String field62 -> field62
    int count -> count
    java.lang.String oneMsg -> oneMsg
    java.lang.String[] tlvList -> tlvList
    java.lang.String[] netManCode -> netManCode
    boolean isDelParams -> isDelParams
    com.newland.pos.sdk.emv.EmvModule emvModule -> emvModule
    com.newland.payment.common.TransConst$DownloadEmvParamType emvParamType -> emvParamType
    void <init>(com.newland.payment.common.TransConst$DownloadEmvParamType) -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_transStart() -> step_transStart
    int step_StatusSend() -> step_StatusSend
    int step_ParamTrans() -> step_ParamTrans
    int step_SendEndParam() -> step_SendEndParam
    int step_transReuslt() -> step_transReuslt
com.newland.payment.trans.manage.impl.EmvParamsDownload$1 -> com.newland.payment.trans.manage.impl.EmvParamsDownload$1:
    int[] $SwitchMap$com$newland$payment$common$TransConst$DownloadEmvParamType -> a
    void <clinit>() -> <clinit>
com.newland.payment.trans.manage.impl.ParamsTransmit -> com.newland.payment.trans.manage.impl.ParamsTransmit:
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_transStart() -> step_transStart
    int step_packIsoData() -> step_packIsoData
    int step_ParamTrans() -> step_ParamTrans
    int step_showResult() -> step_showResult
com.newland.payment.trans.manage.impl.RfParamsDownload -> com.newland.payment.trans.manage.impl.RfParamsDownload:
    java.lang.String field62 -> field62
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_transStart() -> step_transStart
    int step_statusSend() -> step_statusSend
    int step_analysis() -> step_analysis
    int step_sendEndParam() -> step_sendEndParam
    int step_TransResult() -> step_TransResult
com.newland.payment.trans.manage.impl.StatusSend -> com.newland.payment.trans.manage.impl.StatusSend:
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_transStart() -> step_transStart
    int step_packIsoData() -> step_packIsoData
    int step_showResult() -> step_showResult
com.newland.payment.trans.manage.impl.TmsParamsTransmit -> com.newland.payment.trans.manage.impl.TmsParamsTransmit:
    void <init>() -> <init>
    void checkPower() -> checkPower
    int init() -> init
    void release() -> release
    java.lang.String[] getCommunitionTipMsg() -> getCommunitionTipMsg
    int step_transStart() -> step_transStart
    int step_statusSend() -> step_statusSend
    int step_sendEndParam() -> step_sendEndParam
    int step_TransResult() -> step_TransResult
    void SaveParam(java.lang.String) -> SaveParam
com.newland.payment.ui.activity.App -> com.newland.payment.ui.activity.App:
    com.newland.payment.ui.activity.App app -> k
    java.lang.Long FRAGMENT_TIME -> a
    com.newland.payment.mvc.model.User USER -> b
    com.newland.mtms.inf.IAppEventManager appEventManager -> c
    com.newland.mtms.inf.IParamsManager paramsManager -> d
    java.lang.String SIGNATURE_JBIG_DIR -> e
    java.lang.String LOG_FILE_PAHT -> f
    java.lang.String SIGNATURE_BMP_DIR -> g
    java.lang.String PRINT_LOGO_DIR -> h
    com.newland.payment.ui.bean.MainMenuData mainMenuData -> i
    int SCREEN_TYPE -> j
    android.os.Handler handler -> l
    void <init>() -> <init>
    com.newland.payment.ui.activity.App getInstance() -> a
    void onCreate() -> onCreate
    android.os.Handler getAppHanlder() -> b
    void exit() -> c
    void <clinit>() -> <clinit>
com.newland.payment.ui.activity.App$1 -> com.newland.payment.ui.activity.App$1:
    com.newland.payment.ui.activity.App this$0 -> a
    void <init>(com.newland.payment.ui.activity.App) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.payment.ui.activity.App$1$1 -> com.newland.payment.ui.activity.App$1$1:
    int val$key -> a
    com.newland.payment.ui.activity.App$1 this$1 -> b
    void <init>(com.newland.payment.ui.activity.App$1,int) -> <init>
    void run() -> run
com.newland.payment.ui.activity.BaseActivity -> com.newland.payment.ui.activity.BaseActivity:
    android.content.Context context -> a
    com.newland.payment.ui.activity.BaseActivity activity -> b
    int status -> c
    android.support.v4.app.FragmentManager fragmentManager -> d
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    void refresh() -> c
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onStop() -> onStop
    void onRestart() -> onRestart
    void finish() -> finish
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void switchContent(android.support.v4.app.Fragment) -> a
    void switchContent(android.support.v4.app.Fragment,boolean) -> a
    void returnSettingMain() -> d
    void returnLogin(boolean) -> a
    void returnManager() -> e
    void returnMainMenu() -> f
    void returnFirstMainMenu() -> g
    void popBackFragment(int) -> a
    void backFragment() -> h
com.newland.payment.ui.activity.MainActivity -> com.newland.payment.ui.activity.MainActivity:
    com.newland.payment.ui.activity.MainActivity mainActivity -> f
    android.view.ViewGroup rlTitle -> g
    android.widget.ImageView ivLeft -> h
    android.widget.TextView backtext -> i
    android.widget.ImageView ivWaiting -> j
    android.widget.TextView txtCenter -> k
    android.widget.ImageView ivRight -> l
    com.newland.payment.ui.view.progressbar.TimeOutProgressBar timeOutProgressBar -> m
    android.view.View vProgress -> n
    android.widget.ProgressBar progress -> o
    android.widget.TextView txtProgress -> p
    boolean isLock -> q
    com.newland.payment.ui.listener.KeyDownListener keyDownListener -> r
    boolean isSecond -> s
    int transType -> t
    android.content.Intent intent -> u
    java.lang.String outOrderNo -> v
    com.newland.payment.ui.view.OperatorPasswordDialog operatorPasswordDialog -> d
    android.app.Dialog commonDialog -> e
    com.newland.base.CommonThread queueThread -> w
    java.util.List queueTasks -> x
    int activateState -> y
    android.view.View$OnClickListener clickListener -> z
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> D
    boolean doThirdInvoke() -> i
    boolean doThirdInvokeLoginFail() -> j
    boolean isThirdInvoke() -> k
    void onStart() -> onStart
    boolean isSignOut() -> E
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    void onDestroy() -> onDestroy
    void addQueueTask(com.newland.payment.interfaces.ThreadCallBack) -> a
    com.newland.payment.ui.activity.MainActivity getInstance() -> l
    void setLoginStyle() -> m
    void setExceptMainStyle() -> n
    void setMainStyle() -> o
    void setTitle(int) -> setTitle
    void setTitle(java.lang.String) -> a
    void setTitle(int,boolean) -> a
    void setTitle(java.lang.String,boolean) -> a
    void setTitleBarGoBackEvent(android.view.View$OnClickListener) -> a
    void lock() -> p
    void unLock() -> q
    void hideTitle() -> r
    void showTitle() -> s
    void startTimeOut(long) -> a
    void startTimeOut(long,com.newland.payment.ui.view.progressbar.TimeOutProgressBarListener) -> a
    void resetProgress() -> t
    void closeTimeOut() -> u
    void hideTimeOut() -> v
    void showTimeOut() -> w
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setKeyDownListener(com.newland.payment.ui.listener.KeyDownListener) -> a
    void showProgress() -> x
    void showProgress(boolean) -> b
    void showProgress(boolean,java.lang.Integer) -> a
    void hideProgress() -> y
    void dismissDialog() -> z
    int getTransType() -> A
    java.lang.String getOutOrderNo() -> B
    void setTranslucentStatus() -> F
    int access$002(com.newland.payment.ui.activity.MainActivity,int) -> a
    android.content.Intent access$100(com.newland.payment.ui.activity.MainActivity) -> a
    java.util.List access$200(com.newland.payment.ui.activity.MainActivity) -> b
    com.newland.payment.ui.activity.MainActivity access$300() -> C
com.newland.payment.ui.activity.MainActivity$1 -> com.newland.payment.ui.activity.MainActivity$1:
    com.newland.payment.ui.activity.MainActivity this$0 -> a
    void <init>(com.newland.payment.ui.activity.MainActivity) -> <init>
    void succ(android.content.Intent) -> succ
    void fail(java.lang.String) -> fail
com.newland.payment.ui.activity.MainActivity$2 -> com.newland.payment.ui.activity.MainActivity$2:
    com.newland.payment.interfaces.ThreadCallBack task -> a
    com.newland.payment.ui.activity.MainActivity this$0 -> b
    void <init>(com.newland.payment.ui.activity.MainActivity) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.activity.MainActivity$3 -> com.newland.payment.ui.activity.MainActivity$3:
    com.newland.payment.ui.activity.MainActivity this$0 -> a
    void <init>(com.newland.payment.ui.activity.MainActivity) -> <init>
    void timeout() -> a
com.newland.payment.ui.activity.MainActivity$3$1 -> com.newland.payment.ui.activity.MainActivity$3$1:
    com.newland.payment.ui.activity.MainActivity$3 this$1 -> a
    void <init>(com.newland.payment.ui.activity.MainActivity$3) -> <init>
    void run() -> run
com.newland.payment.ui.activity.MainActivity$4 -> com.newland.payment.ui.activity.MainActivity$4:
    com.newland.payment.ui.activity.MainActivity this$0 -> a
    void <init>(com.newland.payment.ui.activity.MainActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.adapter.BaseListViewAdapter -> com.newland.payment.ui.a.a:
    java.util.List mDataList -> a
    android.content.Context mActiviy -> b
    void <init>(android.content.Context,java.util.List) -> <init>
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.newland.payment.ui.adapter.HolderUtils -> com.newland.payment.ui.a.b:
    android.view.View get(android.view.View,int) -> a
com.newland.payment.ui.adapter.MainMenuAdapter -> com.newland.payment.ui.a.c:
    com.newland.payment.ui.activity.MainActivity activity -> d
    com.newland.payment.mvc.model.Water water -> e
    java.lang.String printStatus -> c
    void <init>(java.util.List) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.newland.payment.ui.activity.MainActivity access$000(com.newland.payment.ui.adapter.MainMenuAdapter) -> a
    com.newland.payment.mvc.model.Water access$102(com.newland.payment.ui.adapter.MainMenuAdapter,com.newland.payment.mvc.model.Water) -> a
    com.newland.payment.mvc.model.Water access$100(com.newland.payment.ui.adapter.MainMenuAdapter) -> b
com.newland.payment.ui.adapter.MainMenuAdapter$1 -> com.newland.payment.ui.a.c$1:
    com.newland.payment.ui.bean.MainMenuItem val$mainMenuItem -> a
    com.newland.payment.ui.adapter.MainMenuAdapter this$0 -> b
    void <init>(com.newland.payment.ui.adapter.MainMenuAdapter,com.newland.payment.ui.bean.MainMenuItem) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.adapter.MainMenuAdapter$1$1 -> com.newland.payment.ui.a.c$1$1:
    com.newland.payment.ui.adapter.MainMenuAdapter$1 this$1 -> a
    void <init>(com.newland.payment.ui.adapter.MainMenuAdapter$1) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.adapter.MainMenuAdapter$1$2 -> com.newland.payment.ui.a.c$1$2:
    com.newland.payment.ui.adapter.MainMenuAdapter$1 this$1 -> a
    void <init>(com.newland.payment.ui.adapter.MainMenuAdapter$1) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.adapter.MainMenuAdapter$1$3 -> com.newland.payment.ui.a.c$1$3:
    com.newland.payment.ui.adapter.MainMenuAdapter$1 this$1 -> a
    void <init>(com.newland.payment.ui.adapter.MainMenuAdapter$1) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.adapter.MainMenuAdapter$1$4 -> com.newland.payment.ui.a.c$1$4:
    com.newland.payment.ui.adapter.MainMenuAdapter$1 this$1 -> a
    void <init>(com.newland.payment.ui.adapter.MainMenuAdapter$1) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.adapter.MainMenuAdapter$1$5 -> com.newland.payment.ui.a.c$1$5:
    com.newland.payment.ui.adapter.MainMenuAdapter$1 this$1 -> a
    void <init>(com.newland.payment.ui.adapter.MainMenuAdapter$1) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.adapter.MenuSelectAdapter -> com.newland.payment.ui.a.d:
    int checkIndex -> c
    android.widget.AdapterView$OnItemClickListener itemClickListener -> d
    void <init>(android.content.Context,java.util.List) -> <init>
    void setSelfOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCheckPosition() -> a
    void setCheck(int) -> a
    android.widget.AdapterView$OnItemClickListener access$000(com.newland.payment.ui.adapter.MenuSelectAdapter) -> a
com.newland.payment.ui.adapter.MenuSelectAdapter$1 -> com.newland.payment.ui.a.d$1:
    int val$position -> a
    com.newland.payment.ui.adapter.MenuSelectAdapter this$0 -> b
    void <init>(com.newland.payment.ui.adapter.MenuSelectAdapter,int) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.adapter.SettingSwitchAdapter -> com.newland.payment.ui.a.e:
    void <init>(android.content.Context,java.util.List) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.newland.payment.ui.adapter.TransSelectListAdapter -> com.newland.payment.ui.a.f:
    java.util.List waters -> a
    android.content.Context context -> b
    java.lang.String strMerchantName -> c
    java.lang.String strMerchantNo -> d
    java.lang.String strPosNo -> e
    void <init>(android.support.v4.app.FragmentManager,android.content.Context,java.util.List,java.lang.String,java.lang.String,java.lang.String) -> <init>
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
    java.util.List getWaters() -> a
    java.util.List access$000(com.newland.payment.ui.adapter.TransSelectListAdapter) -> a
    android.content.Context access$100(com.newland.payment.ui.adapter.TransSelectListAdapter) -> b
com.newland.payment.ui.adapter.TransSelectListAdapter$1 -> com.newland.payment.ui.a.f$1:
    java.util.List addWater -> a
    com.newland.payment.ui.adapter.TransSelectListAdapter this$0 -> b
    void <init>(com.newland.payment.ui.adapter.TransSelectListAdapter) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.bean.MainMenuData -> com.newland.payment.ui.bean.a:
    java.util.List MAIN_MENU_ITEMS -> a
    void <init>() -> <init>
    void checkAll() -> a
    java.util.List findDataByName(java.lang.String,java.util.List) -> a
    void checkMenu(java.util.List) -> a
    void initMenu() -> b
    com.newland.payment.ui.bean.MainMenuItem newMenu(int,java.lang.String,int,com.newland.payment.ui.bean.MainMenuItem[]) -> a
    void addMenus(com.newland.payment.ui.bean.MainMenuItem[]) -> a
com.newland.payment.ui.bean.MainMenuItem -> com.newland.payment.ui.bean.MainMenuItem:
    java.lang.String name -> name
    java.lang.String paramsKey -> paramsKey
    int icon -> icon
    java.util.List childs -> childs
    int transType -> transType
    com.newland.payment.trans.AbstractBaseTrans getAbstractBaseTrans() -> getAbstractBaseTrans
    java.util.List getChilds() -> getChilds
    void setChilds(java.util.List) -> setChilds
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getIcon() -> getIcon
    void setIcon(int) -> setIcon
    void <init>() -> <init>
    java.lang.String getParamsKey() -> getParamsKey
    void setParamsKey(java.lang.String) -> setParamsKey
    void <init>(java.lang.String,int,java.lang.String,int,com.newland.payment.ui.bean.MainMenuItem[]) -> <init>
    java.lang.String toString() -> toString
com.newland.payment.ui.bean.SettingSwicthBean -> com.newland.payment.ui.bean.SettingSwicthBean:
    int resTitle -> resTitle
    java.lang.String key -> key
    com.newland.payment.ui.listener.BooleanValueChangeListener booleanValueChangeListener -> booleanValueChangeListener
    void <init>() -> <init>
    int getResTitle() -> getResTitle
    void setResTitle(int) -> setResTitle
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.newland.payment.ui.listener.BooleanValueChangeListener getBooleanValueChangeListener() -> getBooleanValueChangeListener
    void setBooleanValueChangeListener(com.newland.payment.ui.listener.BooleanValueChangeListener) -> setBooleanValueChangeListener
com.newland.payment.ui.fragment.BalanceFragment -> com.newland.payment.ui.fragment.BalanceFragment:
    android.widget.TextView txtCardNo -> a
    android.widget.TextView txtMoney -> b
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
com.newland.payment.ui.fragment.BaseFragment -> com.newland.payment.ui.fragment.BaseFragment:
    android.content.Context context -> c
    com.newland.payment.ui.activity.MainActivity activity -> d
    android.view.View mFragmentView -> e
    boolean isShowStatus -> a
    java.lang.String title -> b
    boolean hasDataSetuped -> f
    java.lang.Long outTime -> g
    boolean isShowing -> h
    void <init>() -> <init>
    void <init>(long) -> <init>
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    boolean doClickBackEvent() -> d
    boolean doClickHomeEvent() -> e
    void dismissCommonDialog() -> q
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    boolean isHasBean() -> f
    void rushLoad() -> g
    boolean onBackKeyDown() -> h
    void onTransCancel() -> i
    void onDestroyView() -> onDestroyView
    void stepGoOn() -> r
    void onSucess() -> j
    void onFail() -> k
    void onBack() -> l
    void onTimeOut() -> m
    boolean isShowing() -> n
    void onFragmentHide() -> o
    void onFragmentShow() -> p
    void onAttach(android.app.Activity) -> onAttach
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onPause() -> onPause
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void setTitle(int) -> a
    void setTitle(java.lang.String) -> a
    boolean checkSettingError(android.support.v4.app.Fragment) -> a
    void access$000(com.newland.payment.ui.fragment.BaseFragment) -> a
com.newland.payment.ui.fragment.BaseFragment$1 -> com.newland.payment.ui.fragment.BaseFragment$1:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    boolean onHome() -> a
    boolean onBack() -> b
com.newland.payment.ui.fragment.BaseFragment$10 -> com.newland.payment.ui.fragment.BaseFragment$2:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseFragment$11 -> com.newland.payment.ui.fragment.BaseFragment$3:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseFragment$12 -> com.newland.payment.ui.fragment.BaseFragment$4:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseFragment$13 -> com.newland.payment.ui.fragment.BaseFragment$5:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseFragment$2 -> com.newland.payment.ui.fragment.BaseFragment$6:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.newland.payment.ui.fragment.BaseFragment$3 -> com.newland.payment.ui.fragment.BaseFragment$7:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseFragment$4 -> com.newland.payment.ui.fragment.BaseFragment$8:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseFragment$5 -> com.newland.payment.ui.fragment.BaseFragment$9:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseFragment$6 -> com.newland.payment.ui.fragment.BaseFragment$10:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseFragment$7 -> com.newland.payment.ui.fragment.BaseFragment$11:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseFragment$8 -> com.newland.payment.ui.fragment.BaseFragment$12:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseFragment$9 -> com.newland.payment.ui.fragment.BaseFragment$13:
    com.newland.payment.ui.fragment.BaseFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BaseFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BaseSettingFragment -> com.newland.payment.ui.fragment.BaseSettingFragment:
    java.util.List settingEditViews -> a
    void <init>(long) -> <init>
    void <init>() -> <init>
    void addCheckView(com.newland.payment.ui.view.SettingEditView) -> a
    void onFragmentHide() -> o
com.newland.payment.ui.fragment.BillFragment -> com.newland.payment.ui.fragment.BillFragment:
    android.widget.TextView txtMerchantName -> a
    android.widget.TextView txtMerchantNo -> b
    android.widget.TextView txtPosId -> g
    android.widget.TextView txtCardNo -> h
    android.widget.TextView txtVoucher -> i
    android.widget.TextView txtAuthCode -> j
    android.widget.TextView txtRefNo -> k
    android.widget.TextView txtDate -> l
    android.widget.TextView txtAmount -> m
    android.widget.ImageView txtResultLogo -> o
    android.widget.TextView txtResultText -> p
    android.widget.TextView txtResult -> q
    android.widget.Button BtnReturnMain -> r
    android.widget.Button BtnPrintDetail -> s
    java.lang.String strMerchantName -> t
    java.lang.String strMerchantNo -> u
    java.lang.String strPosId -> v
    java.lang.String strVoucher -> w
    java.lang.String strAuthCode -> x
    java.lang.String strRefNo -> y
    java.lang.String strDate -> z
    int returnSecond -> A
    com.newland.payment.trans.bean.TransResultBean bean -> B
    boolean isNeedBackAfter5Second -> C
    android.os.Handler handler -> n
    void <init>() -> <init>
    com.newland.payment.ui.fragment.BillFragment newInstance(com.newland.payment.trans.bean.TransResultBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> s
    void initData() -> a
    void lockPrintThread(com.newland.payment.trans.bean.PrintBean) -> a
    void printWater() -> t
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    void backAfter5Second() -> q
    boolean onBackKeyDown() -> h
    java.lang.Boolean isHasWater() -> u
    void onFragmentHide() -> o
    void onFragmentShow() -> p
    com.newland.payment.trans.bean.TransResultBean getBean() -> r
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    int access$000(com.newland.payment.ui.fragment.BillFragment) -> a
    android.widget.Button access$100(com.newland.payment.ui.fragment.BillFragment) -> b
    java.lang.String access$202(com.newland.payment.ui.fragment.BillFragment,java.lang.String) -> a
    java.lang.String access$302(com.newland.payment.ui.fragment.BillFragment,java.lang.String) -> b
    java.lang.String access$402(com.newland.payment.ui.fragment.BillFragment,java.lang.String) -> c
    void access$500(com.newland.payment.ui.fragment.BillFragment,com.newland.payment.trans.bean.PrintBean) -> a
    android.widget.TextView access$600(com.newland.payment.ui.fragment.BillFragment) -> c
    int access$002(com.newland.payment.ui.fragment.BillFragment,int) -> a
    int access$010(com.newland.payment.ui.fragment.BillFragment) -> d
com.newland.payment.ui.fragment.BillFragment$1 -> com.newland.payment.ui.fragment.BillFragment$1:
    com.newland.payment.ui.fragment.BillFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BillFragment,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.payment.ui.fragment.BillFragment$2 -> com.newland.payment.ui.fragment.BillFragment$2:
    com.newland.payment.ui.fragment.BillFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BillFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.BillFragment$3 -> com.newland.payment.ui.fragment.BillFragment$3:
    com.newland.payment.ui.fragment.BillFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BillFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.BillFragment$3$1 -> com.newland.payment.ui.fragment.BillFragment$3$1:
    com.newland.payment.ui.fragment.PrintFragment val$fragment -> a
    com.newland.payment.ui.fragment.BillFragment$3 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.BillFragment$3,com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.BillFragment$3$2 -> com.newland.payment.ui.fragment.BillFragment$3$2:
    com.newland.payment.ui.fragment.BillFragment$3 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.BillFragment$3) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.BillFragment$4 -> com.newland.payment.ui.fragment.BillFragment$4:
    com.newland.payment.ui.fragment.BillFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BillFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BillFragment$5 -> com.newland.payment.ui.fragment.BillFragment$5:
    com.newland.payment.ui.fragment.BillFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BillFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.BillFragment$6 -> com.newland.payment.ui.fragment.BillFragment$6:
    com.newland.payment.ui.fragment.BillFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.BillFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.BlankFragment -> com.newland.payment.ui.fragment.BlankFragment:
    com.newland.payment.trans.bean.TransResultBean bean -> a
    void <init>() -> <init>
    com.newland.payment.ui.fragment.BlankFragment newInstance() -> q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    boolean onBackKeyDown() -> h
    void onFragmentHide() -> o
    void onFragmentShow() -> p
    com.newland.payment.trans.bean.TransResultBean getBean() -> r
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
com.newland.payment.ui.fragment.CardFragment -> com.newland.payment.ui.fragment.CardFragment:
    android.widget.TextView txtInput -> a
    android.widget.EditText etCardNo -> b
    com.newland.payment.ui.view.KeyboardNumber keyBoardNumber -> g
    com.newland.pos.sdk.bean.CardBean bean -> h
    android.os.Handler handler -> i
    java.lang.String content -> j
    android.app.Dialog dialog -> k
    java.util.List supportMode -> l
    com.newland.pos.sdk.card.CardModule cardModule -> m
    android.widget.FrameLayout remindView -> n
    boolean isCancelCheckCard -> o
    com.newland.payment.ui.listener.RemindViewCloseListener listener -> p
    android.app.Dialog tipDialog -> q
    void <init>(long) -> <init>
    void <init>() -> <init>
    com.newland.payment.ui.fragment.CardFragment newInstance(com.newland.pos.sdk.bean.CardBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void refreshDate() -> t
    void onTransCancel() -> i
    void onPause() -> onPause
    android.os.Handler getCardInputHandler() -> u
    void initEvent() -> b
    void startCheckCard() -> v
    com.newland.pos.sdk.bean.CardBean getBean() -> q
    void setHandInputStyle() -> r
    void initClickEvent(android.view.View) -> a
    void dissmiss() -> w
    void onFragmentShow() -> p
    void onFragmentHide() -> o
    void cancelCardReader() -> x
    void dismissTipDialog() -> y
    boolean doClickBackEvent() -> d
    boolean doClickHomeEvent() -> e
    void onCardSucess() -> onCardSucess
    void onCardFail() -> onCardFail
    void onCardBack() -> onCardBack
    void onCardTimeOut() -> onCardTimeOut
    void onCardComfrim() -> onCardComfrim
    void onRefreshDate() -> onRefreshDate
    void ToastShow(java.lang.Object) -> ToastShow
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    boolean access$002(com.newland.payment.ui.fragment.CardFragment,boolean) -> a
    com.newland.pos.sdk.bean.CardBean access$100(com.newland.payment.ui.fragment.CardFragment) -> a
    android.os.Handler access$200(com.newland.payment.ui.fragment.CardFragment) -> b
    com.newland.pos.sdk.card.CardModule access$300() -> s
    void access$400(com.newland.payment.ui.fragment.CardFragment) -> c
    void access$500(com.newland.payment.ui.fragment.CardFragment) -> d
    void access$600(com.newland.payment.ui.fragment.CardFragment) -> e
com.newland.payment.ui.fragment.CardFragment$1 -> com.newland.payment.ui.fragment.CardFragment$1:
    com.newland.payment.ui.fragment.CardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CardFragment) -> <init>
    void onCloseEvent() -> a
com.newland.payment.ui.fragment.CardFragment$2 -> com.newland.payment.ui.fragment.CardFragment$2:
    com.newland.payment.ui.fragment.CardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CardFragment) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.payment.ui.fragment.CardFragment$3 -> com.newland.payment.ui.fragment.CardFragment$3:
    com.newland.payment.ui.fragment.CardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CardFragment) -> <init>
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.newland.payment.ui.fragment.CardFragment$4 -> com.newland.payment.ui.fragment.CardFragment$4:
    com.newland.payment.ui.fragment.CardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CardFragment,android.view.View) -> <init>
    void onEnter() -> a
com.newland.payment.ui.fragment.CardFragment$5 -> com.newland.payment.ui.fragment.CardFragment$5:
    com.newland.payment.ui.fragment.CardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CardFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.CardFragment$6 -> com.newland.payment.ui.fragment.CardFragment$6:
    com.newland.payment.ui.fragment.CardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CardFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.CardFragment$7 -> com.newland.payment.ui.fragment.CardFragment$7:
    com.newland.payment.ui.fragment.CardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CardFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.CardFragment$8 -> com.newland.payment.ui.fragment.CardFragment$8:
    com.newland.payment.ui.fragment.CardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CardFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.CardFragment$9 -> com.newland.payment.ui.fragment.CardFragment$9:
    com.newland.payment.ui.fragment.CardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CardFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.ChooseDateFragment -> com.newland.payment.ui.fragment.ChooseDateFragment:
    com.newland.payment.ui.view.wheelview.DateWheelView2 dateWheelView -> a
    android.widget.EditText editText -> b
    android.widget.ImageView ivCancel -> g
    android.widget.TextView txtTitle -> h
    android.widget.TextView txtTitleExcept -> i
    java.text.SimpleDateFormat format -> j
    java.lang.String strFormat -> k
    com.newland.payment.ui.listener.OnDateEnterListener onDateEnterListener -> l
    int dateWheelType -> m
    com.newland.payment.trans.bean.CommonBean bean -> n
    void <init>(com.newland.payment.trans.bean.CommonBean,int,com.newland.payment.ui.listener.OnDateEnterListener) -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    java.text.SimpleDateFormat access$000(com.newland.payment.ui.fragment.ChooseDateFragment) -> a
    android.widget.EditText access$100(com.newland.payment.ui.fragment.ChooseDateFragment) -> b
com.newland.payment.ui.fragment.ChooseDateFragment$1 -> com.newland.payment.ui.fragment.ChooseDateFragment$1:
    com.newland.payment.ui.fragment.ChooseDateFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ChooseDateFragment) -> <init>
    void onChanged(long,long) -> a
com.newland.payment.ui.fragment.ChooseDateFragment$2 -> com.newland.payment.ui.fragment.ChooseDateFragment$2:
    com.newland.payment.ui.fragment.ChooseDateFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ChooseDateFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.CommunicationFragment -> com.newland.payment.ui.fragment.CommunicationFragment:
    com.newland.payment.trans.bean.CommunicationBean communicationBean -> a
    java.lang.String[] tipContent -> b
    android.app.Dialog dialog -> g
    boolean isConnected -> h
    com.newland.payment.common.tools.SocketHelper socketHelper -> i
    boolean cancelFlag -> j
    boolean isSucessFlag -> k
    android.app.Dialog progressCountDialog -> l
    android.widget.TextView tvTips -> m
    android.view.View rootView -> n
    void <init>() -> <init>
    com.newland.payment.ui.fragment.CommunicationFragment newInstance(com.newland.payment.trans.bean.CommunicationBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void startCommunication() -> q
    boolean isTransCancel() -> r
    void trySocketConnect() -> s
    void initCountProgress() -> t
    void showCountProgress(java.lang.String) -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void dismissDialog() -> u
    void initEvent() -> b
    void initClickEvent(android.view.View) -> a
    void onFragmentHide() -> o
    void dealCommHead(java.lang.String) -> c
    void access$000(com.newland.payment.ui.fragment.CommunicationFragment) -> a
    boolean access$100(com.newland.payment.ui.fragment.CommunicationFragment) -> b
    java.lang.String[] access$200(com.newland.payment.ui.fragment.CommunicationFragment) -> c
    void access$300(com.newland.payment.ui.fragment.CommunicationFragment,java.lang.String) -> a
    com.newland.payment.trans.bean.CommunicationBean access$400(com.newland.payment.ui.fragment.CommunicationFragment) -> d
    com.newland.payment.common.tools.SocketHelper access$500(com.newland.payment.ui.fragment.CommunicationFragment) -> e
    boolean access$602(com.newland.payment.ui.fragment.CommunicationFragment,boolean) -> a
    boolean access$600(com.newland.payment.ui.fragment.CommunicationFragment) -> f
    boolean access$702(com.newland.payment.ui.fragment.CommunicationFragment,boolean) -> b
    void access$800(com.newland.payment.ui.fragment.CommunicationFragment,java.lang.String) -> b
    android.app.Dialog access$902(com.newland.payment.ui.fragment.CommunicationFragment,android.app.Dialog) -> a
    boolean access$700(com.newland.payment.ui.fragment.CommunicationFragment) -> g
    boolean access$1002(com.newland.payment.ui.fragment.CommunicationFragment,boolean) -> c
    android.app.Dialog access$900(com.newland.payment.ui.fragment.CommunicationFragment) -> h
    android.app.Dialog access$1100(com.newland.payment.ui.fragment.CommunicationFragment) -> i
    void access$1200(com.newland.payment.ui.fragment.CommunicationFragment) -> j
    android.widget.TextView access$1300(com.newland.payment.ui.fragment.CommunicationFragment) -> k
    android.app.Dialog access$1102(com.newland.payment.ui.fragment.CommunicationFragment,android.app.Dialog) -> b
com.newland.payment.ui.fragment.CommunicationFragment$1 -> com.newland.payment.ui.fragment.CommunicationFragment$1:
    com.newland.payment.ui.fragment.CommunicationFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.CommunicationFragment$2 -> com.newland.payment.ui.fragment.CommunicationFragment$2:
    com.newland.payment.ui.fragment.CommunicationFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment) -> <init>
    void overSendData(boolean) -> a
com.newland.payment.ui.fragment.CommunicationFragment$3 -> com.newland.payment.ui.fragment.CommunicationFragment$3:
    com.newland.payment.ui.fragment.CommunicationFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment) -> <init>
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.newland.payment.ui.fragment.CommunicationFragment$3$1 -> com.newland.payment.ui.fragment.CommunicationFragment$3$1:
    com.newland.payment.ui.fragment.CommunicationFragment$3 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment$3) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.CommunicationFragment$3$2 -> com.newland.payment.ui.fragment.CommunicationFragment$3$2:
    com.newland.payment.ui.fragment.CommunicationFragment$3 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment$3) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.CommunicationFragment$4 -> com.newland.payment.ui.fragment.CommunicationFragment$4:
    java.lang.String val$msg -> a
    com.newland.payment.ui.fragment.CommunicationFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.CommunicationFragment$5 -> com.newland.payment.ui.fragment.CommunicationFragment$5:
    com.newland.payment.ui.fragment.CommunicationFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.CommunicationFragment2 -> com.newland.payment.ui.fragment.CommunicationFragment2:
    com.newland.payment.trans.bean.CommunicationBean communicationBean -> a
    java.lang.String[] tipContent -> b
    android.app.Dialog dialog -> g
    boolean isConnected -> h
    com.newland.payment.common.tools.SocketHelper socketHelper -> i
    boolean cancelFlag -> j
    boolean isSucessFlag -> k
    android.app.Dialog progressCountDialog -> l
    android.widget.TextView tvTips -> m
    android.view.View rootView -> n
    void <init>() -> <init>
    com.newland.payment.ui.fragment.CommunicationFragment2 newInstance(com.newland.payment.trans.bean.CommunicationBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void startCommunication() -> q
    boolean isTransCancel() -> r
    void trySocketConnect() -> s
    void initCountProgress() -> t
    void showCountProgress(java.lang.String) -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void dismissDialog() -> u
    void initEvent() -> b
    void initClickEvent(android.view.View) -> a
    void onFragmentHide() -> o
    void access$000(com.newland.payment.ui.fragment.CommunicationFragment2) -> a
    boolean access$100(com.newland.payment.ui.fragment.CommunicationFragment2) -> b
    java.lang.String[] access$200(com.newland.payment.ui.fragment.CommunicationFragment2) -> c
    void access$300(com.newland.payment.ui.fragment.CommunicationFragment2,java.lang.String) -> a
    com.newland.payment.trans.bean.CommunicationBean access$400(com.newland.payment.ui.fragment.CommunicationFragment2) -> d
    com.newland.payment.common.tools.SocketHelper access$500(com.newland.payment.ui.fragment.CommunicationFragment2) -> e
    boolean access$602(com.newland.payment.ui.fragment.CommunicationFragment2,boolean) -> a
    boolean access$600(com.newland.payment.ui.fragment.CommunicationFragment2) -> f
    boolean access$702(com.newland.payment.ui.fragment.CommunicationFragment2,boolean) -> b
    android.app.Dialog access$802(com.newland.payment.ui.fragment.CommunicationFragment2,android.app.Dialog) -> a
    boolean access$700(com.newland.payment.ui.fragment.CommunicationFragment2) -> g
    boolean access$902(com.newland.payment.ui.fragment.CommunicationFragment2,boolean) -> c
    android.app.Dialog access$800(com.newland.payment.ui.fragment.CommunicationFragment2) -> h
    android.app.Dialog access$1000(com.newland.payment.ui.fragment.CommunicationFragment2) -> i
    void access$1100(com.newland.payment.ui.fragment.CommunicationFragment2) -> j
    android.widget.TextView access$1200(com.newland.payment.ui.fragment.CommunicationFragment2) -> k
    android.app.Dialog access$1002(com.newland.payment.ui.fragment.CommunicationFragment2,android.app.Dialog) -> b
com.newland.payment.ui.fragment.CommunicationFragment2$1 -> com.newland.payment.ui.fragment.CommunicationFragment2$1:
    com.newland.payment.ui.fragment.CommunicationFragment2 this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.CommunicationFragment2$2 -> com.newland.payment.ui.fragment.CommunicationFragment2$2:
    com.newland.payment.ui.fragment.CommunicationFragment2 this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment2) -> <init>
    void overSendData(boolean) -> a
com.newland.payment.ui.fragment.CommunicationFragment2$3 -> com.newland.payment.ui.fragment.CommunicationFragment2$3:
    com.newland.payment.ui.fragment.CommunicationFragment2 this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment2) -> <init>
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.newland.payment.ui.fragment.CommunicationFragment2$3$1 -> com.newland.payment.ui.fragment.CommunicationFragment2$3$1:
    com.newland.payment.ui.fragment.CommunicationFragment2$3 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment2$3) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.CommunicationFragment2$3$2 -> com.newland.payment.ui.fragment.CommunicationFragment2$3$2:
    com.newland.payment.ui.fragment.CommunicationFragment2$3 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment2$3) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.CommunicationFragment2$4 -> com.newland.payment.ui.fragment.CommunicationFragment2$4:
    java.lang.String val$msg -> a
    com.newland.payment.ui.fragment.CommunicationFragment2 this$0 -> b
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment2,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.CommunicationFragment2$5 -> com.newland.payment.ui.fragment.CommunicationFragment2$5:
    com.newland.payment.ui.fragment.CommunicationFragment2 this$0 -> a
    void <init>(com.newland.payment.ui.fragment.CommunicationFragment2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.ConfirmInfoFragment -> com.newland.payment.ui.fragment.ConfirmInfoFragment:
    android.widget.TextView txtMerchantName -> a
    android.widget.TextView txtMerchantNo -> b
    android.widget.TextView txtCardNo -> g
    android.widget.TextView txtVoucher -> h
    android.widget.TextView txtAuthCode -> i
    android.widget.TextView txtRefNo -> j
    android.widget.TextView txtDate -> k
    android.widget.TextView txtAmount -> l
    com.newland.payment.trans.bean.CommonBean bean -> m
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView(android.view.View) -> b
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.payment.trans.bean.CommonBean getBean() -> q
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
com.newland.payment.ui.fragment.ConfirmInfoFragment$1 -> com.newland.payment.ui.fragment.ConfirmInfoFragment$1:
    com.newland.payment.ui.fragment.ConfirmInfoFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ConfirmInfoFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.EcLoadLogItemFragment -> com.newland.payment.ui.fragment.EcLoadLogItemFragment:
    android.widget.TextView txtMerchantName -> a
    android.widget.TextView txtP1 -> b
    android.widget.TextView txtP2 -> g
    android.widget.TextView txtBalanceOld -> h
    android.widget.TextView txtBalanceNew -> i
    android.widget.TextView txtCountryCode -> j
    android.widget.TextView txtDate -> k
    android.widget.TextView txtAtc -> l
    java.lang.String strMerchantName -> m
    java.lang.String p1 -> n
    java.lang.String p2 -> o
    java.lang.String balanceOld -> p
    java.lang.String balanceNew -> q
    java.lang.String strCountryCode -> r
    java.lang.String strDate -> s
    java.lang.String strAtc -> t
    com.newland.pos.sdk.bean.EcLoadBean selfBean -> u
    com.newland.pos.sdk.bean.BaseBean parentBean -> v
    void <init>(com.newland.pos.sdk.bean.EcLoadBean,com.newland.pos.sdk.bean.BaseBean) -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
com.newland.payment.ui.fragment.EcLoadLogListFragment -> com.newland.payment.ui.fragment.EcLoadLogListFragment:
    android.widget.TextView txtBackPage -> a
    android.widget.TextView txtNextPage -> b
    android.widget.TextView txtPrint -> g
    android.support.v4.view.ViewPager viewPager -> h
    android.widget.TextView txtSearchWatersResult -> i
    android.widget.LinearLayout layout -> j
    java.util.List beans -> k
    android.support.v4.app.FragmentPagerAdapter ecLoadLogListAdapter -> l
    com.newland.payment.trans.bean.CommonBean bean -> m
    void <init>(long) -> <init>
    com.newland.payment.ui.fragment.EcLoadLogListFragment newInstance(com.newland.payment.trans.bean.CommonBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    android.support.v4.app.FragmentPagerAdapter access$000(com.newland.payment.ui.fragment.EcLoadLogListFragment) -> a
    java.util.List access$100(com.newland.payment.ui.fragment.EcLoadLogListFragment) -> b
    android.support.v4.app.FragmentPagerAdapter access$002(com.newland.payment.ui.fragment.EcLoadLogListFragment,android.support.v4.app.FragmentPagerAdapter) -> a
    com.newland.payment.trans.bean.CommonBean access$200(com.newland.payment.ui.fragment.EcLoadLogListFragment) -> c
com.newland.payment.ui.fragment.EcLoadLogListFragment$1 -> com.newland.payment.ui.fragment.EcLoadLogListFragment$1:
    com.newland.payment.ui.fragment.EcLoadLogListFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.EcLoadLogListFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.EcLoadLogListFragment$1$1 -> com.newland.payment.ui.fragment.EcLoadLogListFragment$1$1:
    com.newland.payment.ui.fragment.EcLoadLogListFragment$1 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.EcLoadLogListFragment$1,android.support.v4.app.FragmentManager) -> <init>
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.newland.payment.ui.fragment.EcLoadLogListFragment$2 -> com.newland.payment.ui.fragment.EcLoadLogListFragment$2:
    com.newland.payment.ui.fragment.EcLoadLogListFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.EcLoadLogListFragment) -> <init>
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.newland.payment.ui.fragment.InputInfoFragment -> com.newland.payment.ui.fragment.InputInfoFragment:
    com.newland.payment.ui.view.KeyboardNumber keyBoardNumber -> a
    android.widget.TextView txtContent -> b
    android.widget.EditText editInput -> g
    android.widget.TextView txtShortContent -> h
    com.newland.payment.trans.bean.InputInfoBean bean -> i
    java.lang.String result -> j
    int maxLen -> k
    int minLen -> l
    int timeOut -> m
    java.lang.String title -> n
    java.lang.String content -> o
    java.lang.String shortContent -> p
    int mode -> q
    boolean emptyFlag -> r
    com.newland.payment.ui.listener.AbstractKeyBoardListener listener -> s
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    void doEndThing() -> q
    void onSucess() -> j
    void onBack() -> l
    void onTimeOut() -> m
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void hideSoftInputMethod(android.widget.EditText) -> a
    boolean access$000(com.newland.payment.ui.fragment.InputInfoFragment) -> a
    java.lang.String access$100(com.newland.payment.ui.fragment.InputInfoFragment) -> b
    int access$200(com.newland.payment.ui.fragment.InputInfoFragment) -> c
    int access$300(com.newland.payment.ui.fragment.InputInfoFragment) -> d
    int access$400(com.newland.payment.ui.fragment.InputInfoFragment) -> e
    com.newland.payment.trans.bean.InputInfoBean access$500(com.newland.payment.ui.fragment.InputInfoFragment) -> f
    java.lang.String access$102(com.newland.payment.ui.fragment.InputInfoFragment,java.lang.String) -> a
com.newland.payment.ui.fragment.InputInfoFragment$1 -> com.newland.payment.ui.fragment.InputInfoFragment$1:
    com.newland.payment.ui.fragment.InputInfoFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputInfoFragment) -> <init>
    void onEnter() -> a
    void onChangeText(java.lang.String,int) -> a
    void onClick(int) -> a
com.newland.payment.ui.fragment.InputInfoFragment$2 -> com.newland.payment.ui.fragment.InputInfoFragment$2:
    java.lang.String tmp -> c
    java.util.regex.Pattern pattern -> a
    com.newland.payment.ui.fragment.InputInfoFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.InputInfoFragment) -> <init>
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.newland.payment.ui.fragment.InputInfoFragment$3 -> com.newland.payment.ui.fragment.InputInfoFragment$3:
    com.newland.payment.ui.fragment.InputInfoFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputInfoFragment) -> <init>
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.newland.payment.ui.fragment.InputInfoFragment$4 -> com.newland.payment.ui.fragment.InputInfoFragment$4:
    com.newland.payment.ui.fragment.InputInfoFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputInfoFragment) -> <init>
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.newland.payment.ui.fragment.InputMoneyFragment -> com.newland.payment.ui.fragment.InputMoneyFragment:
    com.newland.payment.ui.view.KeyboardNumber keyBoardNumber -> a
    android.widget.TextView txtInteger -> b
    android.widget.TextView txtDecimal -> g
    android.widget.TextView txtContent -> h
    android.widget.TextView txtPoint -> i
    com.newland.pos.sdk.bean.AmountBean bean -> j
    java.lang.String amount -> k
    long amountDefault -> l
    int format -> m
    long mod -> n
    long maxAmount -> o
    long minAmount -> p
    int timeOut -> q
    java.lang.String title -> r
    java.lang.String content -> s
    java.lang.Boolean isConfirmAmount -> t
    java.lang.Boolean isCheckRefundAmount -> u
    long currentValue -> v
    com.newland.payment.ui.listener.AbstractKeyBoardListener keyBoardListen -> w
    android.app.Dialog confirmDialog -> x
    void <init>(long) -> <init>
    com.newland.payment.ui.fragment.InputMoneyFragment newInstance(com.newland.pos.sdk.bean.AmountBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    boolean doConfirmAmount() -> q
    boolean doCheckRefundAmount() -> r
    void doSucces() -> s
    boolean checkAmountLimit() -> t
    void dismissDialog() -> u
    void onFragmentHide() -> o
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    java.lang.String access$000(com.newland.payment.ui.fragment.InputMoneyFragment) -> a
    long access$102(com.newland.payment.ui.fragment.InputMoneyFragment,long) -> a
    long access$100(com.newland.payment.ui.fragment.InputMoneyFragment) -> b
    long access$200(com.newland.payment.ui.fragment.InputMoneyFragment) -> c
    long access$300(com.newland.payment.ui.fragment.InputMoneyFragment) -> d
    java.lang.String access$002(com.newland.payment.ui.fragment.InputMoneyFragment,java.lang.String) -> a
    boolean access$400(com.newland.payment.ui.fragment.InputMoneyFragment) -> e
    boolean access$500(com.newland.payment.ui.fragment.InputMoneyFragment) -> f
    boolean access$600(com.newland.payment.ui.fragment.InputMoneyFragment) -> g
    void access$700(com.newland.payment.ui.fragment.InputMoneyFragment) -> h
    int access$800(com.newland.payment.ui.fragment.InputMoneyFragment) -> i
    void access$900(com.newland.payment.ui.fragment.InputMoneyFragment) -> j
    com.newland.payment.ui.listener.AbstractKeyBoardListener access$1000(com.newland.payment.ui.fragment.InputMoneyFragment) -> k
com.newland.payment.ui.fragment.InputMoneyFragment$1 -> com.newland.payment.ui.fragment.InputMoneyFragment$1:
    com.newland.payment.ui.fragment.InputMoneyFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputMoneyFragment) -> <init>
    void onEnter() -> a
    void onChangeText(java.lang.String) -> a
    void onClick(int) -> a
com.newland.payment.ui.fragment.InputMoneyFragment$2 -> com.newland.payment.ui.fragment.InputMoneyFragment$2:
    com.newland.payment.ui.fragment.InputMoneyFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputMoneyFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.InputMoneyFragment$3 -> com.newland.payment.ui.fragment.InputMoneyFragment$3:
    com.newland.payment.ui.fragment.InputMoneyFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputMoneyFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.InputMoneyFragment$4 -> com.newland.payment.ui.fragment.InputMoneyFragment$4:
    com.newland.payment.ui.fragment.InputMoneyFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputMoneyFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.InputMoneyFragment$5 -> com.newland.payment.ui.fragment.InputMoneyFragment$5:
    com.newland.payment.ui.fragment.InputMoneyFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputMoneyFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.InputPinFragment -> com.newland.payment.ui.fragment.InputPinFragment:
    int nPinLen -> i
    android.widget.TableLayout keyboard_layout -> j
    android.widget.ImageView iv0 -> k
    android.widget.ImageView iv1 -> l
    android.widget.ImageView iv2 -> m
    android.widget.ImageView iv3 -> n
    android.widget.ImageView iv4 -> o
    android.widget.ImageView iv5 -> p
    android.widget.ImageView iv6 -> q
    android.widget.ImageView iv7 -> r
    android.widget.ImageView iv8 -> s
    android.widget.ImageView iv9 -> t
    android.widget.TextView tvAmount -> u
    android.widget.ImageView ivAmount -> v
    android.widget.TextView tvCard -> w
    android.widget.ImageView ivCard -> x
    com.newland.pos.sdk.bean.PasswordBean bean -> y
    android.widget.TextView input_tip_msg -> z
    android.widget.TextView txtPassword -> A
    android.os.Handler handler -> B
    java.lang.StringBuffer buffer -> C
    int[] resImages -> a
    byte[] coordinate -> b
    byte[] func_key -> g
    byte[] coordinateReadom -> h
    java.lang.String star -> D
    java.lang.String devicesTimeOutCode -> E
    int pinMaxLen -> F
    int pinMinLen -> G
    android.app.Dialog tipDialog -> H
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initIM91date() -> r
    void initIM81date() -> s
    boolean onBackKeyDown() -> h
    void initClickEvent(android.view.View) -> a
    void onTransCancel() -> i
    void initEvent() -> b
    android.os.Handler getPinInputHandler() -> t
    void startPinInput() -> u
    void checkBean() -> v
    void onFragmentHide() -> o
    void onFragmentShow() -> p
    com.newland.pos.sdk.bean.PasswordBean getBean() -> q
    void onTimeOut() -> m
    void dismissTipDialog() -> w
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    java.lang.StringBuffer access$000(com.newland.payment.ui.fragment.InputPinFragment) -> a
    android.widget.TextView access$100(com.newland.payment.ui.fragment.InputPinFragment) -> b
    android.widget.TableLayout access$200(com.newland.payment.ui.fragment.InputPinFragment) -> c
    com.newland.pos.sdk.bean.PasswordBean access$300(com.newland.payment.ui.fragment.InputPinFragment) -> d
    int access$402(com.newland.payment.ui.fragment.InputPinFragment,int) -> a
    int access$400(com.newland.payment.ui.fragment.InputPinFragment) -> e
    int access$500(com.newland.payment.ui.fragment.InputPinFragment) -> f
    int access$408(com.newland.payment.ui.fragment.InputPinFragment) -> g
    android.os.Handler access$600(com.newland.payment.ui.fragment.InputPinFragment) -> h
    int access$410(com.newland.payment.ui.fragment.InputPinFragment) -> i
    void <clinit>() -> <clinit>
com.newland.payment.ui.fragment.InputPinFragment$1 -> com.newland.payment.ui.fragment.InputPinFragment$1:
    com.newland.payment.ui.fragment.InputPinFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputPinFragment) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.payment.ui.fragment.InputPinFragment$2 -> com.newland.payment.ui.fragment.InputPinFragment$2:
    com.newland.payment.ui.fragment.InputPinFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputPinFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.InputPinFragment$2$1 -> com.newland.payment.ui.fragment.InputPinFragment$2$1:
    com.newland.payment.ui.fragment.InputPinFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.InputPinFragment$2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.InputPinFragment$2$2 -> com.newland.payment.ui.fragment.InputPinFragment$2$2:
    com.newland.payment.ui.fragment.InputPinFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.InputPinFragment$2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.InputPinFragment$2$3 -> com.newland.payment.ui.fragment.InputPinFragment$2$3:
    com.newland.payment.ui.fragment.InputPinFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.InputPinFragment$2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.InputPinFragment$3 -> com.newland.payment.ui.fragment.InputPinFragment$3:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$PinInputMode -> a
    void <clinit>() -> <clinit>
com.newland.payment.ui.fragment.InputPinOfflineFragment -> com.newland.payment.ui.fragment.InputPinOfflineFragment:
    com.newland.payment.ui.view.KeyboardNumber keyBoardNumber -> a
    android.widget.TextView tvAmount -> b
    android.widget.TextView input_tip_msg -> g
    android.widget.TextView txtPassword -> h
    com.newland.pos.sdk.bean.PasswordBean bean -> i
    java.lang.StringBuffer buffer -> j
    java.lang.String star -> k
    android.app.Dialog tipDialog -> l
    void <init>() -> <init>
    com.newland.payment.ui.fragment.InputPinOfflineFragment newInstance(com.newland.pos.sdk.bean.PasswordBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initIM91date() -> r
    boolean onBackKeyDown() -> h
    void onFragmentHide() -> o
    void onFragmentShow() -> p
    com.newland.pos.sdk.bean.PasswordBean getBean() -> q
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    void cancelPinInput() -> s
    void dismissTipDialog() -> t
    boolean doClickBackEvent() -> d
    boolean doClickHomeEvent() -> e
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    android.widget.TextView access$000(com.newland.payment.ui.fragment.InputPinOfflineFragment) -> a
    com.newland.pos.sdk.bean.PasswordBean access$100(com.newland.payment.ui.fragment.InputPinOfflineFragment) -> b
    void access$300(com.newland.payment.ui.fragment.InputPinOfflineFragment) -> c
    void access$400(com.newland.payment.ui.fragment.InputPinOfflineFragment) -> d
com.newland.payment.ui.fragment.InputPinOfflineFragment$1 -> com.newland.payment.ui.fragment.InputPinOfflineFragment$1:
    com.newland.payment.ui.fragment.InputPinOfflineFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputPinOfflineFragment) -> <init>
    void onChangeText(java.lang.String) -> a
    void onEnter() -> a
    void onCancel() -> b
com.newland.payment.ui.fragment.InputPinOfflineFragment$3 -> com.newland.payment.ui.fragment.InputPinOfflineFragment$2:
    com.newland.payment.ui.fragment.InputPinOfflineFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputPinOfflineFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.InputPinOfflineFragment$4 -> com.newland.payment.ui.fragment.InputPinOfflineFragment$3:
    com.newland.payment.ui.fragment.InputPinOfflineFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputPinOfflineFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.InputPinOfflineFragment$5 -> com.newland.payment.ui.fragment.InputPinOfflineFragment$4:
    com.newland.payment.ui.fragment.InputPinOfflineFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.InputPinOfflineFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.LockFragment -> com.newland.payment.ui.fragment.LockFragment:
    android.widget.EditText etUser -> a
    android.widget.EditText etPassword -> b
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> g
    android.widget.TextView txtVersion -> h
    com.newland.payment.ui.listener.AbstractKeyBoardListener keyBoardListener -> i
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    boolean onBackKeyDown() -> h
    com.newland.payment.ui.listener.AbstractKeyBoardListener access$000(com.newland.payment.ui.fragment.LockFragment) -> a
com.newland.payment.ui.fragment.LockFragment$1 -> com.newland.payment.ui.fragment.LockFragment$1:
    com.newland.payment.ui.fragment.LockFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.LockFragment,android.view.View,int) -> <init>
    void onEnter() -> a
com.newland.payment.ui.fragment.LockFragment$1$1 -> com.newland.payment.ui.fragment.LockFragment$1$1:
    boolean result -> a
    com.newland.payment.ui.fragment.LockFragment$1 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.LockFragment$1) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.LockFragment$2 -> com.newland.payment.ui.fragment.LockFragment$2:
    com.newland.payment.ui.fragment.LockFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.LockFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.fragment.LockFragment$3 -> com.newland.payment.ui.fragment.LockFragment$3:
    com.newland.payment.ui.fragment.LockFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.LockFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.fragment.LoginFragment -> com.newland.payment.ui.fragment.LoginFragment:
    android.widget.TextView txtLogin -> a
    android.widget.ImageView ivRemember -> b
    android.widget.EditText etUser -> g
    android.widget.EditText etPassword -> h
    android.view.View vMain -> i
    com.newland.payment.ui.view.KeyboardNumber keyBoardNumber -> j
    android.widget.TextView txtTime -> k
    android.widget.TextView txtDate -> l
    android.widget.TextView txtWeek -> m
    android.widget.TextView txtVersion -> n
    boolean isRemember -> o
    com.newland.payment.ui.listener.AbstractKeyBoardListener keyBoardListener -> p
    int userNoMaxSize -> q
    int passwordMaxSize -> r
    com.newland.payment.mvc.service.UserService userServiceImpl -> s
    java.lang.Boolean mainManagerLoginFlag -> t
    java.lang.String userLogin -> u
    com.newland.base.CommonThread timeThread -> v
    void <init>(boolean) -> <init>
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> r
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    boolean onBackKeyDown() -> h
    void initEvent() -> b
    void refreshInputMaxLen() -> s
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void login() -> q
    void onFragmentShow() -> p
    void onFragmentHide() -> o
    void onDestroy() -> onDestroy
    android.widget.TextView access$000(com.newland.payment.ui.fragment.LoginFragment) -> a
    boolean access$100(com.newland.payment.ui.fragment.LoginFragment) -> b
    android.widget.ImageView access$200(com.newland.payment.ui.fragment.LoginFragment) -> c
    boolean access$102(com.newland.payment.ui.fragment.LoginFragment,boolean) -> a
    android.widget.EditText access$300(com.newland.payment.ui.fragment.LoginFragment) -> d
    com.newland.payment.ui.view.KeyboardNumber access$400(com.newland.payment.ui.fragment.LoginFragment) -> e
    android.widget.EditText access$500(com.newland.payment.ui.fragment.LoginFragment) -> f
    com.newland.payment.ui.listener.AbstractKeyBoardListener access$600(com.newland.payment.ui.fragment.LoginFragment) -> g
    int access$700(com.newland.payment.ui.fragment.LoginFragment) -> h
    void access$800(com.newland.payment.ui.fragment.LoginFragment) -> i
    int access$900(com.newland.payment.ui.fragment.LoginFragment) -> j
    int access$902(com.newland.payment.ui.fragment.LoginFragment,int) -> a
    com.newland.payment.mvc.service.UserService access$1000(com.newland.payment.ui.fragment.LoginFragment) -> k
    java.lang.String access$1100(com.newland.payment.ui.fragment.LoginFragment) -> l
com.newland.payment.ui.fragment.LoginFragment$1 -> com.newland.payment.ui.fragment.LoginFragment$1:
    com.newland.payment.ui.fragment.LoginFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.LoginFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.LoginFragment$2 -> com.newland.payment.ui.fragment.LoginFragment$2:
    com.newland.payment.ui.fragment.LoginFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.LoginFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.LoginFragment$3 -> com.newland.payment.ui.fragment.LoginFragment$3:
    com.newland.payment.ui.fragment.LoginFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.LoginFragment,android.view.View,int) -> <init>
    void onEnter() -> a
    void onCancel() -> b
com.newland.payment.ui.fragment.LoginFragment$4 -> com.newland.payment.ui.fragment.LoginFragment$4:
    com.newland.payment.ui.fragment.LoginFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.LoginFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.fragment.LoginFragment$5 -> com.newland.payment.ui.fragment.LoginFragment$5:
    com.newland.payment.ui.fragment.LoginFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.LoginFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.fragment.LoginFragment$6 -> com.newland.payment.ui.fragment.LoginFragment$6:
    com.newland.payment.ui.fragment.LoginFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.LoginFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.LoginFragment$7 -> com.newland.payment.ui.fragment.LoginFragment$7:
    int result -> b
    com.newland.payment.ui.fragment.LoginFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.LoginFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.LoginFragment$7$1 -> com.newland.payment.ui.fragment.LoginFragment$7$1:
    com.newland.payment.ui.fragment.LoginFragment$7 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.LoginFragment$7) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.LoginFragment$7$1$1 -> com.newland.payment.ui.fragment.LoginFragment$7$1$1:
    com.newland.payment.ui.fragment.LoginFragment$7$1 this$2 -> a
    void <init>(com.newland.payment.ui.fragment.LoginFragment$7$1) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.LoginFragment$7$2 -> com.newland.payment.ui.fragment.LoginFragment$7$2:
    com.newland.payment.ui.fragment.LoginFragment$7 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.LoginFragment$7) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.MPOSLoadKeyFragment -> com.newland.payment.ui.fragment.MPOSLoadKeyFragment:
    android.widget.TextView txtLoadKeyInfoText -> b
    boolean isStartDownload -> i
    com.newland.payment.ui.view.CommonDialog dialog -> j
    android.os.Message msg -> g
    int line -> h
    android.os.Handler handler -> k
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void backFragment() -> q
    void getDialog(int) -> b
    void onFragmentHide() -> o
    boolean onBackKeyDown() -> h
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void access$000(com.newland.payment.ui.fragment.MPOSLoadKeyFragment,int) -> a
    com.newland.payment.ui.view.CommonDialog access$100(com.newland.payment.ui.fragment.MPOSLoadKeyFragment) -> a
    void access$200(com.newland.payment.ui.fragment.MPOSLoadKeyFragment) -> b
com.newland.payment.ui.fragment.MPOSLoadKeyFragment$1 -> com.newland.payment.ui.fragment.MPOSLoadKeyFragment$1:
    com.newland.payment.ui.fragment.MPOSLoadKeyFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.MPOSLoadKeyFragment) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.payment.ui.fragment.MPOSLoadKeyFragment$2 -> com.newland.payment.ui.fragment.MPOSLoadKeyFragment$2:
    com.newland.payment.ui.fragment.MPOSLoadKeyFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.MPOSLoadKeyFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.MPOSLoadKeyFragment$3 -> com.newland.payment.ui.fragment.MPOSLoadKeyFragment$3:
    com.newland.payment.ui.fragment.MPOSLoadKeyFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.MPOSLoadKeyFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.MainFragment -> com.newland.payment.ui.fragment.MainFragment:
    android.widget.GridView gvMenu -> a
    java.util.List mainMenuItems -> b
    com.newland.payment.ui.adapter.MainMenuAdapter mainMenuAdapter -> g
    java.lang.String title -> h
    void <init>(java.lang.String,java.util.List) -> <init>
    void <init>(int,java.util.List) -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initEvent() -> b
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void setGridAdapter(java.util.List) -> a
    void setPagerAdapter(java.util.List) -> b
    void onFragmentShow() -> p
    void onFragmentHide() -> o
    void update(java.util.Observable,java.lang.Object) -> update
    void onDestroy() -> onDestroy
    java.lang.String access$000(com.newland.payment.ui.fragment.MainFragment) -> a
    java.util.List access$100(com.newland.payment.ui.fragment.MainFragment) -> b
    com.newland.payment.ui.adapter.MainMenuAdapter access$200(com.newland.payment.ui.fragment.MainFragment) -> c
com.newland.payment.ui.fragment.MainFragment$1 -> com.newland.payment.ui.fragment.MainFragment$1:
    com.newland.payment.ui.fragment.MainFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.MainFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.MenuSelectFragment -> com.newland.payment.ui.fragment.MenuSelectFragment:
    com.newland.pos.sdk.bean.MenuSelectBean bean -> g
    int timeOut -> h
    java.lang.String title -> i
    java.lang.String content -> j
    java.lang.String[] items -> k
    android.app.Dialog menu_select_dialog -> l
    android.view.View$OnClickListener listenerSure -> a
    android.view.View$OnClickListener listenerCancel -> b
    void <init>(long) -> <init>
    com.newland.payment.ui.fragment.MenuSelectFragment newInstance(com.newland.pos.sdk.bean.MenuSelectBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void onStart() -> onStart
    void onFragmentHide() -> o
    void dismissDialog() -> q
    void onStop() -> onStop
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    com.newland.pos.sdk.bean.MenuSelectBean access$000(com.newland.payment.ui.fragment.MenuSelectFragment) -> a
com.newland.payment.ui.fragment.MenuSelectFragment$1 -> com.newland.payment.ui.fragment.MenuSelectFragment$1:
    com.newland.payment.ui.fragment.MenuSelectFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.MenuSelectFragment) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.newland.payment.ui.fragment.MenuSelectFragment$2 -> com.newland.payment.ui.fragment.MenuSelectFragment$2:
    com.newland.payment.ui.fragment.MenuSelectFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.MenuSelectFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.MenuSelectFragment$3 -> com.newland.payment.ui.fragment.MenuSelectFragment$3:
    com.newland.payment.ui.fragment.MenuSelectFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.MenuSelectFragment) -> <init>
    void onClick(int) -> a
com.newland.payment.ui.fragment.MessageTipFragment -> com.newland.payment.ui.fragment.MessageTipFragment:
    com.newland.pos.sdk.bean.MessageTipBean bean -> g
    java.lang.String title -> h
    java.lang.String content -> i
    boolean canCancel -> j
    android.app.Dialog msg_tip_dialog -> k
    android.view.View$OnClickListener listenerSure -> a
    android.view.View$OnClickListener listenerCancel -> b
    void <init>(long) -> <init>
    com.newland.payment.ui.fragment.MessageTipFragment newInstance(com.newland.pos.sdk.bean.MessageTipBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void onStart() -> onStart
    void onSucess() -> j
    void onBack() -> l
    void onTimeOut() -> m
    void onFragmentHide() -> o
    void dismissDialog() -> q
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    com.newland.pos.sdk.bean.MessageTipBean access$000(com.newland.payment.ui.fragment.MessageTipFragment) -> a
com.newland.payment.ui.fragment.MessageTipFragment$1 -> com.newland.payment.ui.fragment.MessageTipFragment$1:
    com.newland.payment.ui.fragment.MessageTipFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.MessageTipFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.MessageTipFragment$2 -> com.newland.payment.ui.fragment.MessageTipFragment$2:
    com.newland.payment.ui.fragment.MessageTipFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.MessageTipFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.MposLoadFragment -> com.newland.payment.ui.fragment.MposLoadFragment:
    com.newland.payment.trans.bean.InputInfoBean bean -> a
    void <init>(long) -> <init>
    com.newland.payment.ui.fragment.MposLoadFragment newInstance(com.newland.payment.trans.bean.InputInfoBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void beginMpos() -> q
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initData() -> a
    void onDestroy() -> onDestroy
com.newland.payment.ui.fragment.NewBalanceReadCardFragment -> com.newland.payment.ui.fragment.NewBalanceReadCardFragment:
    com.newland.pos.sdk.bean.CardBean bean -> a
    java.util.List supportMode -> b
    com.newland.pos.sdk.card.CardModule cardModule -> g
    void <init>(long) -> <init>
    void <init>() -> <init>
    com.newland.payment.ui.fragment.NewBalanceReadCardFragment newInstance(com.newland.pos.sdk.bean.CardBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void ToastShow(java.lang.Object) -> ToastShow
    void onCardBack() -> onCardBack
    void onCardComfrim() -> onCardComfrim
    void onCardFail() -> onCardFail
    void onCardSucess() -> onCardSucess
    void onCardTimeOut() -> onCardTimeOut
    void onRefreshDate() -> onRefreshDate
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    boolean doClickBackEvent() -> d
    void onPause() -> onPause
    void refreshDate() -> r
    void cancelCardReader() -> s
    boolean doClickHomeEvent() -> e
    com.newland.pos.sdk.card.CardModule access$000() -> q
com.newland.payment.ui.fragment.NewBalanceReadCardFragment$1 -> com.newland.payment.ui.fragment.NewBalanceReadCardFragment$1:
    com.newland.payment.ui.fragment.NewBalanceReadCardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewBalanceReadCardFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.NewConsumeInfoFragment -> com.newland.payment.ui.fragment.NewConsumeInfoFragment:
    android.widget.TextView cardNo -> a
    android.widget.TextView cardType -> b
    android.widget.TextView cardName -> g
    android.widget.TextView balance -> h
    android.widget.TextView carNo -> i
    android.widget.TextView cardOilKind -> j
    android.widget.TextView orderOilKind -> k
    android.widget.TextView price -> l
    android.widget.TextView liter -> m
    android.widget.TextView amount -> n
    android.widget.TextView pay_amount -> o
    android.widget.TextView dicount_amount -> p
    android.widget.TextView tv_err_msg -> q
    android.widget.Button btn_do_trade -> r
    com.newland.payment.trans.bean.CommonBean commonBean -> s
    boolean isSupportPay -> t
    java.lang.String errMsg -> u
    android.view.View$OnClickListener clickListener -> v
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void <init>(com.newland.payment.trans.bean.CommonBean) -> <init>
    com.newland.payment.ui.fragment.NewConsumeInfoFragment newInstance(com.newland.payment.trans.bean.CommonBean) -> a
    void initData() -> a
    void initView(android.view.View) -> b
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void onFragmentHide() -> o
    void onDestroy() -> onDestroy
    java.lang.String getOilType(java.lang.String) -> b
    int getOilIndex(java.lang.String,java.lang.String) -> a
    boolean checkPay(java.lang.String) -> c
    java.lang.String getCardName(int) -> b
com.newland.payment.ui.fragment.NewConsumeInfoFragment$1 -> com.newland.payment.ui.fragment.NewConsumeInfoFragment$1:
    com.newland.payment.ui.fragment.NewConsumeInfoFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewConsumeInfoFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.NewInputInfoFragment -> com.newland.payment.ui.fragment.NewInputInfoFragment:
    android.widget.EditText voucherNo -> a
    android.widget.TextView inputTip -> b
    android.widget.Button next -> g
    com.newland.payment.ui.view.NumberKeyboardView numKeyboard -> h
    com.newland.payment.trans.bean.InputInfoBean bean -> i
    int maxLen -> j
    int minLen -> k
    int mode -> l
    boolean emptyFlag -> m
    java.lang.String result -> n
    void <init>(long) -> <init>
    com.newland.payment.ui.fragment.NewInputInfoFragment newInstance(com.newland.payment.trans.bean.InputInfoBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> q
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    void onSucess() -> j
    void onBack() -> l
    void onTimeOut() -> m
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void doEndThing() -> r
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.NewInputPinFragment -> com.newland.payment.ui.fragment.NewInputPinFragment:
    android.widget.LinearLayout keyboard -> j
    android.widget.TextView tip -> k
    int nPinLen -> l
    android.widget.ImageView iv0 -> m
    android.widget.ImageView iv1 -> n
    android.widget.ImageView iv2 -> o
    android.widget.ImageView iv3 -> p
    android.widget.ImageView iv4 -> q
    android.widget.ImageView iv5 -> r
    android.widget.ImageView iv6 -> s
    android.widget.ImageView iv7 -> t
    android.widget.ImageView iv8 -> u
    android.widget.ImageView iv9 -> v
    com.newland.pos.sdk.bean.PasswordBean bean -> w
    android.widget.TextView input_tip_msg -> x
    com.newland.payment.ui.view.passwordedittext.GridPasswordView inputPassword -> y
    android.os.Handler handler -> z
    java.lang.StringBuffer buffer -> A
    int[] resImages -> a
    int[] resImages_large -> b
    byte[] coordinate -> g
    byte[] func_key -> h
    byte[] coordinateReadom -> i
    java.lang.String star -> B
    java.lang.String devicesTimeOutCode -> C
    int pinMaxLen -> D
    int pinMinLen -> E
    android.app.Dialog tipDialog -> F
    void <init>() -> <init>
    com.newland.payment.ui.fragment.NewInputPinFragment newInstance(com.newland.pos.sdk.bean.PasswordBean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> r
    void initData() -> a
    void initIM91date() -> s
    void initIM81date() -> t
    boolean onBackKeyDown() -> h
    void initClickEvent(android.view.View) -> a
    void onTransCancel() -> i
    void initEvent() -> b
    android.os.Handler getPinInputHandler() -> u
    void startPinInput() -> v
    void checkBean() -> w
    void onFragmentHide() -> o
    void onFragmentShow() -> p
    com.newland.pos.sdk.bean.PasswordBean getBean() -> q
    void onTimeOut() -> m
    void dismissTipDialog() -> x
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    java.lang.StringBuffer access$000(com.newland.payment.ui.fragment.NewInputPinFragment) -> a
    com.newland.payment.ui.view.passwordedittext.GridPasswordView access$100(com.newland.payment.ui.fragment.NewInputPinFragment) -> b
    android.widget.LinearLayout access$200(com.newland.payment.ui.fragment.NewInputPinFragment) -> c
    com.newland.pos.sdk.bean.PasswordBean access$300(com.newland.payment.ui.fragment.NewInputPinFragment) -> d
    int access$402(com.newland.payment.ui.fragment.NewInputPinFragment,int) -> a
    int access$400(com.newland.payment.ui.fragment.NewInputPinFragment) -> e
    int access$500(com.newland.payment.ui.fragment.NewInputPinFragment) -> f
    int access$408(com.newland.payment.ui.fragment.NewInputPinFragment) -> g
    android.os.Handler access$600(com.newland.payment.ui.fragment.NewInputPinFragment) -> h
    int access$410(com.newland.payment.ui.fragment.NewInputPinFragment) -> i
    void <clinit>() -> <clinit>
com.newland.payment.ui.fragment.NewInputPinFragment$1 -> com.newland.payment.ui.fragment.NewInputPinFragment$1:
    com.newland.payment.ui.fragment.NewInputPinFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewInputPinFragment) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.payment.ui.fragment.NewInputPinFragment$1$1 -> com.newland.payment.ui.fragment.NewInputPinFragment$1$1:
    com.newland.payment.ui.fragment.NewInputPinFragment$1 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.NewInputPinFragment$1) -> <init>
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.newland.payment.ui.fragment.NewInputPinFragment$2 -> com.newland.payment.ui.fragment.NewInputPinFragment$2:
    com.newland.payment.ui.fragment.NewInputPinFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewInputPinFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.NewInputPinFragment$2$1 -> com.newland.payment.ui.fragment.NewInputPinFragment$2$1:
    com.newland.payment.ui.fragment.NewInputPinFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.NewInputPinFragment$2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.NewInputPinFragment$2$2 -> com.newland.payment.ui.fragment.NewInputPinFragment$2$2:
    com.newland.payment.ui.fragment.NewInputPinFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.NewInputPinFragment$2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.NewInputPinFragment$2$3 -> com.newland.payment.ui.fragment.NewInputPinFragment$2$3:
    com.newland.payment.ui.fragment.NewInputPinFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.NewInputPinFragment$2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.NewInputPinFragment$3 -> com.newland.payment.ui.fragment.NewInputPinFragment$3:
    int[] $SwitchMap$com$newland$pos$sdk$common$TransConst$PinInputMode -> a
    void <clinit>() -> <clinit>
com.newland.payment.ui.fragment.NewRefundReadCardFragment -> com.newland.payment.ui.fragment.NewRefundReadCardFragment:
    android.widget.EditText inputReferNo -> a
    android.widget.EditText inputAmount -> b
    android.widget.TextView cardNo -> g
    android.widget.EditText inputDate -> h
    com.newland.payment.trans.bean.NewRefundBean refundBean -> i
    com.newland.pos.sdk.bean.CardBean cardBean -> j
    android.os.Handler handler -> k
    java.util.List supportMode -> l
    com.newland.pos.sdk.card.CardModule cardModule -> m
    void <init>(long) -> <init>
    void <init>() -> <init>
    com.newland.payment.ui.fragment.NewRefundReadCardFragment newInstance(com.newland.payment.trans.bean.NewRefundBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> r
    void ToastShow(java.lang.Object) -> ToastShow
    void onCardBack() -> onCardBack
    void onCardComfrim() -> onCardComfrim
    void onCardFail() -> onCardFail
    void onCardSucess() -> onCardSucess
    void onCardTimeOut() -> onCardTimeOut
    void onRefreshDate() -> onRefreshDate
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    boolean doClickBackEvent() -> d
    void onPause() -> onPause
    void refreshDate() -> s
    android.os.Handler getCardInputHandler() -> t
    void cancelCardReader() -> u
    boolean doClickHomeEvent() -> e
    boolean checkInput() -> v
    boolean access$200(com.newland.payment.ui.fragment.NewRefundReadCardFragment) -> a
    com.newland.pos.sdk.card.CardModule access$300() -> q
    com.newland.pos.sdk.bean.CardBean access$400(com.newland.payment.ui.fragment.NewRefundReadCardFragment) -> b
    android.widget.EditText access$500(com.newland.payment.ui.fragment.NewRefundReadCardFragment) -> c
    android.widget.EditText access$600(com.newland.payment.ui.fragment.NewRefundReadCardFragment) -> d
com.newland.payment.ui.fragment.NewRefundReadCardFragment$1 -> com.newland.payment.ui.fragment.NewRefundReadCardFragment$1:
    com.newland.payment.ui.fragment.NewRefundReadCardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewRefundReadCardFragment) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.payment.ui.fragment.NewRefundReadCardFragment$2 -> com.newland.payment.ui.fragment.NewRefundReadCardFragment$2:
    com.newland.payment.ui.fragment.NewRefundReadCardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewRefundReadCardFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.NewRefundReadCardFragment$InputAmountFilter -> com.newland.payment.ui.fragment.NewRefundReadCardFragment$a:
    com.newland.payment.ui.fragment.NewRefundReadCardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewRefundReadCardFragment) -> <init>
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    void <init>(com.newland.payment.ui.fragment.NewRefundReadCardFragment,com.newland.payment.ui.fragment.NewRefundReadCardFragment$1) -> <init>
com.newland.payment.ui.fragment.NewRefundReadCardFragment$InputWatcher -> com.newland.payment.ui.fragment.NewRefundReadCardFragment$b:
    com.newland.payment.ui.fragment.NewRefundReadCardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewRefundReadCardFragment) -> <init>
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void <init>(com.newland.payment.ui.fragment.NewRefundReadCardFragment,com.newland.payment.ui.fragment.NewRefundReadCardFragment$1) -> <init>
com.newland.payment.ui.fragment.NewSaleReadCardFragment -> com.newland.payment.ui.fragment.NewSaleReadCardFragment:
    android.widget.TextView oilKind -> a
    android.widget.TextView price -> b
    android.widget.TextView liter -> g
    android.widget.TextView amount -> h
    com.newland.pos.sdk.bean.CardBean bean -> i
    com.newland.payment.trans.bean.PubBean pubBean -> j
    android.os.Handler handler -> k
    java.util.List supportMode -> l
    com.newland.pos.sdk.card.CardModule cardModule -> m
    void <init>(long) -> <init>
    void <init>() -> <init>
    com.newland.payment.ui.fragment.NewSaleReadCardFragment newInstance(com.newland.pos.sdk.bean.CardBean,com.newland.payment.trans.bean.PubBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> r
    void ToastShow(java.lang.Object) -> ToastShow
    void onCardBack() -> onCardBack
    void onCardComfrim() -> onCardComfrim
    void onCardFail() -> onCardFail
    void onCardSucess() -> onCardSucess
    void onCardTimeOut() -> onCardTimeOut
    void onRefreshDate() -> onRefreshDate
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    boolean doClickBackEvent() -> d
    void onPause() -> onPause
    void refreshDate() -> s
    android.os.Handler getCardInputHandler() -> t
    void cancelCardReader() -> u
    boolean doClickHomeEvent() -> e
    com.newland.pos.sdk.bean.CardBean access$000(com.newland.payment.ui.fragment.NewSaleReadCardFragment) -> a
    com.newland.pos.sdk.card.CardModule access$100() -> q
com.newland.payment.ui.fragment.NewSaleReadCardFragment$1 -> com.newland.payment.ui.fragment.NewSaleReadCardFragment$1:
    com.newland.payment.ui.fragment.NewSaleReadCardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewSaleReadCardFragment) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.payment.ui.fragment.NewSaleReadCardFragment$2 -> com.newland.payment.ui.fragment.NewSaleReadCardFragment$2:
    com.newland.payment.ui.fragment.NewSaleReadCardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewSaleReadCardFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment -> com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment:
    android.widget.TextView voucherNo -> a
    android.widget.TextView amount -> b
    android.widget.TextView cardNo -> g
    com.newland.pos.sdk.bean.CardBean bean -> h
    android.os.Handler handler -> i
    java.util.List supportMode -> j
    com.newland.payment.trans.bean.PubBean pubBean -> k
    com.newland.pos.sdk.card.CardModule cardModule -> l
    void <init>(com.newland.payment.trans.bean.PubBean,long) -> <init>
    void <init>(com.newland.payment.trans.bean.PubBean) -> <init>
    com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment newInstance(com.newland.pos.sdk.bean.CardBean,com.newland.payment.trans.bean.PubBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> r
    void ToastShow(java.lang.Object) -> ToastShow
    void onCardBack() -> onCardBack
    void onCardComfrim() -> onCardComfrim
    void onCardFail() -> onCardFail
    void onCardSucess() -> onCardSucess
    void onCardTimeOut() -> onCardTimeOut
    void onRefreshDate() -> onRefreshDate
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    boolean doClickBackEvent() -> d
    void onPause() -> onPause
    void refreshDate() -> s
    android.os.Handler getCardInputHandler() -> t
    void cancelCardReader() -> u
    boolean doClickHomeEvent() -> e
    com.newland.pos.sdk.bean.CardBean access$000(com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment) -> a
    com.newland.pos.sdk.card.CardModule access$100() -> q
com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment$1 -> com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment$1:
    com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment$2 -> com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment$2:
    com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.NewVoidSaleReadCardFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.OperatorChangePwdFragment -> com.newland.payment.ui.fragment.OperatorChangePwdFragment:
    android.widget.EditText etNo -> a
    android.widget.EditText etOldPwd -> b
    android.widget.EditText etNewPwd1 -> g
    android.widget.EditText etNewPwd2 -> h
    java.lang.String noString -> k
    java.lang.String oldString -> l
    java.lang.String new1String -> m
    java.lang.String new2String -> n
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> i
    com.newland.payment.ui.listener.AbstractKeyBoardListener listener -> o
    com.newland.payment.mvc.service.impl.UserServiceImpl serviceImpl -> j
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    com.newland.payment.ui.fragment.OperatorChangePwdFragment newInstance() -> q
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    java.lang.String access$002(com.newland.payment.ui.fragment.OperatorChangePwdFragment,java.lang.String) -> a
    java.lang.String access$102(com.newland.payment.ui.fragment.OperatorChangePwdFragment,java.lang.String) -> b
    java.lang.String access$202(com.newland.payment.ui.fragment.OperatorChangePwdFragment,java.lang.String) -> c
    java.lang.String access$302(com.newland.payment.ui.fragment.OperatorChangePwdFragment,java.lang.String) -> d
    java.lang.String access$300(com.newland.payment.ui.fragment.OperatorChangePwdFragment) -> a
    java.lang.String access$200(com.newland.payment.ui.fragment.OperatorChangePwdFragment) -> b
    java.lang.String access$100(com.newland.payment.ui.fragment.OperatorChangePwdFragment) -> c
    java.lang.String access$000(com.newland.payment.ui.fragment.OperatorChangePwdFragment) -> d
    com.newland.payment.ui.listener.AbstractKeyBoardListener access$400(com.newland.payment.ui.fragment.OperatorChangePwdFragment) -> e
com.newland.payment.ui.fragment.OperatorChangePwdFragment$1 -> com.newland.payment.ui.fragment.OperatorChangePwdFragment$1:
    com.newland.payment.ui.fragment.OperatorChangePwdFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorChangePwdFragment,android.view.View,int) -> <init>
    void onEnter() -> a
com.newland.payment.ui.fragment.OperatorChangePwdFragment$1$1 -> com.newland.payment.ui.fragment.OperatorChangePwdFragment$1$1:
    int result -> a
    com.newland.payment.ui.fragment.OperatorChangePwdFragment$1 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.OperatorChangePwdFragment$1) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.OperatorChangePwdFragment$2 -> com.newland.payment.ui.fragment.OperatorChangePwdFragment$2:
    com.newland.payment.ui.fragment.OperatorChangePwdFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorChangePwdFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.fragment.OperatorChangePwdFragment$3 -> com.newland.payment.ui.fragment.OperatorChangePwdFragment$3:
    com.newland.payment.ui.fragment.OperatorChangePwdFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorChangePwdFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.fragment.OperatorChangePwdFragment$4 -> com.newland.payment.ui.fragment.OperatorChangePwdFragment$4:
    com.newland.payment.ui.fragment.OperatorChangePwdFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorChangePwdFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.fragment.OperatorDelAddFragment -> com.newland.payment.ui.fragment.OperatorDelAddFragment:
    com.newland.payment.mvc.service.impl.UserServiceImpl serviceImpl -> a
    com.newland.payment.ui.listener.AbstractKeyBoardListener listener -> l
    android.widget.EditText numberInputView -> b
    android.widget.EditText passwordInputView -> g
    com.newland.payment.ui.view.KeyboardNumber keyboardPassword -> h
    android.widget.LinearLayout linearLayout -> i
    android.widget.ImageView pwdLine -> j
    java.lang.String operatorNo -> m
    java.lang.String operatorPassword -> n
    java.lang.Boolean isAdd -> o
    java.lang.Boolean isHasNo -> p
    com.newland.payment.mvc.model.User user -> q
    java.util.List users -> k
    void <init>() -> <init>
    com.newland.payment.ui.fragment.OperatorDelAddFragment newInstance(java.lang.Boolean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void doUserAddDel() -> q
    java.lang.Boolean IsHasNum(java.lang.String) -> b
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    java.lang.Boolean access$000(com.newland.payment.ui.fragment.OperatorDelAddFragment) -> a
    java.lang.String access$102(com.newland.payment.ui.fragment.OperatorDelAddFragment,java.lang.String) -> a
    java.lang.String access$202(com.newland.payment.ui.fragment.OperatorDelAddFragment,java.lang.String) -> b
    java.lang.String access$100(com.newland.payment.ui.fragment.OperatorDelAddFragment) -> b
    java.lang.String access$200(com.newland.payment.ui.fragment.OperatorDelAddFragment) -> c
    com.newland.payment.ui.listener.AbstractKeyBoardListener access$300(com.newland.payment.ui.fragment.OperatorDelAddFragment) -> d
    com.newland.payment.mvc.model.User access$400(com.newland.payment.ui.fragment.OperatorDelAddFragment) -> e
com.newland.payment.ui.fragment.OperatorDelAddFragment$1 -> com.newland.payment.ui.fragment.OperatorDelAddFragment$1:
    com.newland.payment.ui.fragment.OperatorDelAddFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorDelAddFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.OperatorDelAddFragment$2 -> com.newland.payment.ui.fragment.OperatorDelAddFragment$2:
    com.newland.payment.ui.fragment.OperatorDelAddFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorDelAddFragment,int,android.view.View) -> <init>
    void onEnter() -> a
    void onCancel() -> b
com.newland.payment.ui.fragment.OperatorDelAddFragment$3 -> com.newland.payment.ui.fragment.OperatorDelAddFragment$3:
    com.newland.payment.ui.fragment.OperatorDelAddFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorDelAddFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.fragment.OperatorDelAddFragment$4 -> com.newland.payment.ui.fragment.OperatorDelAddFragment$4:
    com.newland.payment.ui.fragment.OperatorDelAddFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorDelAddFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.fragment.OperatorDelAddFragment$5 -> com.newland.payment.ui.fragment.OperatorDelAddFragment$5:
    com.newland.payment.ui.fragment.OperatorDelAddFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorDelAddFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.OperatorDelAddFragment$6 -> com.newland.payment.ui.fragment.OperatorDelAddFragment$6:
    com.newland.payment.ui.fragment.OperatorDelAddFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorDelAddFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.OperatorManagementFragment -> com.newland.payment.ui.fragment.OperatorManagementFragment:
    android.widget.TextView btnOperatorChangePwd -> a
    java.lang.Boolean flag -> b
    java.lang.String passwordInput -> g
    java.lang.String oldPassword -> i
    java.lang.String newPassword -> j
    int step -> k
    com.newland.payment.ui.view.OperatorPasswordDialog dialogMain -> l
    com.newland.payment.ui.view.OperatorPasswordDialog dialogAddOperator -> m
    com.newland.payment.ui.view.OperatorPasswordDialog dialogDelOperator -> n
    com.newland.payment.ui.view.OperatorPasswordDialog$InputEventListener inputEventListener -> o
    com.newland.payment.mvc.service.impl.UserServiceImpl serviceImpl -> h
    void <init>(boolean) -> <init>
    com.newland.payment.ui.fragment.OperatorManagementFragment newInstance(boolean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void onFragmentHide() -> o
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    int access$000(com.newland.payment.ui.fragment.OperatorManagementFragment) -> a
    int access$002(com.newland.payment.ui.fragment.OperatorManagementFragment,int) -> a
    java.lang.String access$102(com.newland.payment.ui.fragment.OperatorManagementFragment,java.lang.String) -> a
    com.newland.payment.ui.view.OperatorPasswordDialog access$200(com.newland.payment.ui.fragment.OperatorManagementFragment) -> b
    java.lang.String access$302(com.newland.payment.ui.fragment.OperatorManagementFragment,java.lang.String) -> b
    java.lang.String access$100(com.newland.payment.ui.fragment.OperatorManagementFragment) -> c
    java.lang.String access$300(com.newland.payment.ui.fragment.OperatorManagementFragment) -> d
    com.newland.payment.ui.view.OperatorPasswordDialog access$400(com.newland.payment.ui.fragment.OperatorManagementFragment) -> e
    com.newland.payment.ui.view.OperatorPasswordDialog access$500(com.newland.payment.ui.fragment.OperatorManagementFragment) -> f
    void <clinit>() -> <clinit>
com.newland.payment.ui.fragment.OperatorManagementFragment$1 -> com.newland.payment.ui.fragment.OperatorManagementFragment$1:
    com.newland.payment.ui.fragment.OperatorManagementFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorManagementFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.OperatorManagementFragment$2 -> com.newland.payment.ui.fragment.OperatorManagementFragment$2:
    com.newland.payment.ui.fragment.OperatorManagementFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorManagementFragment) -> <init>
    void onConfirm(android.app.Dialog,java.lang.String) -> a
    void onCancel() -> a
com.newland.payment.ui.fragment.OperatorManagementFragment$2$1 -> com.newland.payment.ui.fragment.OperatorManagementFragment$2$1:
    int result -> a
    java.lang.String val$value -> b
    com.newland.payment.ui.fragment.OperatorManagementFragment$2 this$1 -> c
    void <init>(com.newland.payment.ui.fragment.OperatorManagementFragment$2,java.lang.String) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.OperatorManagementFragment$2$2 -> com.newland.payment.ui.fragment.OperatorManagementFragment$2$2:
    int result -> a
    com.newland.payment.ui.fragment.OperatorManagementFragment$2 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.OperatorManagementFragment$2) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.OperatorManagementFragment$3 -> com.newland.payment.ui.fragment.OperatorManagementFragment$3:
    com.newland.payment.ui.fragment.OperatorManagementFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorManagementFragment) -> <init>
    void onConfirm(android.app.Dialog,java.lang.String) -> a
    void onCancel() -> a
com.newland.payment.ui.fragment.OperatorManagementFragment$3$1 -> com.newland.payment.ui.fragment.OperatorManagementFragment$3$1:
    int result -> a
    java.lang.String val$value -> b
    com.newland.payment.ui.fragment.OperatorManagementFragment$3 this$1 -> c
    void <init>(com.newland.payment.ui.fragment.OperatorManagementFragment$3,java.lang.String) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.OperatorManagementFragment$4 -> com.newland.payment.ui.fragment.OperatorManagementFragment$4:
    com.newland.payment.ui.fragment.OperatorManagementFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorManagementFragment) -> <init>
    void onConfirm(android.app.Dialog,java.lang.String) -> a
    void onCancel() -> a
com.newland.payment.ui.fragment.OperatorManagementFragment$4$1 -> com.newland.payment.ui.fragment.OperatorManagementFragment$4$1:
    int result -> a
    java.lang.String val$value -> b
    com.newland.payment.ui.fragment.OperatorManagementFragment$4 this$1 -> c
    void <init>(com.newland.payment.ui.fragment.OperatorManagementFragment$4,java.lang.String) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.OperatorManagementFragment$5 -> com.newland.payment.ui.fragment.OperatorManagementFragment$5:
    java.util.List users -> a
    java.util.ArrayList val$userNoList -> b
    com.newland.payment.ui.fragment.OperatorManagementFragment this$0 -> c
    void <init>(com.newland.payment.ui.fragment.OperatorManagementFragment,java.util.ArrayList) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.OperatorPasswordFragment -> com.newland.payment.ui.fragment.OperatorPasswordFragment:
    com.newland.payment.trans.bean.CommonBean bean -> g
    com.newland.payment.ui.view.OperatorPasswordFragmentDialog oper_dialog -> h
    android.view.View$OnClickListener listenerSure -> a
    android.view.View$OnClickListener listenerCancel -> b
    void <init>(long) -> <init>
    com.newland.payment.ui.fragment.OperatorPasswordFragment newInstance(com.newland.payment.trans.bean.CommonBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void onStart() -> onStart
    void dismissDialog() -> q
    void onSucess() -> j
    void onBack() -> l
    void onTimeOut() -> m
    void onFragmentHide() -> o
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    com.newland.payment.trans.bean.CommonBean access$000(com.newland.payment.ui.fragment.OperatorPasswordFragment) -> a
com.newland.payment.ui.fragment.OperatorPasswordFragment$1 -> com.newland.payment.ui.fragment.OperatorPasswordFragment$1:
    com.newland.payment.ui.fragment.OperatorPasswordFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorPasswordFragment) -> <init>
    void onConfirm(android.app.Dialog,java.lang.String) -> a
    void onCancel() -> a
com.newland.payment.ui.fragment.OperatorPasswordFragment$2 -> com.newland.payment.ui.fragment.OperatorPasswordFragment$2:
    com.newland.payment.ui.fragment.OperatorPasswordFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.OperatorPasswordFragment) -> <init>
    boolean onHome() -> a
    boolean onBack() -> b
com.newland.payment.ui.fragment.PbocLogItemFragment -> com.newland.payment.ui.fragment.PbocLogItemFragment:
    android.widget.TextView txtMerchantName -> a
    android.widget.TextView txtTransType -> b
    android.widget.TextView txtCountryCode -> g
    android.widget.TextView txtCurrencyCode -> h
    android.widget.TextView txtDate -> i
    android.widget.TextView txtAmount -> j
    android.widget.TextView txtAct -> k
    android.widget.TextView txtOtherAmount -> l
    java.lang.String strMerchantName -> m
    java.lang.String strTransType -> n
    java.lang.String strCountryCode -> o
    java.lang.String strCurrencyCode -> p
    java.lang.String strDate -> q
    java.lang.String strAmount -> r
    java.lang.String strOtherAmount -> s
    java.lang.String strAct -> t
    com.newland.pos.sdk.bean.PbocDetailBean selfBean -> u
    com.newland.pos.sdk.bean.BaseBean parentBean -> v
    void <init>(com.newland.pos.sdk.bean.PbocDetailBean,com.newland.pos.sdk.bean.BaseBean) -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    java.lang.String getTransType(java.lang.String) -> b
com.newland.payment.ui.fragment.PbocLogListFragment -> com.newland.payment.ui.fragment.PbocLogListFragment:
    android.widget.TextView txtBackPage -> a
    android.widget.TextView txtNextPage -> b
    android.widget.TextView txtPrint -> g
    android.support.v4.view.ViewPager viewPager -> h
    android.widget.TextView txtSearchWatersResult -> i
    android.widget.LinearLayout layout -> j
    java.util.List beans -> k
    android.support.v4.app.FragmentPagerAdapter pbocLogListAdapter -> l
    com.newland.payment.trans.bean.CommonBean bean -> m
    void <init>(long) -> <init>
    com.newland.payment.ui.fragment.PbocLogListFragment newInstance(com.newland.payment.trans.bean.CommonBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    android.support.v4.app.FragmentPagerAdapter access$000(com.newland.payment.ui.fragment.PbocLogListFragment) -> a
    java.util.List access$100(com.newland.payment.ui.fragment.PbocLogListFragment) -> b
    android.support.v4.app.FragmentPagerAdapter access$002(com.newland.payment.ui.fragment.PbocLogListFragment,android.support.v4.app.FragmentPagerAdapter) -> a
    com.newland.payment.trans.bean.CommonBean access$200(com.newland.payment.ui.fragment.PbocLogListFragment) -> c
com.newland.payment.ui.fragment.PbocLogListFragment$1 -> com.newland.payment.ui.fragment.PbocLogListFragment$1:
    com.newland.payment.ui.fragment.PbocLogListFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PbocLogListFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.PbocLogListFragment$1$1 -> com.newland.payment.ui.fragment.PbocLogListFragment$1$1:
    com.newland.payment.ui.fragment.PbocLogListFragment$1 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PbocLogListFragment$1,android.support.v4.app.FragmentManager) -> <init>
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.newland.payment.ui.fragment.PbocLogListFragment$2 -> com.newland.payment.ui.fragment.PbocLogListFragment$2:
    com.newland.payment.ui.fragment.PbocLogListFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PbocLogListFragment) -> <init>
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.newland.payment.ui.fragment.PrintFragment -> com.newland.payment.ui.fragment.PrintFragment:
    android.app.Dialog progressCountDialog -> a
    android.widget.TextView tvTips -> b
    android.view.View rootView -> g
    android.app.Dialog dialog -> h
    android.app.AlertDialog alertDialog -> i
    com.newland.payment.trans.bean.PrintBean bean -> j
    java.lang.String tipContent -> k
    com.newland.payment.common.Const$PrintStyleConstEnum printType -> l
    com.newland.payment.mvc.model.Water mWater -> m
    int printVoucherCount -> n
    java.lang.String tipMessage -> o
    boolean isShow -> p
    boolean isWait -> q
    android.os.Handler handler -> r
    com.newland.payment.ui.fragment.PrintFragment newInstance(com.newland.payment.trans.bean.PrintBean) -> a
    com.newland.payment.ui.fragment.PrintFragment newInstance(com.newland.payment.common.Const$PrintStyleConstEnum,java.lang.String,com.newland.payment.mvc.model.Water) -> a
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    void onFragmentHide() -> o
    com.newland.payment.trans.bean.PrintBean getBean() -> q
    void printEnd(boolean) -> a
    void printVoucher(java.lang.String) -> b
    void checkPrintVoucherStatus(int,com.newland.pos.sdk.device.PrintModule,java.lang.String) -> a
    void print(java.lang.String) -> c
    void checkPrintStatus(int,com.newland.pos.sdk.device.PrintModule,java.lang.String) -> b
    void lockData(java.lang.String) -> d
    void unLockData(java.lang.String,boolean) -> a
    void showPrintToast(java.lang.String) -> e
    java.lang.String getPrintWaterData(com.newland.payment.mvc.model.Water,com.newland.payment.common.PrintType$PrintWaterType,boolean) -> a
    java.lang.String getTransControlData(android.content.Context) -> a
    java.lang.String getSysControlData(android.content.Context) -> f
    java.lang.String getOtherControlData(android.content.Context) -> b
    java.lang.String getCommunicateControlData(android.content.Context) -> c
    java.lang.String getPrintSettleData(android.content.Context) -> g
    java.lang.String getPrintTotalData(android.content.Context) -> h
    java.lang.String getPrintMerchantInfoData(android.content.Context) -> d
    java.lang.String getPrintVertionInfoData(android.content.Context) -> e
    java.lang.String getPrintFailWaterData(java.lang.Boolean,java.lang.Boolean,com.newland.payment.mvc.model.Water,int) -> a
    java.lang.String getPrintAllWaterData(java.lang.Boolean,java.lang.Boolean,com.newland.payment.mvc.model.Water) -> a
    void printVouchers() -> r
    java.lang.String printSingleVoucher(android.content.Context,com.newland.payment.mvc.model.Water,com.newland.payment.common.PrintType$PrintWaterType) -> a
    void printTransDetail(android.app.Activity) -> b
    void printFTransDetail(android.app.Activity) -> a
    java.lang.StringBuffer getFwaterBuffer(java.util.List) -> a
    void initCountProgress() -> s
    void showCountProgress(java.lang.String) -> f
    void dismissDialog() -> t
    void printVoucherAfterFirst() -> u
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    android.app.AlertDialog access$002(com.newland.payment.ui.fragment.PrintFragment,android.app.AlertDialog) -> a
    android.app.AlertDialog access$000(com.newland.payment.ui.fragment.PrintFragment) -> a
    boolean access$102(com.newland.payment.ui.fragment.PrintFragment,boolean) -> a
    void access$200(com.newland.payment.ui.fragment.PrintFragment) -> b
    java.lang.String access$300(com.newland.payment.ui.fragment.PrintFragment,android.content.Context) -> a
    void access$400(com.newland.payment.ui.fragment.PrintFragment,java.lang.String) -> a
    boolean access$502(com.newland.payment.ui.fragment.PrintFragment,boolean) -> b
    void access$600(com.newland.payment.ui.fragment.PrintFragment,boolean) -> c
    void access$700(com.newland.payment.ui.fragment.PrintFragment,android.app.Activity) -> a
    java.lang.String access$800(com.newland.payment.ui.fragment.PrintFragment,android.content.Context) -> b
    java.lang.String access$900(com.newland.payment.ui.fragment.PrintFragment,android.content.Context) -> c
    android.app.Dialog access$1002(com.newland.payment.ui.fragment.PrintFragment,android.app.Dialog) -> a
    android.app.Dialog access$1000(com.newland.payment.ui.fragment.PrintFragment) -> c
    void access$1100(com.newland.payment.ui.fragment.PrintFragment,java.lang.String) -> b
    void access$1200(com.newland.payment.ui.fragment.PrintFragment,java.lang.String) -> c
    java.lang.String access$1300(com.newland.payment.ui.fragment.PrintFragment) -> d
    int access$1400(com.newland.payment.ui.fragment.PrintFragment) -> e
    android.os.Handler access$1500(com.newland.payment.ui.fragment.PrintFragment) -> f
    com.newland.payment.mvc.model.Water access$1600(com.newland.payment.ui.fragment.PrintFragment) -> g
    java.lang.String access$1700(com.newland.payment.ui.fragment.PrintFragment,android.content.Context,com.newland.payment.mvc.model.Water,com.newland.payment.common.PrintType$PrintWaterType) -> a
    int access$1410(com.newland.payment.ui.fragment.PrintFragment) -> h
    android.app.Dialog access$1800(com.newland.payment.ui.fragment.PrintFragment) -> i
    void access$1900(com.newland.payment.ui.fragment.PrintFragment) -> j
    android.widget.TextView access$2000(com.newland.payment.ui.fragment.PrintFragment) -> k
    android.app.Dialog access$1802(com.newland.payment.ui.fragment.PrintFragment,android.app.Dialog) -> b
com.newland.payment.ui.fragment.PrintFragment$1 -> com.newland.payment.ui.fragment.PrintFragment$1:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.payment.ui.fragment.PrintFragment$1$1 -> com.newland.payment.ui.fragment.PrintFragment$1$1:
    com.newland.payment.ui.fragment.PrintFragment$1 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$1) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.PrintFragment$1$1$1 -> com.newland.payment.ui.fragment.PrintFragment$1$1$1:
    com.newland.payment.ui.fragment.PrintFragment$1$1 this$2 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$1$1) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$10 -> com.newland.payment.ui.fragment.PrintFragment$2:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$11 -> com.newland.payment.ui.fragment.PrintFragment$3:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$12 -> com.newland.payment.ui.fragment.PrintFragment$4:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$13 -> com.newland.payment.ui.fragment.PrintFragment$5:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$14 -> com.newland.payment.ui.fragment.PrintFragment$6:
    java.lang.String val$data -> a
    com.newland.payment.ui.fragment.PrintFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.PrintFragment,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$14$1 -> com.newland.payment.ui.fragment.PrintFragment$6$1:
    com.newland.payment.ui.fragment.PrintFragment$14 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$14) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.PrintFragment$14$1$1 -> com.newland.payment.ui.fragment.PrintFragment$6$1$1:
    com.newland.payment.ui.fragment.PrintFragment$14$1 this$2 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$14$1) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$14$2 -> com.newland.payment.ui.fragment.PrintFragment$6$2:
    com.newland.payment.ui.fragment.PrintFragment$14 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$14) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.PrintFragment$15 -> com.newland.payment.ui.fragment.PrintFragment$7:
    java.lang.String val$data -> a
    com.newland.payment.ui.fragment.PrintFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.PrintFragment,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$15$1 -> com.newland.payment.ui.fragment.PrintFragment$7$1:
    com.newland.payment.ui.fragment.PrintFragment$15 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$15) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.PrintFragment$15$1$1 -> com.newland.payment.ui.fragment.PrintFragment$7$1$1:
    com.newland.payment.ui.fragment.PrintFragment$15$1 this$2 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$15$1) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$15$2 -> com.newland.payment.ui.fragment.PrintFragment$7$2:
    com.newland.payment.ui.fragment.PrintFragment$15 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$15) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.PrintFragment$15$2$1 -> com.newland.payment.ui.fragment.PrintFragment$7$2$1:
    com.newland.payment.ui.fragment.PrintFragment$15$2 this$2 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$15$2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$16 -> com.newland.payment.ui.fragment.PrintFragment$8:
    java.lang.String val$data -> a
    com.newland.payment.ui.fragment.PrintFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.PrintFragment,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$16$1 -> com.newland.payment.ui.fragment.PrintFragment$8$1:
    com.newland.payment.ui.fragment.PrintFragment$16 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$16) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.PrintFragment$16$1$1 -> com.newland.payment.ui.fragment.PrintFragment$8$1$1:
    com.newland.payment.ui.fragment.PrintFragment$16$1 this$2 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$16$1) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$16$2 -> com.newland.payment.ui.fragment.PrintFragment$8$2:
    com.newland.payment.ui.fragment.PrintFragment$16 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$16) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.PrintFragment$17 -> com.newland.payment.ui.fragment.PrintFragment$9:
    java.lang.String val$data -> a
    com.newland.payment.ui.fragment.PrintFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.PrintFragment,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$17$1 -> com.newland.payment.ui.fragment.PrintFragment$9$1:
    com.newland.payment.ui.fragment.PrintFragment$17 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$17) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.PrintFragment$17$1$1 -> com.newland.payment.ui.fragment.PrintFragment$9$1$1:
    com.newland.payment.ui.fragment.PrintFragment$17$1 this$2 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$17$1) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$17$2 -> com.newland.payment.ui.fragment.PrintFragment$9$2:
    com.newland.payment.ui.fragment.PrintFragment$17 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$17) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.PrintFragment$17$2$1 -> com.newland.payment.ui.fragment.PrintFragment$9$2$1:
    com.newland.payment.ui.fragment.PrintFragment$17$2 this$2 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$17$2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$18 -> com.newland.payment.ui.fragment.PrintFragment$10:
    java.lang.String val$tip -> a
    com.newland.payment.ui.fragment.PrintFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.PrintFragment,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$19 -> com.newland.payment.ui.fragment.PrintFragment$11:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.PrintFragment$2 -> com.newland.payment.ui.fragment.PrintFragment$12:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$2$1 -> com.newland.payment.ui.fragment.PrintFragment$12$1:
    com.newland.payment.ui.fragment.PrintFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment$2) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$20 -> com.newland.payment.ui.fragment.PrintFragment$13:
    java.lang.String val$printCmdData -> a
    com.newland.payment.ui.fragment.PrintFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.PrintFragment,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$21 -> com.newland.payment.ui.fragment.PrintFragment$14:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.newland.payment.ui.fragment.PrintFragment$22 -> com.newland.payment.ui.fragment.PrintFragment$15:
    java.lang.String val$msg -> a
    com.newland.payment.ui.fragment.PrintFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.PrintFragment,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$23 -> com.newland.payment.ui.fragment.PrintFragment$16:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$25 -> com.newland.payment.ui.fragment.PrintFragment$17:
    int[] $SwitchMap$com$newland$payment$common$Const$PrintStyleConstEnum -> a
    void <clinit>() -> <clinit>
com.newland.payment.ui.fragment.PrintFragment$3 -> com.newland.payment.ui.fragment.PrintFragment$18:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$4 -> com.newland.payment.ui.fragment.PrintFragment$19:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$5 -> com.newland.payment.ui.fragment.PrintFragment$20:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$6 -> com.newland.payment.ui.fragment.PrintFragment$21:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$7 -> com.newland.payment.ui.fragment.PrintFragment$22:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$8 -> com.newland.payment.ui.fragment.PrintFragment$23:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.PrintFragment$9 -> com.newland.payment.ui.fragment.PrintFragment$24:
    com.newland.payment.ui.fragment.PrintFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.PrintFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.ProgressFragment -> com.newland.payment.ui.fragment.ProgressFragment:
    android.app.Dialog progressCountDialog -> a
    android.widget.TextView tvTips -> b
    android.view.View rootView -> g
    java.lang.String msg -> h
    void <init>() -> <init>
    com.newland.payment.ui.fragment.ProgressFragment newInstance(java.lang.String) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initCountProgress() -> q
    void showCountProgress(java.lang.String) -> c
    void dismissDialog() -> r
    void initEvent() -> b
    void onFragmentHide() -> o
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    android.app.Dialog access$000(com.newland.payment.ui.fragment.ProgressFragment) -> a
    void access$100(com.newland.payment.ui.fragment.ProgressFragment) -> b
    android.widget.TextView access$200(com.newland.payment.ui.fragment.ProgressFragment) -> c
    android.app.Dialog access$002(com.newland.payment.ui.fragment.ProgressFragment,android.app.Dialog) -> a
com.newland.payment.ui.fragment.ProgressFragment$1 -> com.newland.payment.ui.fragment.ProgressFragment$1:
    com.newland.payment.ui.fragment.ProgressFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ProgressFragment) -> <init>
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.newland.payment.ui.fragment.ProgressFragment$2 -> com.newland.payment.ui.fragment.ProgressFragment$2:
    java.lang.String val$msg -> a
    com.newland.payment.ui.fragment.ProgressFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.ProgressFragment,java.lang.String) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.ProgressFragment$3 -> com.newland.payment.ui.fragment.ProgressFragment$3:
    com.newland.payment.ui.fragment.ProgressFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ProgressFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.SelfCheckFragment -> com.newland.payment.ui.fragment.SelfCheckFragment:
    com.newland.payment.ui.view.CheckView cvCommunicationPort -> a
    com.newland.payment.ui.view.CheckView cvIcCard -> b
    com.newland.payment.ui.view.CheckView cvKeyboard -> g
    com.newland.payment.ui.view.CheckView cvPrint -> h
    java.util.List checkViews -> i
    com.newland.payment.ui.view.CheckView checkView -> j
    com.newland.payment.ui.fragment.SelfCheckFragment$InnerObject checkObject -> k
    com.newland.base.CommonThread checkThread -> l
    java.util.List initInfos -> m
    int checkResult -> n
    android.view.View$OnClickListener clickListener -> o
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> q
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    void checkInit() -> r
    int checkPrintStatus() -> s
    void writeExtendData(android.content.Context) -> c
    void loadLogoImg(android.content.Context) -> d
    void initExtendParamsToSharedPreferences(android.content.Context) -> a
    void finishInit(boolean) -> a
    boolean onBackKeyDown() -> h
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void thirdInvokeCheckInit(android.content.Context) -> b
    com.newland.payment.ui.fragment.SelfCheckFragment$InnerObject access$300(com.newland.payment.ui.fragment.SelfCheckFragment) -> a
    com.newland.payment.ui.view.CheckView access$402(com.newland.payment.ui.fragment.SelfCheckFragment,com.newland.payment.ui.view.CheckView) -> a
    java.util.List access$500(com.newland.payment.ui.fragment.SelfCheckFragment) -> b
    int access$600(com.newland.payment.ui.fragment.SelfCheckFragment) -> c
    com.newland.payment.ui.view.CheckView access$400(com.newland.payment.ui.fragment.SelfCheckFragment) -> d
    void access$700(com.newland.payment.ui.fragment.SelfCheckFragment,boolean) -> a
    int access$602(com.newland.payment.ui.fragment.SelfCheckFragment,int) -> a
    int access$800(com.newland.payment.ui.fragment.SelfCheckFragment) -> e
    void access$900(com.newland.payment.ui.fragment.SelfCheckFragment,android.content.Context) -> a
    void access$1000(com.newland.payment.ui.fragment.SelfCheckFragment,android.content.Context) -> b
com.newland.payment.ui.fragment.SelfCheckFragment$1 -> com.newland.payment.ui.fragment.SelfCheckFragment$1:
    com.newland.payment.ui.fragment.SelfCheckFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SelfCheckFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SelfCheckFragment$2 -> com.newland.payment.ui.fragment.SelfCheckFragment$2:
    boolean val$isSkip -> a
    com.newland.payment.ui.fragment.SelfCheckFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.SelfCheckFragment,boolean) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SelfCheckFragment$3 -> com.newland.payment.ui.fragment.SelfCheckFragment$3:
    com.newland.payment.ui.fragment.SelfCheckFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SelfCheckFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SelfCheckFragment$InnerObject -> com.newland.payment.ui.fragment.SelfCheckFragment$a:
    int checkIndex -> b
    boolean isRetry -> c
    com.newland.payment.ui.fragment.SelfCheckFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SelfCheckFragment) -> <init>
    void <init>(com.newland.payment.ui.fragment.SelfCheckFragment,com.newland.payment.ui.fragment.SelfCheckFragment$1) -> <init>
    boolean access$102(com.newland.payment.ui.fragment.SelfCheckFragment$InnerObject,boolean) -> a
    int access$202(com.newland.payment.ui.fragment.SelfCheckFragment$InnerObject,int) -> a
    boolean access$100(com.newland.payment.ui.fragment.SelfCheckFragment$InnerObject) -> a
    int access$200(com.newland.payment.ui.fragment.SelfCheckFragment$InnerObject) -> b
    int access$208(com.newland.payment.ui.fragment.SelfCheckFragment$InnerObject) -> c
com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment -> com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment:
    com.newland.payment.ui.view.SettingChooseView scvConnectMode -> b
    com.newland.payment.ui.view.SettingEditView sevAccessNumber -> g
    com.newland.payment.ui.view.SettingChooseView sevApnName -> h
    com.newland.payment.ui.view.SettingEditView sevApn -> i
    com.newland.payment.ui.view.SettingIpView sivIp1 -> j
    com.newland.payment.ui.view.SettingEditView sevPort1 -> k
    com.newland.payment.ui.view.SettingIpView sivIp2 -> l
    com.newland.payment.ui.view.SettingEditView sevPort2 -> m
    com.newland.payment.ui.view.SettingEditView sevUserName -> n
    com.newland.payment.ui.view.SettingEditView sevPassword -> o
    com.newland.payment.ui.view.SettingEditView sevTpdu -> p
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> q
    com.newland.payment.ui.listener.AbstractKeyBoardListener keyBoardListener -> r
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment$1 -> com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment$1:
    com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment) -> <init>
    void onKeyClick(int) -> b
    void setTargetView(android.view.View) -> a
com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment$2 -> com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment$2:
    com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment$3 -> com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment$3:
    com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingCommoncationCdmaFragment) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.fragment.SettingCommoncationGprsFragment -> com.newland.payment.ui.fragment.SettingCommoncationGprsFragment:
    com.newland.payment.ui.view.SettingChooseView scvConnectMode -> b
    com.newland.payment.ui.view.SettingEditView sevAccessNumber -> g
    com.newland.payment.ui.view.SettingChooseView sevApnName -> h
    com.newland.payment.ui.view.SettingEditView sevApn -> i
    com.newland.payment.ui.view.SettingIpView sivIp1 -> j
    com.newland.payment.ui.view.SettingEditView sevPort1 -> k
    com.newland.payment.ui.view.SettingIpView sivIp2 -> l
    com.newland.payment.ui.view.SettingEditView sevPort2 -> m
    com.newland.payment.ui.view.SettingEditView sevUserName -> n
    com.newland.payment.ui.view.SettingEditView sevPassword -> o
    com.newland.payment.ui.view.SettingEditView sevTpdu -> p
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> q
    com.newland.payment.ui.listener.AbstractKeyBoardListener keyBoardListener -> r
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void onResume() -> onResume
    void onPause() -> onPause
com.newland.payment.ui.fragment.SettingCommoncationGprsFragment$1 -> com.newland.payment.ui.fragment.SettingCommoncationGprsFragment$1:
    com.newland.payment.ui.fragment.SettingCommoncationGprsFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingCommoncationGprsFragment) -> <init>
    void onKeyClick(int) -> b
    void setTargetView(android.view.View) -> a
com.newland.payment.ui.fragment.SettingCommoncationGprsFragment$2 -> com.newland.payment.ui.fragment.SettingCommoncationGprsFragment$2:
    com.newland.payment.ui.fragment.SettingCommoncationGprsFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingCommoncationGprsFragment) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.fragment.SettingCommoncationGprsFragment$3 -> com.newland.payment.ui.fragment.SettingCommoncationGprsFragment$3:
    com.newland.payment.ui.fragment.SettingCommoncationGprsFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingCommoncationGprsFragment) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.fragment.SettingCommoncationWifiFragment -> com.newland.payment.ui.fragment.SettingCommoncationWifiFragment:
    com.newland.payment.ui.view.SettingChooseView scvWifiMode -> b
    com.newland.payment.ui.view.SettingIpView sivIp1 -> g
    com.newland.payment.ui.view.SettingEditView sevPort1 -> h
    com.newland.payment.ui.view.SettingIpView sivIp2 -> i
    com.newland.payment.ui.view.SettingEditView sevPort2 -> j
    com.newland.payment.ui.view.SettingEditView sevTpdu -> k
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> l
    com.newland.payment.ui.listener.AbstractKeyBoardListener keyBoardListener -> m
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
com.newland.payment.ui.fragment.SettingCommoncationWifiFragment$1 -> com.newland.payment.ui.fragment.SettingCommoncationWifiFragment$1:
    com.newland.payment.ui.fragment.SettingCommoncationWifiFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingCommoncationWifiFragment) -> <init>
    void onKeyClick(int) -> b
    void setTargetView(android.view.View) -> a
com.newland.payment.ui.fragment.SettingCommunicationFragment -> com.newland.payment.ui.fragment.SettingCommunicationFragment:
    com.newland.payment.ui.view.SettingSwitchView ssvHttp -> b
    com.newland.payment.ui.view.SettingChooseView scvConnectType -> g
    com.newland.payment.ui.view.SettingEditView sevOutTime -> h
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> i
    com.newland.payment.ui.listener.AbstractKeyBoardListener keyBoardListener -> j
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingCommunicationFragment$1 -> com.newland.payment.ui.fragment.SettingCommunicationFragment$1:
    com.newland.payment.ui.fragment.SettingCommunicationFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingCommunicationFragment) -> <init>
    void onKeyClick(int) -> b
    void setTargetView(android.view.View) -> a
com.newland.payment.ui.fragment.SettingDesFragment -> com.newland.payment.ui.fragment.SettingDesFragment:
    com.newland.payment.ui.view.SettingChooseView scvEncryptMode -> b
    com.newland.payment.ui.view.SettingSwitchView ssvIsEncryptTrack -> g
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
com.newland.payment.ui.fragment.SettingFlashCardFragment -> com.newland.payment.ui.fragment.SettingFlashCardFragment:
    com.newland.payment.ui.view.SettingEditView sevVsettingFlashCardNum -> b
    com.newland.payment.ui.view.SettingEditView sevSettingFlashCardReSwipeTimeout -> g
    com.newland.payment.ui.view.SettingEditView sevSettingFlashCardCanDealTimeout -> h
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> i
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingHideManagerFragment -> com.newland.payment.ui.fragment.SettingHideManagerFragment:
    java.lang.String emvVersion -> a
    java.lang.String androidVersion -> b
    android.app.Dialog dialog -> g
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    java.lang.String getMoreVersion() -> q
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
    android.app.Dialog access$000(com.newland.payment.ui.fragment.SettingHideManagerFragment) -> a
com.newland.payment.ui.fragment.SettingHideManagerFragment$1 -> com.newland.payment.ui.fragment.SettingHideManagerFragment$1:
    com.newland.payment.ui.fragment.SettingHideManagerFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingHideManagerFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingHideManagerFragment$1$1 -> com.newland.payment.ui.fragment.SettingHideManagerFragment$1$1:
    int result -> a
    com.newland.payment.ui.fragment.SettingHideManagerFragment$1 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.SettingHideManagerFragment$1) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingHideManagerFragment$2 -> com.newland.payment.ui.fragment.SettingHideManagerFragment$2:
    com.newland.payment.ui.fragment.SettingHideManagerFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingHideManagerFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingHideManagerFragment$2$1 -> com.newland.payment.ui.fragment.SettingHideManagerFragment$2$1:
    com.newland.payment.ui.fragment.SettingHideManagerFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.SettingHideManagerFragment$2) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingHideManagerFragment$3 -> com.newland.payment.ui.fragment.SettingHideManagerFragment$3:
    com.newland.payment.ui.fragment.SettingHideManagerFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingHideManagerFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingKeyboardFragment -> com.newland.payment.ui.fragment.SettingKeyboardFragment:
    com.newland.payment.ui.view.SettingChooseView scvInsideExtendKeyboard -> b
    com.newland.payment.ui.view.SettingEditView sevPinpadTimeout -> g
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> h
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
com.newland.payment.ui.fragment.SettingOfflineUpFragment -> com.newland.payment.ui.fragment.SettingOfflineUpFragment:
    com.newland.payment.ui.view.SettingEditView editView -> b
    com.newland.payment.ui.view.SettingChooseView chooseView -> g
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> h
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
com.newland.payment.ui.fragment.SettingOtherDownloadFragment -> com.newland.payment.ui.fragment.SettingOtherDownloadFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingOtherDownloadFragment$1 -> com.newland.payment.ui.fragment.SettingOtherDownloadFragment$1:
    com.newland.payment.ui.fragment.SettingOtherDownloadFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherDownloadFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherDownloadFragment$2 -> com.newland.payment.ui.fragment.SettingOtherDownloadFragment$2:
    com.newland.payment.ui.fragment.SettingOtherDownloadFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherDownloadFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherDownloadFragment$3 -> com.newland.payment.ui.fragment.SettingOtherDownloadFragment$3:
    com.newland.payment.ui.fragment.SettingOtherDownloadFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherDownloadFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherDownloadFragment$4 -> com.newland.payment.ui.fragment.SettingOtherDownloadFragment$4:
    com.newland.payment.ui.fragment.SettingOtherDownloadFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherDownloadFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherDownloadFragment$5 -> com.newland.payment.ui.fragment.SettingOtherDownloadFragment$5:
    com.newland.payment.ui.fragment.SettingOtherDownloadFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherDownloadFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherDownloadFragment$6 -> com.newland.payment.ui.fragment.SettingOtherDownloadFragment$6:
    com.newland.payment.ui.fragment.SettingOtherDownloadFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherDownloadFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherDownloadFragment$7 -> com.newland.payment.ui.fragment.SettingOtherDownloadFragment$7:
    com.newland.payment.ui.fragment.SettingOtherDownloadFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherDownloadFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherDownloadFragment$8 -> com.newland.payment.ui.fragment.SettingOtherDownloadFragment$8:
    com.newland.payment.ui.fragment.SettingOtherDownloadFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherDownloadFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherDownloadFragment$9 -> com.newland.payment.ui.fragment.SettingOtherDownloadFragment$9:
    com.newland.payment.ui.fragment.SettingOtherDownloadFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherDownloadFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherElecSignFragment -> com.newland.payment.ui.fragment.SettingOtherElecSignFragment:
    com.newland.payment.ui.view.SettingEditView sevElecTimeout -> b
    com.newland.payment.ui.view.SettingEditView sevElecResignTimes -> g
    com.newland.payment.ui.view.SettingEditView sevMaxElecCount -> h
    com.newland.payment.ui.view.SettingSwitchView ssvIsSupportElecsign -> i
    com.newland.payment.ui.view.SettingSwitchView ssvIsConfirmElecsign -> j
    com.newland.payment.ui.view.SettingSwitchView ssvIsElecsignInputPhone -> k
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> l
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingOtherFragment -> com.newland.payment.ui.fragment.SettingOtherFragment:
    com.newland.payment.ui.view.SettingSwitchView ssvSettingOtherLbs -> b
    com.newland.payment.ui.view.SettingSwitchView ssvSettingInsertCard -> g
    com.newland.payment.ui.view.SettingSwitchView ssvSettingUseDustri -> h
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingOtherFragment$1 -> com.newland.payment.ui.fragment.SettingOtherFragment$1:
    com.newland.payment.ui.fragment.SettingOtherFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherFragment$1$1 -> com.newland.payment.ui.fragment.SettingOtherFragment$1$1:
    com.newland.payment.ui.fragment.SettingOtherFragment$1 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherFragment$1) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingOtherFragment$2 -> com.newland.payment.ui.fragment.SettingOtherFragment$2:
    com.newland.payment.ui.fragment.SettingOtherFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherFragment$2$1 -> com.newland.payment.ui.fragment.SettingOtherFragment$2$1:
    com.newland.payment.ui.fragment.SettingOtherFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherFragment$2) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingOtherFragment$3 -> com.newland.payment.ui.fragment.SettingOtherFragment$3:
    com.newland.payment.ui.fragment.SettingOtherFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherFragment$3$1 -> com.newland.payment.ui.fragment.SettingOtherFragment$3$1:
    com.newland.payment.ui.fragment.SettingOtherFragment$3 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherFragment$3) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingOtherFragment$4 -> com.newland.payment.ui.fragment.SettingOtherFragment$4:
    com.newland.payment.ui.fragment.SettingOtherFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherFragment$4$1 -> com.newland.payment.ui.fragment.SettingOtherFragment$4$1:
    int result -> a
    com.newland.payment.ui.fragment.SettingOtherFragment$4 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.SettingOtherFragment$4) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingOtherFragment$5 -> com.newland.payment.ui.fragment.SettingOtherFragment$5:
    com.newland.payment.ui.fragment.SettingOtherFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingOtherFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingOtherFragment$5$1 -> com.newland.payment.ui.fragment.SettingOtherFragment$5$1:
    int result -> a
    com.newland.payment.ui.fragment.SettingOtherFragment$5 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.SettingOtherFragment$5) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingPasswordManagerFragment -> com.newland.payment.ui.fragment.SettingPasswordManagerFragment:
    com.newland.payment.mvc.service.impl.UserServiceImpl serviceImpl -> b
    java.lang.String oldPassword -> g
    java.lang.String newPassword -> h
    int step -> i
    com.newland.payment.ui.view.OperatorPasswordDialog dialogSys -> j
    com.newland.payment.ui.view.OperatorPasswordDialog dialogSafe -> k
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
    int access$000(com.newland.payment.ui.fragment.SettingPasswordManagerFragment) -> a
    int access$002(com.newland.payment.ui.fragment.SettingPasswordManagerFragment,int) -> a
    java.lang.String access$102(com.newland.payment.ui.fragment.SettingPasswordManagerFragment,java.lang.String) -> a
    com.newland.payment.ui.view.OperatorPasswordDialog access$200(com.newland.payment.ui.fragment.SettingPasswordManagerFragment) -> b
    java.lang.String access$302(com.newland.payment.ui.fragment.SettingPasswordManagerFragment,java.lang.String) -> b
    com.newland.payment.mvc.service.impl.UserServiceImpl access$400(com.newland.payment.ui.fragment.SettingPasswordManagerFragment) -> c
    java.lang.String access$100(com.newland.payment.ui.fragment.SettingPasswordManagerFragment) -> d
    java.lang.String access$300(com.newland.payment.ui.fragment.SettingPasswordManagerFragment) -> e
    com.newland.payment.ui.view.OperatorPasswordDialog access$500(com.newland.payment.ui.fragment.SettingPasswordManagerFragment) -> f
com.newland.payment.ui.fragment.SettingPasswordManagerFragment$1 -> com.newland.payment.ui.fragment.SettingPasswordManagerFragment$1:
    com.newland.payment.ui.fragment.SettingPasswordManagerFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPasswordManagerFragment) -> <init>
    void onConfirm(android.app.Dialog,java.lang.String) -> a
    void onCancel() -> a
com.newland.payment.ui.fragment.SettingPasswordManagerFragment$1$1 -> com.newland.payment.ui.fragment.SettingPasswordManagerFragment$1$1:
    int result -> a
    java.lang.String val$value -> b
    com.newland.payment.ui.fragment.SettingPasswordManagerFragment$1 this$1 -> c
    void <init>(com.newland.payment.ui.fragment.SettingPasswordManagerFragment$1,java.lang.String) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingPasswordManagerFragment$1$2 -> com.newland.payment.ui.fragment.SettingPasswordManagerFragment$1$2:
    int result -> a
    com.newland.payment.ui.fragment.SettingPasswordManagerFragment$1 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.SettingPasswordManagerFragment$1) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingPasswordManagerFragment$2 -> com.newland.payment.ui.fragment.SettingPasswordManagerFragment$2:
    com.newland.payment.ui.fragment.SettingPasswordManagerFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPasswordManagerFragment) -> <init>
    void onConfirm(android.app.Dialog,java.lang.String) -> a
    void onCancel() -> a
com.newland.payment.ui.fragment.SettingPrintFragment -> com.newland.payment.ui.fragment.SettingPrintFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingPrintOtherFragment -> com.newland.payment.ui.fragment.SettingPrintOtherFragment:
    com.newland.payment.ui.view.SettingChooseView scvSignOrderFont -> b
    com.newland.payment.ui.view.SettingEditView sevSettingSignOrderAgeLimit -> g
    com.newland.payment.ui.view.SettingEditView sevIssuingBankName -> h
    com.newland.payment.ui.view.SettingSwitchView ssvIsPrintSignOrderEnglish -> i
    com.newland.payment.ui.view.SettingSwitchView ssvIsHintPrintDetail -> j
    com.newland.payment.ui.view.SettingSwitchView ssvAnewPrintStatement -> k
    com.newland.payment.ui.view.SettingSwitchView ssvPrintAllTransDetail -> l
    com.newland.payment.ui.view.SettingSwitchView ssvPrintChineseAcquirer -> m
    com.newland.payment.ui.view.SettingSwitchView ssvPrintChineseIssuingBank -> n
    com.newland.payment.ui.view.SettingSwitchView ssvIsPrintMinus -> o
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> p
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
com.newland.payment.ui.fragment.SettingPrintParamsFragment -> com.newland.payment.ui.fragment.SettingPrintParamsFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingPrintParamsFragment$1 -> com.newland.payment.ui.fragment.SettingPrintParamsFragment$1:
    com.newland.payment.ui.fragment.SettingPrintParamsFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintParamsFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingPrintParamsFragment$2 -> com.newland.payment.ui.fragment.SettingPrintParamsFragment$2:
    com.newland.payment.ui.fragment.SettingPrintParamsFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintParamsFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingPrintParamsFragment$3 -> com.newland.payment.ui.fragment.SettingPrintParamsFragment$3:
    com.newland.payment.ui.fragment.SettingPrintParamsFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintParamsFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingPrintParamsFragment$4 -> com.newland.payment.ui.fragment.SettingPrintParamsFragment$4:
    com.newland.payment.ui.fragment.SettingPrintParamsFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintParamsFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingPrintParamsFragment$5 -> com.newland.payment.ui.fragment.SettingPrintParamsFragment$5:
    com.newland.payment.ui.fragment.SettingPrintParamsFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintParamsFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingPrintParamsFragment$6 -> com.newland.payment.ui.fragment.SettingPrintParamsFragment$6:
    com.newland.payment.ui.fragment.SettingPrintParamsFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintParamsFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingPrintParamsFragment$7 -> com.newland.payment.ui.fragment.SettingPrintParamsFragment$7:
    com.newland.payment.ui.fragment.SettingPrintParamsFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintParamsFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingPrintSettingFragment -> com.newland.payment.ui.fragment.SettingPrintSettingFragment:
    com.newland.payment.ui.view.SettingChooseView scvPrintSignOrder -> b
    com.newland.payment.ui.view.SettingEditView sevPrintPaperNum -> g
    com.newland.payment.ui.view.SettingEditView sevPrintServiceHotline -> h
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> i
    com.newland.payment.ui.view.CommonInputDialog dialog -> j
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
    com.newland.payment.ui.view.CommonInputDialog access$002(com.newland.payment.ui.fragment.SettingPrintSettingFragment,com.newland.payment.ui.view.CommonInputDialog) -> a
    com.newland.payment.ui.view.CommonInputDialog access$000(com.newland.payment.ui.fragment.SettingPrintSettingFragment) -> a
com.newland.payment.ui.fragment.SettingPrintSettingFragment$1 -> com.newland.payment.ui.fragment.SettingPrintSettingFragment$1:
    java.lang.String name -> a
    com.newland.payment.ui.fragment.SettingPrintSettingFragment this$0 -> b
    void <init>(com.newland.payment.ui.fragment.SettingPrintSettingFragment) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.fragment.SettingPrintSettingFragment$2 -> com.newland.payment.ui.fragment.SettingPrintSettingFragment$2:
    com.newland.payment.ui.fragment.SettingPrintSettingFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintSettingFragment) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$1 -> com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$1:
    java.lang.String name -> a
    com.newland.payment.ui.fragment.SettingPrintSettingFragment$2 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.SettingPrintSettingFragment$2) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$1$1 -> com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$1$1:
    com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$1 this$2 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$1) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$1$1$1 -> com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$1$1$1:
    com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$1$1 this$3 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$1$1) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$2 -> com.newland.payment.ui.fragment.SettingPrintSettingFragment$2$2:
    com.newland.payment.ui.fragment.SettingPrintSettingFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.SettingPrintSettingFragment$2) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.fragment.SettingQPSFragment -> com.newland.payment.ui.fragment.SettingQPSFragment:
    com.newland.payment.ui.view.SettingSwitchView ssvNoPsw -> b
    com.newland.payment.ui.view.SettingSwitchView ssvNoSign -> g
    com.newland.payment.ui.view.SettingSwitchView ssvCDCVM -> h
    com.newland.payment.ui.view.SettingSwitchView ssvBinA -> i
    com.newland.payment.ui.view.SettingSwitchView ssvBinB -> j
    com.newland.payment.ui.view.AmountEditText aevNoPswLimit -> k
    com.newland.payment.ui.view.AmountEditText aevNoSignLimit -> l
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> m
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
com.newland.payment.ui.fragment.SettingResendTimesFragment -> com.newland.payment.ui.fragment.SettingResendTimesFragment:
    com.newland.payment.ui.view.SettingEditView editView1 -> b
    com.newland.payment.ui.view.SettingEditView editView2 -> g
    com.newland.payment.ui.view.SettingEditView editView3 -> h
    com.newland.payment.ui.view.SettingEditView editView4 -> i
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> j
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingSecretKeyFragment -> com.newland.payment.ui.fragment.SettingSecretKeyFragment:
    com.newland.payment.ui.view.SettingEditView sevMainIndex -> b
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> g
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingSecretKeyFragment$1 -> com.newland.payment.ui.fragment.SettingSecretKeyFragment$1:
    com.newland.payment.ui.fragment.SettingSecretKeyFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingSecretKeyFragment) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.fragment.SettingSecretKeyFragment$1$1 -> com.newland.payment.ui.fragment.SettingSecretKeyFragment$1$1:
    java.lang.String val$value -> a
    com.newland.payment.ui.fragment.SettingSecretKeyFragment$1 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.SettingSecretKeyFragment$1,java.lang.String) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.fragment.SettingSecretKeyHeadFragment -> com.newland.payment.ui.fragment.SettingSecretKeyHeadFragment:
    com.newland.payment.ui.view.SettingEditView sevSettingSecretKeyIndex -> b
    com.newland.payment.ui.view.SettingEditView sevSettingSecretKey -> g
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> h
    android.widget.TextView txtSubmit -> i
    boolean importMainkey -> j
    int size -> k
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    boolean access$000(com.newland.payment.ui.fragment.SettingSecretKeyHeadFragment) -> a
    boolean access$002(com.newland.payment.ui.fragment.SettingSecretKeyHeadFragment,boolean) -> a
com.newland.payment.ui.fragment.SettingSecretKeyHeadFragment$1 -> com.newland.payment.ui.fragment.SettingSecretKeyHeadFragment$1:
    com.newland.payment.ui.fragment.SettingSecretKeyHeadFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingSecretKeyHeadFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingShopFragment -> com.newland.payment.ui.fragment.SettingShopFragment:
    com.newland.payment.ui.view.SettingEditView sevNo -> i
    com.newland.payment.ui.view.SettingEditView sevTerminal -> j
    com.newland.payment.ui.view.SettingEditView sevChineseName -> k
    com.newland.payment.ui.view.SettingEditView sevEnglishName -> l
    com.newland.payment.ui.view.SettingEditView sevAppName -> m
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> b
    com.newland.pos.sdk.emv.EmvModule emvModule -> g
    boolean result -> h
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingShopFragment$1 -> com.newland.payment.ui.fragment.SettingShopFragment$1:
    com.newland.payment.ui.fragment.SettingShopFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingShopFragment) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.fragment.SettingShopFragment$1$1 -> com.newland.payment.ui.fragment.SettingShopFragment$1$1:
    boolean result -> a
    java.lang.String val$value -> b
    com.newland.payment.ui.fragment.SettingShopFragment$1 this$1 -> c
    void <init>(com.newland.payment.ui.fragment.SettingShopFragment$1,java.lang.String) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.fragment.SettingShopFragment$2 -> com.newland.payment.ui.fragment.SettingShopFragment$2:
    com.newland.payment.ui.fragment.SettingShopFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingShopFragment) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.fragment.SettingShopFragment$2$1 -> com.newland.payment.ui.fragment.SettingShopFragment$2$1:
    boolean result -> a
    java.lang.String val$value -> b
    com.newland.payment.ui.fragment.SettingShopFragment$2 this$1 -> c
    void <init>(com.newland.payment.ui.fragment.SettingShopFragment$2,java.lang.String) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.fragment.SettingShopFragment$3 -> com.newland.payment.ui.fragment.SettingShopFragment$3:
    com.newland.payment.ui.fragment.SettingShopFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingShopFragment) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.fragment.SettingShopFragment$3$1 -> com.newland.payment.ui.fragment.SettingShopFragment$3$1:
    boolean result -> a
    java.lang.String val$value -> b
    com.newland.payment.ui.fragment.SettingShopFragment$3 this$1 -> c
    void <init>(com.newland.payment.ui.fragment.SettingShopFragment$3,java.lang.String) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SettingSwitchListFragment -> com.newland.payment.ui.fragment.SettingSwitchListFragment:
    android.widget.ListView listView -> b
    java.util.List beans -> g
    com.newland.payment.ui.adapter.SettingSwitchAdapter adapter -> h
    int resTitle -> i
    void <init>(int,java.util.List) -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingSystemFragment -> com.newland.payment.ui.fragment.SettingSystemFragment:
    com.newland.payment.ui.view.SettingEditView sevSettingSystemSerialNo -> b
    com.newland.payment.ui.view.SettingEditView sevSettingSystemBatchNo -> g
    com.newland.payment.ui.view.SettingEditView sevVsettingSystemMaxTSrans_no -> h
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> i
    com.newland.payment.ui.view.SettingEditView sevTimeOut -> j
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
com.newland.payment.ui.fragment.SettingSystemFragment$1 -> com.newland.payment.ui.fragment.SettingSystemFragment$1:
    com.newland.payment.ui.fragment.SettingSystemFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingSystemFragment) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.fragment.SettingSystemOtherFragment -> com.newland.payment.ui.fragment.SettingSystemOtherFragment:
    com.newland.payment.ui.view.SettingEditView sevShopCode -> b
    com.newland.payment.ui.view.SettingEditView sevLocalCode -> g
    com.newland.payment.ui.view.SettingSwitchView ssvIsPreauthShieldPan -> h
    com.newland.payment.ui.view.SettingSwitchView ssvIsSupportIc -> i
    com.newland.payment.ui.view.SettingSwitchView ssvIsDisplayTrvtsi -> j
    com.newland.payment.ui.view.SettingSwitchView ssvIsSaleFlick -> k
    com.newland.payment.ui.view.SettingSwitchView ssvIsSupportRf -> l
    com.newland.payment.ui.view.SettingSwitchView ssvIsRfDelay -> m
    com.newland.payment.ui.view.SettingChooseView scvIsExtendRf -> n
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> o
    com.newland.payment.ui.view.SettingChooseView scvQpbocPriority -> p
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
com.newland.payment.ui.fragment.SettingTimeFragment -> com.newland.payment.ui.fragment.SettingTimeFragment:
    com.newland.payment.ui.view.SettingDateView sdvDate -> b
    com.newland.payment.ui.view.SettingDateView sdvTime -> g
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
com.newland.payment.ui.fragment.SettingTimeFragment$1 -> com.newland.payment.ui.fragment.SettingTimeFragment$1:
    com.newland.payment.ui.fragment.SettingTimeFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingTimeFragment) -> <init>
    void onChange(long) -> a
com.newland.payment.ui.fragment.SettingTimeFragment$2 -> com.newland.payment.ui.fragment.SettingTimeFragment$2:
    com.newland.payment.ui.fragment.SettingTimeFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingTimeFragment) -> <init>
    void onChange(long) -> a
com.newland.payment.ui.fragment.SettingTransFragment -> com.newland.payment.ui.fragment.SettingTransFragment:
    java.util.List beans -> b
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void addItem(int,java.lang.String) -> a
com.newland.payment.ui.fragment.SettingTransOtherControl -> com.newland.payment.ui.fragment.SettingTransOtherControl:
    com.newland.payment.ui.view.SettingSwitchView swIsInputMainPwd -> b
    com.newland.payment.ui.view.SettingSwitchView swInputNoByhand -> g
    com.newland.payment.ui.view.SettingChooseView csDefaultTranstype -> h
    com.newland.payment.ui.view.SettingEditView etBackGoodMaxAmount -> i
    com.newland.payment.ui.view.SettingSwitchView swIsSmallGeneAuth -> j
    com.newland.payment.ui.view.SettingSwitchView swIsSurppotTip -> k
    com.newland.payment.ui.view.SettingEditView etTipPercent -> l
    com.newland.payment.ui.view.SettingChooseView csAuthSaleMode -> m
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> n
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
com.newland.payment.ui.fragment.SettingTransSwitchFragment -> com.newland.payment.ui.fragment.SettingTransSwitchFragment:
    java.util.List beans -> b
    int resTitle -> g
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void addItem(int,java.lang.String) -> a
    void addItem(int,java.lang.String,com.newland.payment.ui.listener.BooleanValueChangeListener) -> a
com.newland.payment.ui.fragment.SettingTransSwitchFragment$1 -> com.newland.payment.ui.fragment.SettingTransSwitchFragment$1:
    com.newland.payment.ui.fragment.SettingTransSwitchFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SettingTransSwitchFragment) -> <init>
    void onChange(boolean) -> a
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment:
    com.newland.payment.ui.view.CommonDialog dialog -> b
    com.newland.payment.ui.view.SettingSwitchView setIsReverse -> a
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onFragmentHide() -> o
    com.newland.payment.ui.view.CommonDialog access$000(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment) -> a
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$1 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$1:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$1$1 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$1$1:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$1 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$1) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$2 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$2:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$2$1 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$2$1:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$2) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$3 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$3:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$3$1 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$3$1:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$3 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$3) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$4 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$4:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$4$1 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$4$1:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$4 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$4) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$5 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$5:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$5$1 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$5$1:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$5 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$5) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$6 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$6:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$6$1 -> com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$6$1:
    com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$6 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.ShopManagerResetFlagFragment$6) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.SignatureFragment -> com.newland.payment.ui.fragment.SignatureFragment:
    com.newland.payment.ui.view.HandWriteView signatureView -> a
    android.widget.TextView btnCancel -> b
    android.widget.Button btnReset -> g
    android.widget.Button btnConfirm -> h
    java.lang.String SIGNATURE_JBIG_DIR -> i
    java.lang.String SIGNATURE_BMP_DIR -> j
    com.newland.payment.trans.bean.SignatureBean bean -> k
    java.lang.String jbigFileName -> l
    java.lang.String pngFileName -> m
    int resetTimes -> n
    boolean needConfrim -> o
    android.app.Dialog progressBarDialog -> p
    android.widget.TextView tvTips -> q
    android.view.View view -> r
    android.app.Dialog tipDialog -> s
    void <init>(long) -> <init>
    com.newland.payment.ui.fragment.SignatureFragment newInstance(com.newland.payment.trans.bean.SignatureBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    void saveSignature() -> q
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void onFragmentHide() -> o
    void dismissTipDialog() -> r
    boolean doClickBackEvent() -> d
    boolean doClickHomeEvent() -> e
    boolean access$000(com.newland.payment.ui.fragment.SignatureFragment) -> a
    void access$100(com.newland.payment.ui.fragment.SignatureFragment) -> b
    int access$200(com.newland.payment.ui.fragment.SignatureFragment) -> c
    int access$210(com.newland.payment.ui.fragment.SignatureFragment) -> d
    java.lang.String access$300(com.newland.payment.ui.fragment.SignatureFragment) -> e
    java.lang.String access$400(com.newland.payment.ui.fragment.SignatureFragment) -> f
    com.newland.payment.trans.bean.SignatureBean access$500(com.newland.payment.ui.fragment.SignatureFragment) -> g
    android.app.Dialog access$600(com.newland.payment.ui.fragment.SignatureFragment) -> h
    void access$700(com.newland.payment.ui.fragment.SignatureFragment) -> i
    void <clinit>() -> <clinit>
com.newland.payment.ui.fragment.SignatureFragment$1 -> com.newland.payment.ui.fragment.SignatureFragment$1:
    com.newland.payment.ui.fragment.SignatureFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SignatureFragment$1$1 -> com.newland.payment.ui.fragment.SignatureFragment$1$1:
    com.newland.payment.ui.fragment.SignatureFragment$1 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment$1) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SignatureFragment$1$2 -> com.newland.payment.ui.fragment.SignatureFragment$1$2:
    com.newland.payment.ui.fragment.SignatureFragment$1 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment$1) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SignatureFragment$2 -> com.newland.payment.ui.fragment.SignatureFragment$2:
    com.newland.payment.ui.fragment.SignatureFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SignatureFragment$3 -> com.newland.payment.ui.fragment.SignatureFragment$3:
    com.newland.payment.ui.fragment.SignatureFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SignatureFragment$4 -> com.newland.payment.ui.fragment.SignatureFragment$4:
    com.newland.payment.ui.fragment.SignatureFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.newland.payment.ui.fragment.SignatureFragment$5 -> com.newland.payment.ui.fragment.SignatureFragment$5:
    com.newland.payment.ui.fragment.SignatureFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.SignatureFragment$5$1 -> com.newland.payment.ui.fragment.SignatureFragment$5$1:
    com.newland.payment.ui.fragment.SignatureFragment$5 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment$5) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.SignatureFragment$5$2 -> com.newland.payment.ui.fragment.SignatureFragment$5$2:
    com.newland.payment.ui.fragment.SignatureFragment$5 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment$5) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.SignatureFragment$5$3 -> com.newland.payment.ui.fragment.SignatureFragment$5$3:
    com.newland.payment.ui.fragment.SignatureFragment$5 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment$5) -> <init>
    void run() -> run
com.newland.payment.ui.fragment.SignatureFragment$6 -> com.newland.payment.ui.fragment.SignatureFragment$6:
    com.newland.payment.ui.fragment.SignatureFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SignatureFragment$7 -> com.newland.payment.ui.fragment.SignatureFragment$7:
    com.newland.payment.ui.fragment.SignatureFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.SignatureFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.SystemManageFragment -> com.newland.payment.ui.fragment.SystemManageFragment:
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    boolean onBackKeyDown() -> h
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void onDestroy() -> onDestroy
com.newland.payment.ui.fragment.TransSelectListFragment -> com.newland.payment.ui.fragment.TransSelectListFragment:
    android.widget.TextView txtBackPage -> a
    android.widget.TextView txtNextPage -> b
    android.widget.TextView txtPrint -> g
    android.widget.TextView txtSearchResult -> h
    android.support.v4.view.ViewPager viewPager -> i
    android.widget.LinearLayout layout -> j
    com.newland.payment.mvc.model.Water water -> k
    java.util.List waters -> l
    com.newland.payment.ui.adapter.TransSelectListAdapter transSelectListAdapter -> m
    com.newland.payment.trans.bean.ThirdInvokeBean thirdInvokeBean -> n
    boolean isThirdinvoke -> o
    int count -> p
    void <init>() -> <init>
    com.newland.payment.ui.fragment.TransSelectListFragment newInstance(com.newland.payment.mvc.model.Water) -> a
    com.newland.payment.ui.fragment.TransSelectListFragment newInstance(com.newland.payment.mvc.model.Water,boolean,com.newland.payment.trans.bean.ThirdInvokeBean) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    void onDetach() -> onDetach
    com.newland.payment.ui.adapter.TransSelectListAdapter access$000(com.newland.payment.ui.fragment.TransSelectListFragment) -> a
    java.util.List access$100(com.newland.payment.ui.fragment.TransSelectListFragment) -> b
    int access$200(com.newland.payment.ui.fragment.TransSelectListFragment) -> c
    boolean access$300(com.newland.payment.ui.fragment.TransSelectListFragment) -> d
    com.newland.payment.mvc.model.Water access$400(com.newland.payment.ui.fragment.TransSelectListFragment) -> e
    java.util.List access$102(com.newland.payment.ui.fragment.TransSelectListFragment,java.util.List) -> a
    int access$202(com.newland.payment.ui.fragment.TransSelectListFragment,int) -> a
    com.newland.payment.ui.adapter.TransSelectListAdapter access$002(com.newland.payment.ui.fragment.TransSelectListFragment,com.newland.payment.ui.adapter.TransSelectListAdapter) -> a
com.newland.payment.ui.fragment.TransSelectListFragment$1 -> com.newland.payment.ui.fragment.TransSelectListFragment$1:
    com.newland.payment.ui.fragment.TransSelectListFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.TransSelectListFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.TransSelectListFragment$2 -> com.newland.payment.ui.fragment.TransSelectListFragment$2:
    com.newland.payment.ui.fragment.TransSelectListFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.TransSelectListFragment) -> <init>
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.newland.payment.ui.fragment.TransSelectListItemFragment -> com.newland.payment.ui.fragment.TransSelectListItemFragment:
    android.widget.TextView txtMerchantName -> a
    android.widget.TextView txtMerchantNo -> b
    android.widget.TextView txtPosNo -> g
    android.widget.TextView txtCardNo -> h
    android.widget.TextView txtVoucher -> i
    android.widget.TextView txtAuthCode -> j
    android.widget.TextView txtRefNo -> k
    android.widget.TextView txtDate -> l
    android.widget.TextView txtAmount -> m
    android.widget.TextView txtTransType -> n
    java.lang.String strMerchantName -> o
    java.lang.String strMerchantNo -> p
    java.lang.String strPosNo -> q
    java.lang.String strVoucher -> r
    java.lang.String strAuthCode -> s
    java.lang.String strRefNo -> t
    java.lang.String strDate -> u
    java.lang.String strAmount -> v
    java.lang.String strTransType -> w
    java.lang.String strTransStatus -> x
    com.newland.payment.mvc.model.Water water -> y
    void <init>(com.newland.payment.mvc.model.Water,java.lang.String,java.lang.String,java.lang.String) -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.payment.trans.bean.TransResultBean getBean() -> q
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
com.newland.payment.ui.fragment.TransTotalListFragment -> com.newland.payment.ui.fragment.TransTotalListFragment:
    android.widget.TextView txtInsideDebitAmount -> a
    android.widget.TextView txtInsideDebitNum -> b
    android.widget.TextView txtOutsideDebitAmount -> g
    android.widget.TextView txtOutsideDebitNum -> h
    android.widget.TextView txtInsideCreditAmount -> i
    android.widget.TextView txtInsideCreditNum -> j
    android.widget.TextView txtOutsideCreditAmount -> k
    android.widget.TextView txtOutsideCreditNum -> l
    android.widget.Button btnPrint -> m
    java.lang.String insideDebitAmount -> n
    java.lang.String insideDebitNum -> o
    java.lang.String outsideDebitAmount -> p
    java.lang.String outsideDebitNum -> q
    java.lang.String insideCreditAmount -> r
    java.lang.String insideCreditNum -> s
    java.lang.String outsideCreditAmount -> t
    java.lang.String outsideCreditNum -> u
    com.newland.payment.printer.template.model.PrintTotalModel model -> v
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
    void initEvent() -> b
    java.lang.String access$000(com.newland.payment.ui.fragment.TransTotalListFragment) -> a
    java.lang.String access$100(com.newland.payment.ui.fragment.TransTotalListFragment) -> b
    java.lang.String access$200(com.newland.payment.ui.fragment.TransTotalListFragment) -> c
    java.lang.String access$300(com.newland.payment.ui.fragment.TransTotalListFragment) -> d
    java.lang.String access$400(com.newland.payment.ui.fragment.TransTotalListFragment) -> e
    java.lang.String access$500(com.newland.payment.ui.fragment.TransTotalListFragment) -> f
    java.lang.String access$600(com.newland.payment.ui.fragment.TransTotalListFragment) -> g
    java.lang.String access$700(com.newland.payment.ui.fragment.TransTotalListFragment) -> h
    com.newland.payment.printer.template.model.PrintTotalModel access$802(com.newland.payment.ui.fragment.TransTotalListFragment,com.newland.payment.printer.template.model.PrintTotalModel) -> a
    java.lang.String access$002(com.newland.payment.ui.fragment.TransTotalListFragment,java.lang.String) -> a
    com.newland.payment.printer.template.model.PrintTotalModel access$800(com.newland.payment.ui.fragment.TransTotalListFragment) -> i
    java.lang.String access$102(com.newland.payment.ui.fragment.TransTotalListFragment,java.lang.String) -> b
    java.lang.String access$202(com.newland.payment.ui.fragment.TransTotalListFragment,java.lang.String) -> c
    java.lang.String access$302(com.newland.payment.ui.fragment.TransTotalListFragment,java.lang.String) -> d
    java.lang.String access$402(com.newland.payment.ui.fragment.TransTotalListFragment,java.lang.String) -> e
    java.lang.String access$502(com.newland.payment.ui.fragment.TransTotalListFragment,java.lang.String) -> f
    java.lang.String access$602(com.newland.payment.ui.fragment.TransTotalListFragment,java.lang.String) -> g
    java.lang.String access$702(com.newland.payment.ui.fragment.TransTotalListFragment,java.lang.String) -> h
com.newland.payment.ui.fragment.TransTotalListFragment$1 -> com.newland.payment.ui.fragment.TransTotalListFragment$1:
    com.newland.payment.ui.fragment.TransTotalListFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.TransTotalListFragment) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.TransTotalListFragment$2 -> com.newland.payment.ui.fragment.TransTotalListFragment$2:
    com.newland.payment.ui.fragment.TransTotalListFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.TransTotalListFragment) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.TransTotalListFragment$2$1 -> com.newland.payment.ui.fragment.TransTotalListFragment$2$1:
    com.newland.payment.ui.fragment.TransTotalListFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.TransTotalListFragment$2) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.TransTotalListFragment$2$2 -> com.newland.payment.ui.fragment.TransTotalListFragment$2$2:
    com.newland.payment.ui.fragment.TransTotalListFragment$2 this$1 -> a
    void <init>(com.newland.payment.ui.fragment.TransTotalListFragment$2) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.fragment.TransVoucherSearchFragment -> com.newland.payment.ui.fragment.TransVoucherSearchFragment:
    android.widget.EditText etContent -> a
    android.widget.TextView txtContent -> b
    android.widget.TextView txtShortContent -> g
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> h
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
com.newland.payment.ui.fragment.TransVoucherSearchFragment$1 -> com.newland.payment.ui.fragment.TransVoucherSearchFragment$1:
    com.newland.payment.ui.fragment.TransVoucherSearchFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.TransVoucherSearchFragment,int,android.view.View) -> <init>
    void onEnter() -> a
com.newland.payment.ui.fragment.TransVoucherSearchFragment$1$1 -> com.newland.payment.ui.fragment.TransVoucherSearchFragment$1$1:
    com.newland.payment.mvc.model.Water water -> a
    com.newland.payment.ui.fragment.TransVoucherSearchFragment$1 this$1 -> b
    void <init>(com.newland.payment.ui.fragment.TransVoucherSearchFragment$1) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.fragment.TransactionFragment -> com.newland.payment.ui.fragment.TransactionFragment:
    android.widget.EditText etContent -> a
    void <init>() -> <init>
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void initClickEvent(android.view.View) -> a
    void initEvent() -> b
    com.newland.pos.sdk.bean.BaseBean getBean() -> c
com.newland.payment.ui.fragment.TransactionFragment$1 -> com.newland.payment.ui.fragment.TransactionFragment$1:
    com.newland.payment.ui.fragment.TransactionFragment this$0 -> a
    void <init>(com.newland.payment.ui.fragment.TransactionFragment) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.listener.AbstractKeyBoardListener -> com.newland.payment.ui.b.a:
    java.lang.String value -> a
    int maxLength -> b
    android.view.View targetView -> c
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(int,android.view.View) -> <init>
    void <init>(android.view.View) -> <init>
    void <init>(android.view.View,int) -> <init>
    void <init>(android.view.View,java.lang.Integer,java.lang.Integer) -> <init>
    void onClick(int) -> a
    boolean onBackspeace() -> c
    void onClear() -> d
    java.lang.String getValue() -> e
    void onCancel() -> b
    void setValue(java.lang.String) -> b
    void setMaxLength(int) -> c
    void onChangeText(java.lang.String,int) -> a
    void onKeyClick(int) -> b
    void onEnter() -> a
    void setTargetView(android.view.View) -> a
    void setEditText(android.widget.EditText) -> a
    void refreshEditText() -> g
    android.view.View getTargetView() -> f
    void onChangeText(java.lang.String) -> a
    java.lang.String access$002(com.newland.payment.ui.listener.AbstractKeyBoardListener,java.lang.String) -> a
com.newland.payment.ui.listener.AbstractKeyBoardListener$1 -> com.newland.payment.ui.b.a$1:
    com.newland.payment.ui.listener.AbstractKeyBoardListener this$0 -> a
    void <init>(com.newland.payment.ui.listener.AbstractKeyBoardListener) -> <init>
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.newland.payment.ui.listener.AbstractKeyBoardListener$2 -> com.newland.payment.ui.b.a$2:
    android.widget.EditText val$editText -> a
    com.newland.payment.ui.listener.AbstractKeyBoardListener this$0 -> b
    void <init>(com.newland.payment.ui.listener.AbstractKeyBoardListener,android.widget.EditText) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.listener.AbstractKeyBoardListener$2$1 -> com.newland.payment.ui.b.a$2$1:
    com.newland.payment.ui.listener.AbstractKeyBoardListener$2 this$1 -> a
    void <init>(com.newland.payment.ui.listener.AbstractKeyBoardListener$2) -> <init>
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.newland.payment.ui.listener.BooleanValueChangeListener -> com.newland.payment.ui.b.b:
    void onChange(boolean) -> a
com.newland.payment.ui.listener.IKeyBoardListener -> com.newland.payment.ui.b.c:
    void onClick(int) -> a
    void onEnter() -> a
    boolean onBackspeace() -> c
    void onClear() -> d
    void onCancel() -> b
com.newland.payment.ui.listener.KeyDownListener -> com.newland.payment.ui.b.d:
    boolean onHome() -> a
    boolean onBack() -> b
com.newland.payment.ui.listener.LongValueChangeListener -> com.newland.payment.ui.b.e:
    void onChange(long) -> a
com.newland.payment.ui.listener.OnDateEnterListener -> com.newland.payment.ui.b.f:
    void onEnter(java.lang.Long) -> a
com.newland.payment.ui.listener.OnListDialogClickListener -> com.newland.payment.ui.b.g:
    void onClick(int) -> a
com.newland.payment.ui.listener.RemindViewCloseListener -> com.newland.payment.ui.b.h:
    void onCloseEvent() -> a
com.newland.payment.ui.listener.StringValueChangeListener -> com.newland.payment.ui.b.i:
    void onChange(java.lang.String) -> a
com.newland.payment.ui.view.AmountEditText -> com.newland.payment.ui.view.AmountEditText:
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> a
    com.newland.payment.ui.listener.AbstractKeyBoardListener keyBoardListen -> b
    java.lang.String amount -> c
    long maxAmount -> d
    java.lang.String shareKay -> e
    long currentValue -> f
    android.widget.EditText etAmount -> g
    android.widget.TextView tvtitle -> h
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setTitle(java.lang.String) -> setTitle
    void setTitle(int) -> setTitle
    void setParam(android.content.Context,java.lang.String,com.newland.payment.ui.view.KeyboardNumber) -> setParam
    void initView(android.content.Context) -> a
    void initEent() -> a
    void setMaxValue(long) -> setMaxValue
    void updateValue(long) -> a
    com.newland.payment.ui.view.KeyboardNumber access$000(com.newland.payment.ui.view.AmountEditText) -> a
    com.newland.payment.ui.listener.AbstractKeyBoardListener access$100(com.newland.payment.ui.view.AmountEditText) -> b
    java.lang.String access$200(com.newland.payment.ui.view.AmountEditText) -> c
    java.lang.String access$202(com.newland.payment.ui.view.AmountEditText,java.lang.String) -> a
    void access$300(com.newland.payment.ui.view.AmountEditText,long) -> a
    android.widget.EditText access$400(com.newland.payment.ui.view.AmountEditText) -> d
    java.lang.String access$500(com.newland.payment.ui.view.AmountEditText) -> e
    long access$600(com.newland.payment.ui.view.AmountEditText) -> f
com.newland.payment.ui.view.AmountEditText$1 -> com.newland.payment.ui.view.AmountEditText$1:
    com.newland.payment.ui.view.AmountEditText this$0 -> a
    void <init>(com.newland.payment.ui.view.AmountEditText) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.AmountEditText$2 -> com.newland.payment.ui.view.AmountEditText$2:
    com.newland.payment.ui.view.AmountEditText this$0 -> a
    void <init>(com.newland.payment.ui.view.AmountEditText) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.view.AmountEditText$3 -> com.newland.payment.ui.view.AmountEditText$3:
    com.newland.payment.ui.view.AmountEditText this$0 -> a
    void <init>(com.newland.payment.ui.view.AmountEditText) -> <init>
    void onKeyClick(int) -> b
com.newland.payment.ui.view.CardRemindView -> com.newland.payment.ui.view.CardRemindView:
    android.widget.TextView tvTipMsg -> a
    android.widget.ImageView ivIcon -> b
    android.widget.ImageView ivRemind -> c
    android.widget.ImageView ivClose -> d
    android.widget.TextView txtRemind -> e
    void <init>(android.content.Context,int,java.lang.String,boolean,com.newland.payment.ui.listener.RemindViewCloseListener) -> <init>
    void setMessageContent(int) -> setMessageContent
com.newland.payment.ui.view.CardRemindView$1 -> com.newland.payment.ui.view.CardRemindView$1:
    com.newland.payment.ui.listener.RemindViewCloseListener val$listener -> a
    com.newland.payment.ui.view.CardRemindView this$0 -> b
    void <init>(com.newland.payment.ui.view.CardRemindView,com.newland.payment.ui.listener.RemindViewCloseListener) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CardThreeRemindView -> com.newland.payment.ui.view.CardThreeRemindView:
    android.widget.TextView tvTipMsg -> a
    android.widget.ImageView ivClose -> b
    void <init>(android.content.Context,java.lang.String,boolean,com.newland.payment.ui.listener.RemindViewCloseListener) -> <init>
com.newland.payment.ui.view.CardThreeRemindView$1 -> com.newland.payment.ui.view.CardThreeRemindView$1:
    com.newland.payment.ui.listener.RemindViewCloseListener val$listener -> a
    com.newland.payment.ui.view.CardThreeRemindView this$0 -> b
    void <init>(com.newland.payment.ui.view.CardThreeRemindView,com.newland.payment.ui.listener.RemindViewCloseListener) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CardTwoRemindView -> com.newland.payment.ui.view.CardTwoRemindView:
    android.widget.TextView tvTipMsg -> a
    android.widget.ImageView ivClose -> b
    android.widget.TextView txtRemind -> c
    android.widget.ImageView ivRemind -> d
    android.widget.TextView txtRemind2 -> e
    android.widget.ImageView ivRemind2 -> f
    android.widget.ImageView ivIcon -> g
    android.widget.ImageView ivIcon2 -> h
    java.util.List resIcon -> i
    java.util.List resString -> j
    java.util.List resStringIcon -> k
    void <init>(android.content.Context,int,java.lang.String,boolean,com.newland.payment.ui.listener.RemindViewCloseListener) -> <init>
com.newland.payment.ui.view.CardTwoRemindView$1 -> com.newland.payment.ui.view.CardTwoRemindView$1:
    com.newland.payment.ui.listener.RemindViewCloseListener val$listener -> a
    com.newland.payment.ui.view.CardTwoRemindView this$0 -> b
    void <init>(com.newland.payment.ui.view.CardTwoRemindView,com.newland.payment.ui.listener.RemindViewCloseListener) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CheckView -> com.newland.payment.ui.view.CheckView:
    android.widget.TextView txtContent -> a
    android.widget.ImageView ivResult -> b
    boolean result -> c
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void setContent(int) -> setContent
    void setNormalStyle() -> setNormalStyle
    void setErrorStyle() -> setErrorStyle
    void setErrorStyleWithMsg(java.lang.String) -> setErrorStyleWithMsg
    void setSuccessStyle() -> setSuccessStyle
    boolean isSuccess() -> a
com.newland.payment.ui.view.CommonDialog -> com.newland.payment.ui.view.CommonDialog:
    android.view.View view -> a
    android.widget.LinearLayout llMain -> b
    android.widget.TextView txtTitle -> c
    android.widget.TextView txtContent -> d
    android.widget.TextView txtCancel -> e
    android.widget.TextView txtSure -> f
    android.widget.TextView txtMiddle -> g
    android.widget.ImageView ivLine -> h
    android.widget.ImageView ivLineMiddle -> i
    android.content.Context context -> j
    int defaultTimeOut -> k
    java.util.concurrent.atomic.AtomicInteger currentCount -> l
    com.newland.payment.ui.view.CommonDialog$TimeOutOper timeOutOper -> m
    java.lang.Thread countDownThread -> n
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,int,com.newland.payment.ui.view.CommonDialog$TimeOutOper) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void setCancelListener(int,android.view.View$OnClickListener) -> a
    void setCancelListener(int,android.view.View$OnClickListener,int) -> a
    void setMiddleListener(int,android.view.View$OnClickListener) -> b
    void setSureListener(int,android.view.View$OnClickListener) -> c
    void setSureListener(int,android.view.View$OnClickListener,int) -> b
    void startCountDown() -> a
    void stopCountDown() -> b
    void onTimeOut() -> c
    void dismiss() -> dismiss
    void setTitle(int) -> setTitle
    void setTitle(java.lang.String) -> a
    void setContent(java.lang.String) -> b
    void setContent(int) -> a
    void setWidth(int) -> b
    android.view.View access$000(com.newland.payment.ui.view.CommonDialog) -> a
    void access$100(com.newland.payment.ui.view.CommonDialog) -> b
    java.lang.Thread access$200(com.newland.payment.ui.view.CommonDialog) -> c
    java.util.concurrent.atomic.AtomicInteger access$300(com.newland.payment.ui.view.CommonDialog) -> d
    void access$400(com.newland.payment.ui.view.CommonDialog) -> e
    com.newland.payment.ui.view.CommonDialog$TimeOutOper access$500(com.newland.payment.ui.view.CommonDialog) -> f
    android.widget.TextView access$600(com.newland.payment.ui.view.CommonDialog) -> g
    android.widget.TextView access$700(com.newland.payment.ui.view.CommonDialog) -> h
    android.widget.TextView access$800(com.newland.payment.ui.view.CommonDialog) -> i
com.newland.payment.ui.view.CommonDialog$1 -> com.newland.payment.ui.view.CommonDialog$1:
    com.newland.payment.ui.view.CommonDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.CommonDialog) -> <init>
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.newland.payment.ui.view.CommonDialog$10 -> com.newland.payment.ui.view.CommonDialog$2:
    int[] $SwitchMap$com$newland$payment$ui$view$CommonDialog$TimeOutOper -> a
    void <clinit>() -> <clinit>
com.newland.payment.ui.view.CommonDialog$2 -> com.newland.payment.ui.view.CommonDialog$3:
    com.newland.payment.ui.view.CommonDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.CommonDialog) -> <init>
    void onShow(android.content.DialogInterface) -> onShow
com.newland.payment.ui.view.CommonDialog$3 -> com.newland.payment.ui.view.CommonDialog$4:
    android.view.View$OnClickListener val$listenerCancel -> a
    com.newland.payment.ui.view.CommonDialog this$0 -> b
    void <init>(com.newland.payment.ui.view.CommonDialog,android.view.View$OnClickListener) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CommonDialog$4 -> com.newland.payment.ui.view.CommonDialog$5:
    android.view.View$OnClickListener val$listenerCancel -> a
    com.newland.payment.ui.view.CommonDialog this$0 -> b
    void <init>(com.newland.payment.ui.view.CommonDialog,android.view.View$OnClickListener) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CommonDialog$5 -> com.newland.payment.ui.view.CommonDialog$6:
    android.view.View$OnClickListener val$listenerMiddle -> a
    com.newland.payment.ui.view.CommonDialog this$0 -> b
    void <init>(com.newland.payment.ui.view.CommonDialog,android.view.View$OnClickListener) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CommonDialog$6 -> com.newland.payment.ui.view.CommonDialog$7:
    android.view.View$OnClickListener val$listenerSure -> a
    com.newland.payment.ui.view.CommonDialog this$0 -> b
    void <init>(com.newland.payment.ui.view.CommonDialog,android.view.View$OnClickListener) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CommonDialog$7 -> com.newland.payment.ui.view.CommonDialog$8:
    android.view.View$OnClickListener val$listenerSure -> a
    com.newland.payment.ui.view.CommonDialog this$0 -> b
    void <init>(com.newland.payment.ui.view.CommonDialog,android.view.View$OnClickListener) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CommonDialog$8 -> com.newland.payment.ui.view.CommonDialog$9:
    com.newland.payment.ui.view.CommonDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.CommonDialog) -> <init>
    void run() -> run
com.newland.payment.ui.view.CommonDialog$9 -> com.newland.payment.ui.view.CommonDialog$10:
    com.newland.payment.ui.view.CommonDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.CommonDialog) -> <init>
    void run() -> run
com.newland.payment.ui.view.CommonDialog$TimeOutOper -> com.newland.payment.ui.view.CommonDialog$TimeOutOper:
    com.newland.payment.ui.view.CommonDialog$TimeOutOper NONE -> NONE
    com.newland.payment.ui.view.CommonDialog$TimeOutOper CANCEL -> CANCEL
    com.newland.payment.ui.view.CommonDialog$TimeOutOper SURE -> SURE
    com.newland.payment.ui.view.CommonDialog$TimeOutOper MIDDLE -> MIDDLE
    com.newland.payment.ui.view.CommonDialog$TimeOutOper[] $VALUES -> a
    com.newland.payment.ui.view.CommonDialog$TimeOutOper[] values() -> values
    com.newland.payment.ui.view.CommonDialog$TimeOutOper valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.ui.view.CommonInputDialog -> com.newland.payment.ui.view.a:
    android.view.View view -> a
    android.widget.LinearLayout llMain -> b
    android.widget.TextView txtTitle -> c
    android.widget.EditText etContent -> d
    android.widget.TextView txtCancel -> e
    android.widget.TextView txtSure -> f
    android.widget.TextView txtMiddle -> g
    android.widget.ImageView ivLine -> h
    android.widget.ImageView ivLineMiddle -> i
    android.content.Context context -> j
    void <init>(android.content.Context) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void setCancelListener(int,android.view.View$OnClickListener) -> a
    void setSureListener(int,android.view.View$OnClickListener) -> b
    void setTitle(int) -> setTitle
    void setContent(java.lang.String) -> a
    java.lang.String getContent() -> a
    void setMaxCharacterNum(int) -> a
    void setSingleLine() -> b
    int getCharacterNum(java.lang.String) -> b
    int getChineseNum(java.lang.String) -> c
    android.widget.EditText access$000(com.newland.payment.ui.view.CommonInputDialog) -> a
    int access$100(com.newland.payment.ui.view.CommonInputDialog,java.lang.String) -> a
com.newland.payment.ui.view.CommonInputDialog$1 -> com.newland.payment.ui.view.a$1:
    com.newland.payment.ui.view.CommonInputDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.CommonInputDialog) -> <init>
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.newland.payment.ui.view.CommonInputDialog$2 -> com.newland.payment.ui.view.a$2:
    com.newland.payment.ui.view.CommonInputDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.CommonInputDialog) -> <init>
    void onShow(android.content.DialogInterface) -> onShow
com.newland.payment.ui.view.CommonInputDialog$3 -> com.newland.payment.ui.view.a$3:
    android.view.View$OnClickListener val$listenerCancel -> a
    com.newland.payment.ui.view.CommonInputDialog this$0 -> b
    void <init>(com.newland.payment.ui.view.CommonInputDialog,android.view.View$OnClickListener) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CommonInputDialog$5 -> com.newland.payment.ui.view.a$4:
    android.view.View$OnClickListener val$listenerSure -> a
    com.newland.payment.ui.view.CommonInputDialog this$0 -> b
    void <init>(com.newland.payment.ui.view.CommonInputDialog,android.view.View$OnClickListener) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CommonInputDialog$6 -> com.newland.payment.ui.view.a$5:
    int val$maxCharacter -> a
    com.newland.payment.ui.view.CommonInputDialog this$0 -> b
    void <init>(com.newland.payment.ui.view.CommonInputDialog,int) -> <init>
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.newland.payment.ui.view.CommonListDialog -> com.newland.payment.ui.view.b:
    android.widget.ListView lv -> a
    android.widget.TextView txtTitle -> b
    android.widget.TextView txtCancel -> c
    android.widget.TextView txtSure -> d
    android.view.View view -> e
    com.newland.payment.ui.listener.OnListDialogClickListener listenerSure -> f
    android.view.View$OnClickListener listenerCancel -> g
    com.newland.payment.ui.adapter.MenuSelectAdapter menuSelectAdapter -> h
    void <init>(android.content.Context,int,java.lang.String[],com.newland.payment.ui.listener.OnListDialogClickListener) -> <init>
    void <init>(android.content.Context,java.lang.String,java.lang.String[],int,android.widget.AdapterView$OnItemClickListener,com.newland.payment.ui.listener.OnListDialogClickListener,android.view.View$OnClickListener) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initData() -> b
    void initEvent() -> c
    void setCheck(int) -> a
    com.newland.payment.ui.listener.OnListDialogClickListener access$000(com.newland.payment.ui.view.CommonListDialog) -> a
    com.newland.payment.ui.adapter.MenuSelectAdapter access$100(com.newland.payment.ui.view.CommonListDialog) -> b
    android.view.View$OnClickListener access$200(com.newland.payment.ui.view.CommonListDialog) -> c
com.newland.payment.ui.view.CommonListDialog$1 -> com.newland.payment.ui.view.b$1:
    com.newland.payment.ui.view.CommonListDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.CommonListDialog) -> <init>
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.newland.payment.ui.view.CommonListDialog$2 -> com.newland.payment.ui.view.b$2:
    com.newland.payment.ui.view.CommonListDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.CommonListDialog) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CommonListDialog$3 -> com.newland.payment.ui.view.b$3:
    com.newland.payment.ui.view.CommonListDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.CommonListDialog) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.CustomScrollView -> com.newland.payment.ui.view.CustomScrollView:
    boolean isScroll -> a
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void initData() -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.newland.payment.ui.view.CustomScrollView$1 -> com.newland.payment.ui.view.CustomScrollView$1:
    com.newland.payment.ui.view.CustomScrollView this$0 -> a
    void <init>(com.newland.payment.ui.view.CustomScrollView) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.newland.payment.ui.view.CustomViewPager -> com.newland.payment.ui.view.CustomViewPager:
    boolean isScroll -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.newland.payment.ui.view.DotViewPager -> com.newland.payment.ui.view.DotViewPager:
    android.support.v4.view.ViewPager viewPager -> a
    android.widget.LinearLayout llDot -> b
    android.content.Context context -> c
    int resCurrentDot -> d
    int resNormalDot -> e
    android.support.v4.view.PagerAdapter pagerAdapter -> f
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void initData(android.content.Context) -> a
    void initEvent() -> b
    void setAdapter(android.support.v4.view.PagerAdapter,int) -> setAdapter
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void notifyDot() -> a
    void notifyDot(int) -> a
    void setDotPosition(int,int,int,int,int) -> setDotPosition
    void setViewPagerPosition(int,int,int,int) -> setViewPagerPosition
    void selDotStyle(int) -> b
    int getCurrentItem() -> getCurrentItem
    void access$000(com.newland.payment.ui.view.DotViewPager,int) -> a
com.newland.payment.ui.view.DotViewPager$1 -> com.newland.payment.ui.view.DotViewPager$1:
    com.newland.payment.ui.view.DotViewPager this$0 -> a
    void <init>(com.newland.payment.ui.view.DotViewPager) -> <init>
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.newland.payment.ui.view.GridViewInnerScroll -> com.newland.payment.ui.view.GridViewInnerScroll:
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onMeasure(int,int) -> onMeasure
com.newland.payment.ui.view.HandWriteView -> com.newland.payment.ui.view.HandWriteView:
    android.content.Context context -> a
    android.graphics.Paint paint -> b
    android.graphics.Canvas cacheCanvas -> c
    android.graphics.Bitmap cachebBitmap -> d
    android.graphics.Bitmap bg -> e
    android.graphics.Path path -> f
    int width -> g
    int height -> h
    float startX -> i
    float startY -> j
    float clickX -> k
    float clickY -> l
    java.lang.String signatureCode -> m
    android.graphics.RectF dirtyRect -> n
    long count -> o
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onMeasure(int,int) -> onMeasure
    int measureHeight(int) -> a
    int measureWidth(int) -> b
    void init(int,int) -> a
    void drawBackground(android.graphics.Canvas) -> a
    void drawSignatureCode() -> a
    java.lang.String formatString(java.lang.String) -> a
    void clear() -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    android.graphics.Bitmap getCachebBitmap() -> getCachebBitmap
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void touchDown(android.view.MotionEvent) -> a
    void touchMove(android.view.MotionEvent) -> b
    void touchUp(android.view.MotionEvent) -> c
    void resetDirtyRect() -> d
    java.lang.String getSignatureCode() -> getSignatureCode
    void setSignatureCode(java.lang.String) -> setSignatureCode
    boolean isValid() -> c
com.newland.payment.ui.view.IpEditText -> com.newland.payment.ui.view.IpEditText:
    android.widget.EditText etIp1 -> a
    android.widget.EditText etIp2 -> b
    android.widget.EditText etIp3 -> c
    android.widget.EditText etIp4 -> d
    int currentIndex -> e
    java.lang.String currentIpPoint -> f
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> g
    java.lang.String currentIp -> h
    android.widget.EditText[] ets -> i
    com.newland.payment.ui.listener.StringValueChangeListener stringValueChangeListener -> j
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void initCommon(android.content.Context,java.lang.String,com.newland.payment.ui.view.KeyboardNumber,com.newland.payment.ui.listener.StringValueChangeListener) -> a
    void init(android.content.Context) -> a
    void initView(android.content.Context) -> b
    java.lang.String getRealIpPoint(java.lang.String) -> a
    boolean focusNext() -> a
    boolean focusBack() -> b
    void initEvent() -> c
    void onKeyClick(int) -> a
    void onChangeText(java.lang.String) -> b
    java.lang.String getIp() -> getIp
    void setIp(java.lang.String) -> setIp
    void setFocus() -> setFocus
    com.newland.payment.ui.view.KeyboardNumber access$000(com.newland.payment.ui.view.IpEditText) -> a
    int access$102(com.newland.payment.ui.view.IpEditText,int) -> a
    java.lang.String access$200(com.newland.payment.ui.view.IpEditText) -> b
    java.lang.String access$202(com.newland.payment.ui.view.IpEditText,java.lang.String) -> a
    java.lang.String access$302(com.newland.payment.ui.view.IpEditText,java.lang.String) -> b
    java.lang.String access$300(com.newland.payment.ui.view.IpEditText) -> c
    com.newland.payment.ui.listener.StringValueChangeListener access$400(com.newland.payment.ui.view.IpEditText) -> d
com.newland.payment.ui.view.IpEditText$1 -> com.newland.payment.ui.view.IpEditText$1:
    com.newland.payment.ui.view.IpEditText this$0 -> a
    void <init>(com.newland.payment.ui.view.IpEditText) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.IpEditText$2 -> com.newland.payment.ui.view.IpEditText$2:
    com.newland.payment.ui.view.IpEditText this$0 -> a
    void <init>(com.newland.payment.ui.view.IpEditText) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.view.KeyboardLockScreen -> com.newland.payment.ui.view.KeyboardLockScreen:
    int maxSize -> a
    java.lang.String value -> b
    android.content.Context context -> c
    com.newland.payment.interfaces.OnKeyBoardValueChangeListener onKeyBoardValueChangeListener -> d
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initData() -> a
    void setOnKeyBoardValueChangeListener(com.newland.payment.interfaces.OnKeyBoardValueChangeListener) -> setOnKeyBoardValueChangeListener
    void setMaxSize(int) -> setMaxSize
com.newland.payment.ui.view.KeyboardNumber -> com.newland.payment.ui.view.KeyboardNumber:
    android.widget.ImageView ivEnter -> a
    android.widget.ImageView ivCancel -> b
    android.widget.ImageView ivBackspeace -> c
    android.widget.ImageView iv0 -> d
    android.widget.ImageView iv1 -> e
    android.widget.ImageView iv2 -> f
    android.widget.ImageView iv3 -> g
    android.widget.ImageView iv4 -> h
    android.widget.ImageView iv5 -> i
    android.widget.ImageView iv6 -> j
    android.widget.ImageView iv7 -> k
    android.widget.ImageView iv8 -> l
    android.widget.ImageView iv9 -> m
    android.widget.ImageView ivStar -> n
    android.widget.ImageView ivWell -> o
    android.widget.ImageView ivDot -> p
    android.content.Context context -> q
    boolean isEnterGone -> r
    android.view.View[] buttons -> s
    android.widget.ImageView[] numButtons -> t
    android.view.View view -> u
    com.newland.payment.ui.listener.IKeyBoardListener keyBoardListener -> v
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initData() -> a
    void initView(android.view.View) -> a
    void initEvent() -> b
    void setKeyBoardListener(com.newland.payment.ui.listener.IKeyBoardListener) -> setKeyBoardListener
    int getCodeByView(android.view.View) -> b
    com.newland.payment.ui.listener.IKeyBoardListener getKeyBoardListener() -> getKeyBoardListener
    void setEnterNotGone() -> setEnterNotGone
    void setRandomNumber() -> setRandomNumber
    int[] getRandomNumber() -> getRandomNumber
    void setIpStyle() -> setIpStyle
    void setTelephoneKeyDisplay(boolean) -> setTelephoneKeyDisplay
    com.newland.payment.ui.listener.IKeyBoardListener access$000(com.newland.payment.ui.view.KeyboardNumber) -> a
    boolean access$100(com.newland.payment.ui.view.KeyboardNumber) -> b
    int access$200(com.newland.payment.ui.view.KeyboardNumber,android.view.View) -> a
com.newland.payment.ui.view.KeyboardNumber$1 -> com.newland.payment.ui.view.KeyboardNumber$1:
    com.newland.payment.ui.view.KeyboardNumber this$0 -> a
    void <init>(com.newland.payment.ui.view.KeyboardNumber) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
com.newland.payment.ui.view.KeyboardNumber$2 -> com.newland.payment.ui.view.KeyboardNumber$2:
    com.newland.payment.ui.view.KeyboardNumber this$0 -> a
    void <init>(com.newland.payment.ui.view.KeyboardNumber) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.KeyboardPassword -> com.newland.payment.ui.view.KeyboardPassword:
    int maxSize -> a
    java.lang.String value -> b
    android.content.Context context -> c
    com.newland.payment.interfaces.OnKeyBoardValueChangeListener onKeyBoardValueChangeListener -> d
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initData() -> a
    void setOnKeyBoardValueChangeListener(com.newland.payment.interfaces.OnKeyBoardValueChangeListener) -> setOnKeyBoardValueChangeListener
    void setMaxSize(int) -> setMaxSize
com.newland.payment.ui.view.LoadingView -> com.newland.payment.ui.view.LoadingView:
    android.widget.LinearLayout llMain -> a
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
com.newland.payment.ui.view.NumberKeyboardView -> com.newland.payment.ui.view.NumberKeyboardView:
    android.widget.EditText editText -> a
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void initView(android.view.View) -> a
    void onClick(android.view.View) -> onClick
    void setInputEdittext(android.widget.EditText) -> setInputEdittext
com.newland.payment.ui.view.OperatorNoListDialog -> com.newland.payment.ui.view.c:
    android.widget.ListView operatorList -> b
    java.util.ArrayList mList -> a
    void <init>(android.content.Context,java.util.ArrayList) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
com.newland.payment.ui.view.OperatorPasswordDialog -> com.newland.payment.ui.view.d:
    com.newland.payment.ui.view.PasswordInputView passwordInputView -> a
    com.newland.payment.ui.view.KeyboardNumber keyBoardNumber -> b
    int pwdLenth -> c
    android.widget.TextView tvTitle -> d
    android.widget.TextView tvTip1 -> e
    android.widget.TextView tvTip2 -> f
    android.widget.TextView tvTip3 -> g
    android.widget.LinearLayout llPassword -> h
    java.lang.String titleString -> i
    java.lang.String tip1String -> j
    java.lang.String tip2String -> k
    java.lang.String tip3String -> l
    java.lang.String tempString -> m
    java.lang.String passwordValue -> n
    int currentPasswordLength -> o
    com.newland.payment.ui.view.OperatorPasswordDialog$InputEventListener inputEventListener -> p
    void <init>(android.content.Context,int,int,int,com.newland.payment.ui.view.OperatorPasswordDialog$InputEventListener) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> b
    java.lang.String getPassword() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void dismiss() -> dismiss
    void setMTitle(java.lang.String) -> a
    java.lang.String access$000(com.newland.payment.ui.view.OperatorPasswordDialog) -> a
    int access$100(com.newland.payment.ui.view.OperatorPasswordDialog) -> b
    android.widget.LinearLayout access$200(com.newland.payment.ui.view.OperatorPasswordDialog) -> c
    java.lang.String access$302(com.newland.payment.ui.view.OperatorPasswordDialog,java.lang.String) -> a
    com.newland.payment.ui.view.OperatorPasswordDialog$InputEventListener access$400(com.newland.payment.ui.view.OperatorPasswordDialog) -> d
    java.lang.String access$300(com.newland.payment.ui.view.OperatorPasswordDialog) -> e
    java.lang.String access$002(com.newland.payment.ui.view.OperatorPasswordDialog,java.lang.String) -> b
    int access$500(com.newland.payment.ui.view.OperatorPasswordDialog) -> f
    int access$502(com.newland.payment.ui.view.OperatorPasswordDialog,int) -> a
com.newland.payment.ui.view.OperatorPasswordDialog$1 -> com.newland.payment.ui.view.d$1:
    com.newland.payment.ui.view.OperatorPasswordDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.OperatorPasswordDialog,int) -> <init>
    void onEnter() -> a
    void onCancel() -> b
    void onChangeText(java.lang.String) -> a
com.newland.payment.ui.view.OperatorPasswordDialog$InputEventListener -> com.newland.payment.ui.view.d$a:
    void onCancel() -> a
    void onConfirm(android.app.Dialog,java.lang.String) -> a
com.newland.payment.ui.view.OperatorPasswordFragmentDialog -> com.newland.payment.ui.view.e:
    com.newland.payment.ui.view.PasswordInputView passwordInputView -> a
    com.newland.payment.ui.view.KeyboardNumber keyBoardNumber -> b
    int pwdLenth -> c
    android.widget.TextView tvTitle -> d
    android.widget.TextView tvTip1 -> e
    android.widget.TextView tvTip2 -> f
    android.widget.TextView tvTip3 -> g
    android.widget.LinearLayout llPassword -> h
    java.lang.String titleString -> i
    java.lang.String tip1String -> j
    java.lang.String tip2String -> k
    java.lang.String tip3String -> l
    java.lang.String tempString -> m
    java.lang.String passwordValue -> n
    int currentPasswordLength -> o
    com.newland.payment.ui.view.OperatorPasswordDialog$InputEventListener inputEventListener -> p
    com.newland.payment.ui.listener.KeyDownListener keyDownListener -> q
    void <init>(android.content.Context,int,int,int,com.newland.payment.ui.view.OperatorPasswordDialog$InputEventListener) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void setKeyDownListener(com.newland.payment.ui.listener.KeyDownListener) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void dismiss() -> dismiss
    java.lang.String access$000(com.newland.payment.ui.view.OperatorPasswordFragmentDialog) -> a
    int access$100(com.newland.payment.ui.view.OperatorPasswordFragmentDialog) -> b
    android.widget.LinearLayout access$200(com.newland.payment.ui.view.OperatorPasswordFragmentDialog) -> c
    java.lang.String access$302(com.newland.payment.ui.view.OperatorPasswordFragmentDialog,java.lang.String) -> a
    com.newland.payment.ui.view.OperatorPasswordDialog$InputEventListener access$400(com.newland.payment.ui.view.OperatorPasswordFragmentDialog) -> d
    java.lang.String access$300(com.newland.payment.ui.view.OperatorPasswordFragmentDialog) -> e
    java.lang.String access$002(com.newland.payment.ui.view.OperatorPasswordFragmentDialog,java.lang.String) -> b
    int access$500(com.newland.payment.ui.view.OperatorPasswordFragmentDialog) -> f
    int access$502(com.newland.payment.ui.view.OperatorPasswordFragmentDialog,int) -> a
com.newland.payment.ui.view.OperatorPasswordFragmentDialog$1 -> com.newland.payment.ui.view.e$1:
    com.newland.payment.ui.view.OperatorPasswordFragmentDialog this$0 -> a
    void <init>(com.newland.payment.ui.view.OperatorPasswordFragmentDialog,int) -> <init>
    void onEnter() -> a
    void onChangeText(java.lang.String) -> a
com.newland.payment.ui.view.PasswordInputView -> com.newland.payment.ui.view.PasswordInputView:
    java.lang.String value -> a
    android.widget.LinearLayout llMain -> b
    int lenth -> c
    android.content.Context context -> d
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void setPassword(java.lang.String) -> setPassword
    void setPwdViewLenth(int) -> setPwdViewLenth
com.newland.payment.ui.view.SettingChooseView -> com.newland.payment.ui.view.SettingChooseView:
    android.widget.TextView txtTitle -> a
    android.widget.TextView txtContent -> b
    com.newland.payment.ui.view.CommonDialog dialog -> c
    android.content.Context context -> d
    com.newland.payment.ui.view.CommonListDialog listDialog -> e
    boolean enabled -> f
    com.newland.payment.ui.listener.StringValueChangeListener valueChangeListener -> g
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void dismissDialog() -> a
    void setParamData(int,int,java.lang.String,int,java.lang.String,java.lang.String,int) -> setParamData
    void setParamData(int,int,java.lang.String,int,java.lang.String,java.lang.String,com.newland.payment.ui.listener.StringValueChangeListener) -> setParamData
    void setParamData(int,int,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String) -> setParamData
    void setParamData(int,int,java.lang.String,int,java.lang.String,java.lang.String) -> setParamData
    void setParamValue(java.lang.String,java.lang.String) -> a
    void setValueChangeListener(com.newland.payment.ui.listener.StringValueChangeListener) -> setValueChangeListener
    void setDialogWidth(int) -> setDialogWidth
    void setDisabled(java.lang.String) -> setDisabled
    void setContent(java.lang.String) -> setContent
    com.newland.payment.ui.view.CommonDialog getDialog() -> getDialog
    void setDialog(com.newland.payment.ui.view.CommonDialog) -> setDialog
    boolean access$000(com.newland.payment.ui.view.SettingChooseView) -> a
    com.newland.payment.ui.view.CommonDialog access$100(com.newland.payment.ui.view.SettingChooseView) -> b
    com.newland.payment.ui.view.CommonListDialog access$200(com.newland.payment.ui.view.SettingChooseView) -> c
    void access$300(com.newland.payment.ui.view.SettingChooseView,java.lang.String,java.lang.String) -> a
    com.newland.payment.ui.listener.StringValueChangeListener access$400(com.newland.payment.ui.view.SettingChooseView) -> d
    android.content.Context access$500(com.newland.payment.ui.view.SettingChooseView) -> e
com.newland.payment.ui.view.SettingChooseView$1 -> com.newland.payment.ui.view.SettingChooseView$1:
    com.newland.payment.ui.view.SettingChooseView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingChooseView) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingChooseView$10 -> com.newland.payment.ui.view.SettingChooseView$2:
    int val$resItem2 -> a
    java.lang.String val$key -> b
    java.lang.String val$valueItem2 -> c
    com.newland.payment.ui.view.SettingChooseView this$0 -> d
    void <init>(com.newland.payment.ui.view.SettingChooseView,int,java.lang.String,java.lang.String) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingChooseView$11 -> com.newland.payment.ui.view.SettingChooseView$3:
    java.lang.String value -> a
    java.lang.String val$key -> b
    java.lang.String val$valueItem1 -> c
    int val$resItem1 -> d
    java.lang.String val$valueItem2 -> e
    int val$resItem2 -> f
    com.newland.payment.ui.view.SettingChooseView this$0 -> g
    void <init>(com.newland.payment.ui.view.SettingChooseView,java.lang.String,java.lang.String,int,java.lang.String,int) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.view.SettingChooseView$14 -> com.newland.payment.ui.view.SettingChooseView$4:
    java.lang.String val$key -> a
    java.lang.String val$value -> b
    com.newland.payment.ui.view.SettingChooseView this$0 -> c
    void <init>(com.newland.payment.ui.view.SettingChooseView,java.lang.String,java.lang.String) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.view.SettingChooseView$15 -> com.newland.payment.ui.view.SettingChooseView$5:
    java.lang.String val$msg -> a
    com.newland.payment.ui.view.SettingChooseView this$0 -> b
    void <init>(com.newland.payment.ui.view.SettingChooseView,java.lang.String) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingChooseView$2 -> com.newland.payment.ui.view.SettingChooseView$6:
    int val$resItem1 -> a
    java.lang.String val$key -> b
    java.lang.String val$valueItem1 -> c
    com.newland.payment.ui.view.SettingChooseView this$0 -> d
    void <init>(com.newland.payment.ui.view.SettingChooseView,int,java.lang.String,java.lang.String) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingChooseView$3 -> com.newland.payment.ui.view.SettingChooseView$7:
    int val$resItem2 -> a
    java.lang.String val$key -> b
    java.lang.String val$valueItem2 -> c
    com.newland.payment.ui.view.SettingChooseView this$0 -> d
    void <init>(com.newland.payment.ui.view.SettingChooseView,int,java.lang.String,java.lang.String) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingChooseView$4 -> com.newland.payment.ui.view.SettingChooseView$8:
    java.lang.String value -> a
    java.lang.String val$key -> b
    java.lang.String val$valueItem1 -> c
    int val$resItem1 -> d
    java.lang.String val$valueItem2 -> e
    int val$resItem2 -> f
    com.newland.payment.ui.view.SettingChooseView this$0 -> g
    void <init>(com.newland.payment.ui.view.SettingChooseView,java.lang.String,java.lang.String,int,java.lang.String,int) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.view.SettingChooseView$5 -> com.newland.payment.ui.view.SettingChooseView$9:
    int val$resItem1 -> a
    java.lang.String val$key -> b
    java.lang.String val$valueItem1 -> c
    int val$resItem2 -> d
    java.lang.String val$valueItem2 -> e
    com.newland.payment.ui.view.SettingChooseView this$0 -> f
    void <init>(com.newland.payment.ui.view.SettingChooseView,int,java.lang.String,java.lang.String,int,java.lang.String) -> <init>
    void onClick(int) -> a
com.newland.payment.ui.view.SettingChooseView$6 -> com.newland.payment.ui.view.SettingChooseView$10:
    java.lang.String value -> a
    java.lang.String val$key -> b
    java.lang.String val$valueItem1 -> c
    int val$resItem1 -> d
    java.lang.String val$valueItem2 -> e
    int val$resItem2 -> f
    com.newland.payment.ui.view.SettingChooseView this$0 -> g
    void <init>(com.newland.payment.ui.view.SettingChooseView,java.lang.String,java.lang.String,int,java.lang.String,int) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.view.SettingChooseView$7 -> com.newland.payment.ui.view.SettingChooseView$11:
    int val$resItem1 -> a
    java.lang.String val$key -> b
    java.lang.String val$valueItem1 -> c
    int val$resItem2 -> d
    java.lang.String val$valueItem2 -> e
    int val$resItem3 -> f
    java.lang.String val$valueItem3 -> g
    com.newland.payment.ui.view.SettingChooseView this$0 -> h
    void <init>(com.newland.payment.ui.view.SettingChooseView,int,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String) -> <init>
    void onClick(int) -> a
com.newland.payment.ui.view.SettingChooseView$8 -> com.newland.payment.ui.view.SettingChooseView$12:
    java.lang.String value -> a
    java.lang.String val$key -> b
    java.lang.String val$valueItem1 -> c
    int val$resItem1 -> d
    java.lang.String val$valueItem2 -> e
    int val$resItem2 -> f
    java.lang.String val$valueItem3 -> g
    int val$resItem3 -> h
    com.newland.payment.ui.view.SettingChooseView this$0 -> i
    void <init>(com.newland.payment.ui.view.SettingChooseView,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,int) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.view.SettingChooseView$9 -> com.newland.payment.ui.view.SettingChooseView$13:
    int val$resItem1 -> a
    java.lang.String val$key -> b
    java.lang.String val$valueItem1 -> c
    com.newland.payment.ui.view.SettingChooseView this$0 -> d
    void <init>(com.newland.payment.ui.view.SettingChooseView,int,java.lang.String,java.lang.String) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingDateView -> com.newland.payment.ui.view.SettingDateView:
    android.widget.TextView txtTitle -> a
    android.widget.TextView txtContent -> b
    android.app.Dialog dialog -> c
    android.content.Context context -> d
    com.newland.payment.ui.listener.LongValueChangeListener valueChangeListener -> e
    int dateType -> f
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initView() -> b
    void initData() -> c
    void initEvent() -> d
    void dismissDialog() -> a
    void setTitle(java.lang.String) -> setTitle
    void setTitle(int) -> setTitle
    void setContent(java.lang.String) -> setContent
    void setValueChangeListener(com.newland.payment.ui.listener.LongValueChangeListener) -> setValueChangeListener
    void setTimeStyle() -> setTimeStyle
    android.app.Dialog access$000(com.newland.payment.ui.view.SettingDateView) -> a
    int access$100(com.newland.payment.ui.view.SettingDateView) -> b
    android.app.Dialog access$002(com.newland.payment.ui.view.SettingDateView,android.app.Dialog) -> a
    android.content.Context access$200(com.newland.payment.ui.view.SettingDateView) -> c
    android.widget.TextView access$300(com.newland.payment.ui.view.SettingDateView) -> d
    android.widget.TextView access$400(com.newland.payment.ui.view.SettingDateView) -> e
    com.newland.payment.ui.listener.LongValueChangeListener access$500(com.newland.payment.ui.view.SettingDateView) -> f
com.newland.payment.ui.view.SettingDateView$1 -> com.newland.payment.ui.view.SettingDateView$1:
    com.newland.payment.ui.view.SettingDateView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingDateView) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingDateView$1$1 -> com.newland.payment.ui.view.SettingDateView$1$1:
    com.newland.payment.ui.view.SettingDateView$1 this$1 -> a
    void <init>(com.newland.payment.ui.view.SettingDateView$1) -> <init>
    void onChange(long) -> a
com.newland.payment.ui.view.SettingDateView$1$2 -> com.newland.payment.ui.view.SettingDateView$1$2:
    com.newland.payment.ui.view.SettingDateView$1 this$1 -> a
    void <init>(com.newland.payment.ui.view.SettingDateView$1) -> <init>
    void onChange(long) -> a
com.newland.payment.ui.view.SettingEditView -> com.newland.payment.ui.view.SettingEditView:
    android.widget.TextView txtTitle -> a
    android.widget.EditText etContent -> b
    android.view.View vShade -> c
    android.widget.TextView txtMaxSize -> d
    android.widget.TextView txtCurrentSize -> e
    com.newland.payment.ui.view.OperatorPasswordDialog operatorPasswordDialog -> f
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> g
    com.newland.payment.ui.listener.StringValueChangeListener stringValueChangeListener -> h
    com.newland.payment.ui.listener.StringValueChangeListener checkSuccessListener -> i
    int maxLength -> j
    int minLength -> k
    int maxCharacter -> l
    java.util.List valueList -> m
    java.lang.Long maxValue -> n
    java.lang.Long minValue -> o
    java.lang.Integer fixLength -> p
    android.content.Context context -> q
    android.text.InputFilter[] inputFilters -> r
    boolean enabled -> s
    java.lang.String setKey -> t
    java.lang.Integer resTipMinValue -> u
    boolean isCheck -> v
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initView(android.content.Context) -> b
    void initEvent() -> f
    void setValueChangeListener(com.newland.payment.ui.listener.StringValueChangeListener) -> setValueChangeListener
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setHint(java.lang.String) -> setHint
    void setTitle(int) -> setTitle
    void setHint(int) -> setHint
    java.lang.String getValue() -> getValue
    void setKeyboardNumber(com.newland.payment.ui.view.KeyboardNumber) -> setKeyboardNumber
    void setKeyboardNumber(com.newland.payment.ui.view.KeyboardNumber,int) -> setKeyboardNumber
    void setInputType(int) -> setInputType
    void setMaxLength(int) -> setMaxLength
    void setFocus() -> setFocus
    void setContent(java.lang.String) -> setContent
    void setParamData(java.lang.String,int) -> setParamData
    void setParamData(int,com.newland.payment.ui.view.KeyboardNumber,java.lang.String) -> setParamData
    void setParamData(java.lang.String) -> setParamData
    void setParamData(java.lang.String,boolean) -> setParamData
    void setParamData(java.lang.String,com.newland.payment.ui.listener.StringValueChangeListener) -> setParamData
    void setParamData(java.lang.String,boolean,com.newland.payment.ui.listener.StringValueChangeListener) -> setParamData
    void setParamData(int,java.lang.String) -> setParamData
    void setParamData(int,java.lang.String,com.newland.payment.ui.listener.StringValueChangeListener) -> setParamData
    boolean disposeCheck() -> a
    void setParamData(int,java.lang.String,boolean,com.newland.payment.ui.listener.StringValueChangeListener) -> setParamData
    void setSafePassword() -> setSafePassword
    void setManagePassword() -> setManagePassword
    void setErrorStyle() -> setErrorStyle
    void setNormalStyle() -> setNormalStyle
    void setMaxValue(long) -> setMaxValue
    void setMinValue(long) -> setMinValue
    void setMinValue(long,java.lang.Integer) -> setMinValue
    java.lang.Integer getFixLength() -> getFixLength
    void setFixLength(java.lang.Integer) -> setFixLength
    void setMinLength(int) -> setMinLength
    android.text.Editable getContent() -> getContent
    boolean isCheck() -> b
    void addValueList(java.lang.String) -> a
    void disposeValue(java.lang.String) -> b
    void setSuccess(java.lang.String) -> setSuccess
    void setTitleWidth(int) -> setTitleWidth
    void setDigits(java.lang.String) -> setDigits
    void showTextSize() -> c
    void setEditTextEnabled(boolean) -> setEditTextEnabled
    void setWaterEnabled() -> setWaterEnabled
    void setWaterEnabled(int) -> setWaterEnabled
    void setWaterEnabled(java.lang.String) -> setWaterEnabled
    void setMaxCharacter(int) -> setMaxCharacter
    int getCharacterNum(java.lang.String) -> c
    int getChineseNum(java.lang.String) -> d
    boolean isShwoSystemKeyboard() -> d
    void hideSystemKeyboard() -> e
    void setCheckSuccessListener(com.newland.payment.ui.listener.StringValueChangeListener) -> setCheckSuccessListener
    void setEditTextEnabledNoChangeColor(boolean) -> setEditTextEnabledNoChangeColor
    int access$000(com.newland.payment.ui.view.SettingEditView,java.lang.String) -> a
    int access$100(com.newland.payment.ui.view.SettingEditView) -> a
    com.newland.payment.ui.view.KeyboardNumber access$200(com.newland.payment.ui.view.SettingEditView) -> b
    boolean access$300(com.newland.payment.ui.view.SettingEditView) -> c
    com.newland.payment.ui.listener.StringValueChangeListener access$400(com.newland.payment.ui.view.SettingEditView) -> d
    android.widget.EditText access$500(com.newland.payment.ui.view.SettingEditView) -> e
    int access$600(com.newland.payment.ui.view.SettingEditView) -> f
    boolean access$702(com.newland.payment.ui.view.SettingEditView,boolean) -> a
    void access$800(com.newland.payment.ui.view.SettingEditView,java.lang.String) -> b
    com.newland.payment.ui.view.OperatorPasswordDialog access$900(com.newland.payment.ui.view.SettingEditView) -> g
    android.view.View access$1000(com.newland.payment.ui.view.SettingEditView) -> h
    android.content.Context access$1100(com.newland.payment.ui.view.SettingEditView) -> i
    java.lang.String access$1200(com.newland.payment.ui.view.SettingEditView) -> j
    android.widget.TextView access$1300(com.newland.payment.ui.view.SettingEditView) -> k
com.newland.payment.ui.view.SettingEditView$1 -> com.newland.payment.ui.view.SettingEditView$1:
    com.newland.payment.ui.view.SettingEditView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView) -> <init>
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.newland.payment.ui.view.SettingEditView$10 -> com.newland.payment.ui.view.SettingEditView$2:
    com.newland.payment.ui.view.SettingEditView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView) -> <init>
    void onConfirm(android.app.Dialog,java.lang.String) -> a
    void onCancel() -> a
com.newland.payment.ui.view.SettingEditView$10$1 -> com.newland.payment.ui.view.SettingEditView$2$1:
    int result -> a
    com.newland.payment.ui.view.SettingEditView$10 this$1 -> b
    void <init>(com.newland.payment.ui.view.SettingEditView$10) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.view.SettingEditView$11 -> com.newland.payment.ui.view.SettingEditView$3:
    com.newland.payment.ui.view.SettingEditView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingEditView$12 -> com.newland.payment.ui.view.SettingEditView$4:
    java.lang.String val$value -> a
    com.newland.payment.ui.view.SettingEditView this$0 -> b
    void <init>(com.newland.payment.ui.view.SettingEditView,java.lang.String) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.view.SettingEditView$13 -> com.newland.payment.ui.view.SettingEditView$5:
    com.newland.payment.ui.view.SettingEditView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView) -> <init>
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.newland.payment.ui.view.SettingEditView$14 -> com.newland.payment.ui.view.SettingEditView$6:
    int count -> a
    java.lang.String val$message -> b
    com.newland.payment.ui.view.SettingEditView this$0 -> c
    void <init>(com.newland.payment.ui.view.SettingEditView,java.lang.String) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.view.SettingEditView$14$1 -> com.newland.payment.ui.view.SettingEditView$6$1:
    com.newland.payment.ui.view.SettingEditView$14 this$1 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView$14) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingEditView$2 -> com.newland.payment.ui.view.SettingEditView$7:
    com.newland.payment.ui.view.SettingEditView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView) -> <init>
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.newland.payment.ui.view.SettingEditView$3 -> com.newland.payment.ui.view.SettingEditView$8:
    com.newland.payment.ui.view.SettingEditView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView) -> <init>
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.newland.payment.ui.view.SettingEditView$4 -> com.newland.payment.ui.view.SettingEditView$9:
    com.newland.payment.ui.view.SettingEditView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingEditView$5 -> com.newland.payment.ui.view.SettingEditView$10:
    com.newland.payment.ui.view.SettingEditView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.newland.payment.ui.view.SettingEditView$5$1 -> com.newland.payment.ui.view.SettingEditView$10$1:
    com.newland.payment.ui.view.SettingEditView$5 this$1 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView$5) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.view.SettingEditView$6 -> com.newland.payment.ui.view.SettingEditView$11:
    com.newland.payment.ui.view.SettingEditView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView) -> <init>
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.newland.payment.ui.view.SettingEditView$7 -> com.newland.payment.ui.view.SettingEditView$12:
    com.newland.payment.ui.listener.StringValueChangeListener val$valueChangeListener -> a
    com.newland.payment.ui.view.SettingEditView this$0 -> b
    void <init>(com.newland.payment.ui.view.SettingEditView,com.newland.payment.ui.listener.StringValueChangeListener) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.view.SettingEditView$8 -> com.newland.payment.ui.view.SettingEditView$13:
    java.lang.String val$safePwd -> a
    com.newland.payment.ui.view.SettingEditView this$0 -> b
    void <init>(com.newland.payment.ui.view.SettingEditView,java.lang.String) -> <init>
    void onConfirm(android.app.Dialog,java.lang.String) -> a
    void onCancel() -> a
com.newland.payment.ui.view.SettingEditView$9 -> com.newland.payment.ui.view.SettingEditView$14:
    com.newland.payment.ui.view.SettingEditView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingEditView) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingIpView -> com.newland.payment.ui.view.SettingIpView:
    android.widget.TextView txtTitle -> a
    com.newland.payment.ui.view.IpEditText ipEditText -> b
    com.newland.payment.ui.view.KeyboardNumber keyboardNumber -> c
    android.content.Context context -> d
    java.lang.String tempKey -> e
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initEvent() -> a
    void initView(android.content.Context) -> b
    void setTitle(java.lang.String) -> setTitle
    void setTitle(int) -> setTitle
    java.lang.String getIp() -> getIp
    void setParamData(java.lang.String,com.newland.payment.ui.view.KeyboardNumber) -> setParamData
    void setTitleWidth(int) -> setTitleWidth
    com.newland.payment.ui.view.IpEditText access$000(com.newland.payment.ui.view.SettingIpView) -> a
    android.content.Context access$100(com.newland.payment.ui.view.SettingIpView) -> b
    com.newland.payment.ui.view.KeyboardNumber access$200(com.newland.payment.ui.view.SettingIpView) -> c
    java.lang.String access$300(com.newland.payment.ui.view.SettingIpView) -> d
com.newland.payment.ui.view.SettingIpView$1 -> com.newland.payment.ui.view.SettingIpView$1:
    com.newland.payment.ui.view.SettingIpView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingIpView) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingIpView$2 -> com.newland.payment.ui.view.SettingIpView$2:
    java.lang.String value -> a
    java.lang.String val$key -> b
    com.newland.payment.ui.view.SettingIpView this$0 -> c
    void <init>(com.newland.payment.ui.view.SettingIpView,java.lang.String) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.view.SettingIpView$2$1 -> com.newland.payment.ui.view.SettingIpView$2$1:
    com.newland.payment.ui.view.SettingIpView$2 this$1 -> a
    void <init>(com.newland.payment.ui.view.SettingIpView$2) -> <init>
    void onChange(java.lang.String) -> a
com.newland.payment.ui.view.SettingIpView$2$1$1 -> com.newland.payment.ui.view.SettingIpView$2$1$1:
    com.newland.payment.ui.view.SettingIpView$2$1 this$2 -> a
    void <init>(com.newland.payment.ui.view.SettingIpView$2$1) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.view.SettingSwitchView -> com.newland.payment.ui.view.SettingSwitchView:
    android.widget.TextView txtTitle -> a
    com.newland.payment.ui.view.SwitchView switchView -> b
    android.content.Context context -> c
    com.newland.payment.ui.listener.BooleanValueChangeListener booleanValueChangeListener -> d
    java.lang.String key -> e
    boolean enable -> f
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initView(android.content.Context) -> b
    void initdata() -> a
    void initEvent() -> b
    boolean getValue() -> getValue
    void setTitle(java.lang.String) -> setTitle
    void setTitle(int) -> setTitle
    void setValueChangeListener(com.newland.payment.ui.listener.BooleanValueChangeListener) -> setValueChangeListener
    void addValueChangeListener(com.newland.payment.ui.listener.BooleanValueChangeListener) -> a
    void setParamData(int,java.lang.String) -> setParamData
    void setWaterEnabled() -> setWaterEnabled
    boolean access$000(com.newland.payment.ui.view.SettingSwitchView) -> a
    com.newland.payment.ui.view.SwitchView access$100(com.newland.payment.ui.view.SettingSwitchView) -> b
    java.lang.String access$200(com.newland.payment.ui.view.SettingSwitchView) -> c
    com.newland.payment.ui.listener.BooleanValueChangeListener access$300(com.newland.payment.ui.view.SettingSwitchView) -> d
    boolean access$002(com.newland.payment.ui.view.SettingSwitchView,boolean) -> a
    android.content.Context access$400(com.newland.payment.ui.view.SettingSwitchView) -> e
com.newland.payment.ui.view.SettingSwitchView$1 -> com.newland.payment.ui.view.SettingSwitchView$1:
    com.newland.payment.ui.view.SettingSwitchView this$0 -> a
    void <init>(com.newland.payment.ui.view.SettingSwitchView) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingSwitchView$1$1 -> com.newland.payment.ui.view.SettingSwitchView$1$1:
    boolean val$value -> a
    com.newland.payment.ui.view.SettingSwitchView$1 this$1 -> b
    void <init>(com.newland.payment.ui.view.SettingSwitchView$1,boolean) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.view.SettingSwitchView$2 -> com.newland.payment.ui.view.SettingSwitchView$2:
    java.lang.String val$key -> a
    com.newland.payment.ui.view.SettingSwitchView this$0 -> b
    void <init>(com.newland.payment.ui.view.SettingSwitchView,java.lang.String) -> <init>
    void onChange(boolean) -> a
com.newland.payment.ui.view.SettingSwitchView$2$1 -> com.newland.payment.ui.view.SettingSwitchView$2$1:
    boolean val$value -> a
    com.newland.payment.ui.view.SettingSwitchView$2 this$1 -> b
    void <init>(com.newland.payment.ui.view.SettingSwitchView$2,boolean) -> <init>
    void onBackGround() -> a
    void onMain() -> b
com.newland.payment.ui.view.SettingSwitchView$3 -> com.newland.payment.ui.view.SettingSwitchView$3:
    int count -> a
    com.newland.payment.ui.view.SettingSwitchView this$0 -> b
    void <init>(com.newland.payment.ui.view.SettingSwitchView) -> <init>
    void onMain() -> b
    void onBackGround() -> a
com.newland.payment.ui.view.SettingSwitchView$3$1 -> com.newland.payment.ui.view.SettingSwitchView$3$1:
    com.newland.payment.ui.view.SettingSwitchView$3 this$1 -> a
    void <init>(com.newland.payment.ui.view.SettingSwitchView$3) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SettingSwitchView$3$2 -> com.newland.payment.ui.view.SettingSwitchView$3$2:
    com.newland.payment.ui.view.SettingSwitchView$3 this$1 -> a
    void <init>(com.newland.payment.ui.view.SettingSwitchView$3) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SwitchView -> com.newland.payment.ui.view.SwitchView:
    android.widget.ImageView ivSwitchBg -> a
    android.widget.ImageView ivSwitch -> b
    com.newland.payment.ui.listener.BooleanValueChangeListener booleanValueChangeListener -> c
    android.view.View$OnClickListener addOnClickListener -> d
    boolean value -> e
    boolean enabled -> f
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initView(android.content.Context) -> b
    void initdata() -> a
    void initEvent() -> b
    boolean getValue() -> getValue
    void setValue(boolean) -> setValue
    void setBooleanValueChangeListener(com.newland.payment.ui.listener.BooleanValueChangeListener) -> setBooleanValueChangeListener
    void setStyleEnabled(boolean) -> setStyleEnabled
    void addOnClickListener(android.view.View$OnClickListener) -> a
    boolean access$000(com.newland.payment.ui.view.SwitchView) -> a
    boolean access$100(com.newland.payment.ui.view.SwitchView) -> b
    android.widget.ImageView access$200(com.newland.payment.ui.view.SwitchView) -> c
    android.widget.ImageView access$300(com.newland.payment.ui.view.SwitchView) -> d
    boolean access$102(com.newland.payment.ui.view.SwitchView,boolean) -> a
    com.newland.payment.ui.listener.BooleanValueChangeListener access$400(com.newland.payment.ui.view.SwitchView) -> e
    android.view.View$OnClickListener access$500(com.newland.payment.ui.view.SwitchView) -> f
com.newland.payment.ui.view.SwitchView$1 -> com.newland.payment.ui.view.SwitchView$1:
    com.newland.payment.ui.view.SwitchView this$0 -> a
    void <init>(com.newland.payment.ui.view.SwitchView) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.SystemStatusManager -> com.newland.payment.ui.view.f:
    java.lang.String sNavBarOverride -> a
    com.newland.payment.ui.view.SystemStatusManager$SystemBarConfig mConfig -> b
    boolean mStatusBarAvailable -> c
    boolean mNavBarAvailable -> d
    boolean mStatusBarTintEnabled -> e
    android.view.View mStatusBarTintView -> f
    android.view.View mNavBarTintView -> g
    void <init>(android.app.Activity) -> <init>
    void setStatusBarTintEnabled(boolean) -> a
    void setStatusBarTintResource(int) -> a
    void setupStatusBarView(android.content.Context,android.view.ViewGroup) -> a
    void setupNavBarView(android.content.Context,android.view.ViewGroup) -> b
    java.lang.String access$100() -> a
    void <clinit>() -> <clinit>
com.newland.payment.ui.view.SystemStatusManager$1 -> com.newland.payment.ui.view.f$1:
com.newland.payment.ui.view.SystemStatusManager$SystemBarConfig -> com.newland.payment.ui.view.f$a:
    boolean mTranslucentStatusBar -> a
    boolean mTranslucentNavBar -> b
    int mStatusBarHeight -> c
    int mActionBarHeight -> d
    boolean mHasNavigationBar -> e
    int mNavigationBarHeight -> f
    int mNavigationBarWidth -> g
    boolean mInPortrait -> h
    float mSmallestWidthDp -> i
    void <init>(android.app.Activity,boolean,boolean) -> <init>
    int getActionBarHeight(android.content.Context) -> a
    int getNavigationBarHeight(android.content.Context) -> b
    int getNavigationBarWidth(android.content.Context) -> c
    boolean hasNavBar(android.content.Context) -> d
    int getInternalDimensionSize(android.content.res.Resources,java.lang.String) -> a
    float getSmallestWidthDp(android.app.Activity) -> a
    boolean isNavigationAtBottom() -> a
    int getStatusBarHeight() -> b
    boolean hasNavigtionBar() -> c
    int getNavigationBarHeight() -> d
    int getNavigationBarWidth() -> e
    void <init>(android.app.Activity,boolean,boolean,com.newland.payment.ui.view.SystemStatusManager$1) -> <init>
com.newland.payment.ui.view.passwordedittext.CustomPasswordTransformationMethod -> com.newland.payment.ui.view.passwordedittext.a:
    java.lang.String transformation -> a
    void <init>(java.lang.String) -> <init>
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
com.newland.payment.ui.view.passwordedittext.CustomPasswordTransformationMethod$PasswordCharSequence -> com.newland.payment.ui.view.passwordedittext.a$a:
    java.lang.CharSequence mSource -> b
    com.newland.payment.ui.view.passwordedittext.CustomPasswordTransformationMethod this$0 -> a
    void <init>(com.newland.payment.ui.view.passwordedittext.CustomPasswordTransformationMethod,java.lang.CharSequence) -> <init>
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.newland.payment.ui.view.passwordedittext.GridPasswordView -> com.newland.payment.ui.view.passwordedittext.GridPasswordView:
    android.content.res.ColorStateList mTextColor -> a
    int mTextSize -> b
    int mLineWidth -> c
    int mLineColor -> d
    int mGridColor -> e
    android.graphics.drawable.Drawable mLineDrawable -> f
    android.graphics.drawable.Drawable mOuterLineDrawable -> g
    int mPasswordLength -> h
    java.lang.String mPasswordTransformation -> i
    int mPasswordType -> j
    java.lang.String[] mPasswordArr -> k
    android.widget.TextView[] mViewArr -> l
    com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText mInputView -> m
    com.newland.payment.ui.view.passwordedittext.GridPasswordView$OnPasswordChangedListener mListener -> n
    android.text.method.PasswordTransformationMethod mTransformationMethod -> o
    android.view.View$OnClickListener mOnClickListener -> p
    com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText$OnDelKeyEventListener onDelKeyEventListener -> q
    android.text.TextWatcher textWatcher -> r
    android.view.View$OnKeyListener onKeyListener -> s
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void init(android.content.Context,android.util.AttributeSet,int) -> a
    void initAttrs(android.content.Context,android.util.AttributeSet,int) -> b
    void initViews(android.content.Context) -> a
    void inflaterViews(android.content.Context) -> b
    void setCustomAttr(android.widget.TextView) -> setCustomAttr
    android.graphics.drawable.GradientDrawable generateBackgroundDrawable() -> b
    void forceInputViewGetFocus() -> c
    void notifyTextChanged() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setError(java.lang.String) -> setError
    java.lang.String getPassWord() -> getPassWord
    void clearPassword() -> a
    void setPassword(java.lang.String) -> setPassword
    void setPasswordVisibility(boolean) -> setPasswordVisibility
    boolean getPassWordVisibility() -> getPassWordVisibility
    void setOnPasswordChangedListener(com.newland.payment.ui.view.passwordedittext.GridPasswordView$OnPasswordChangedListener) -> setOnPasswordChangedListener
    void setPasswordType(com.newland.payment.ui.view.passwordedittext.PasswordType) -> setPasswordType
    void setBackground(android.graphics.drawable.Drawable) -> setBackground
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void access$000(com.newland.payment.ui.view.passwordedittext.GridPasswordView) -> a
    java.lang.String[] access$100(com.newland.payment.ui.view.passwordedittext.GridPasswordView) -> b
    android.widget.TextView[] access$200(com.newland.payment.ui.view.passwordedittext.GridPasswordView) -> c
    void access$300(com.newland.payment.ui.view.passwordedittext.GridPasswordView) -> d
    com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText access$400(com.newland.payment.ui.view.passwordedittext.GridPasswordView) -> e
    com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText$OnDelKeyEventListener access$500(com.newland.payment.ui.view.passwordedittext.GridPasswordView) -> f
com.newland.payment.ui.view.passwordedittext.GridPasswordView$1 -> com.newland.payment.ui.view.passwordedittext.GridPasswordView$1:
    com.newland.payment.ui.view.passwordedittext.GridPasswordView this$0 -> a
    void <init>(com.newland.payment.ui.view.passwordedittext.GridPasswordView) -> <init>
    void onClick(android.view.View) -> onClick
com.newland.payment.ui.view.passwordedittext.GridPasswordView$2 -> com.newland.payment.ui.view.passwordedittext.GridPasswordView$2:
    com.newland.payment.ui.view.passwordedittext.GridPasswordView this$0 -> a
    void <init>(com.newland.payment.ui.view.passwordedittext.GridPasswordView) -> <init>
    void onDeleteClick() -> a
com.newland.payment.ui.view.passwordedittext.GridPasswordView$3 -> com.newland.payment.ui.view.passwordedittext.GridPasswordView$3:
    com.newland.payment.ui.view.passwordedittext.GridPasswordView this$0 -> a
    void <init>(com.newland.payment.ui.view.passwordedittext.GridPasswordView) -> <init>
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.newland.payment.ui.view.passwordedittext.GridPasswordView$4 -> com.newland.payment.ui.view.passwordedittext.GridPasswordView$4:
    com.newland.payment.ui.view.passwordedittext.GridPasswordView this$0 -> a
    void <init>(com.newland.payment.ui.view.passwordedittext.GridPasswordView) -> <init>
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.newland.payment.ui.view.passwordedittext.GridPasswordView$5 -> com.newland.payment.ui.view.passwordedittext.GridPasswordView$5:
    int[] $SwitchMap$com$newland$payment$ui$view$passwordedittext$PasswordType -> a
    void <clinit>() -> <clinit>
com.newland.payment.ui.view.passwordedittext.GridPasswordView$OnPasswordChangedListener -> com.newland.payment.ui.view.passwordedittext.GridPasswordView$a:
    void onTextChanged(java.lang.String) -> a
    void onInputFinish(java.lang.String) -> b
com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText -> com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText:
    com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText$OnDelKeyEventListener delKeyEventListener -> a
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void setDelKeyEventListener(com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText$OnDelKeyEventListener) -> setDelKeyEventListener
    com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText$OnDelKeyEventListener access$000(com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText) -> a
com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText$OnDelKeyEventListener -> com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText$a:
    void onDeleteClick() -> a
com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText$ZanyInputConnection -> com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText$b:
    com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText this$0 -> a
    void <init>(com.newland.payment.ui.view.passwordedittext.ImeDelBugFixedEditText,android.view.inputmethod.InputConnection,boolean) -> <init>
    boolean sendKeyEvent(android.view.KeyEvent) -> sendKeyEvent
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
com.newland.payment.ui.view.passwordedittext.PasswordType -> com.newland.payment.ui.view.passwordedittext.PasswordType:
    com.newland.payment.ui.view.passwordedittext.PasswordType NUMBER -> NUMBER
    com.newland.payment.ui.view.passwordedittext.PasswordType TEXT -> TEXT
    com.newland.payment.ui.view.passwordedittext.PasswordType TEXTVISIBLE -> TEXTVISIBLE
    com.newland.payment.ui.view.passwordedittext.PasswordType TEXTWEB -> TEXTWEB
    com.newland.payment.ui.view.passwordedittext.PasswordType[] $VALUES -> a
    com.newland.payment.ui.view.passwordedittext.PasswordType[] values() -> values
    com.newland.payment.ui.view.passwordedittext.PasswordType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.newland.payment.ui.view.progressbar.TimeOutProgressBar -> com.newland.payment.ui.view.progressbar.TimeOutProgressBar:
    android.widget.ImageView ivValue -> a
    com.newland.payment.ui.view.progressbar.TimeOutProgressBarListener listener -> b
    java.util.concurrent.ScheduledExecutorService service -> c
    java.util.concurrent.ScheduledFuture future -> d
    java.util.concurrent.ScheduledFuture futureUi -> e
    int value -> f
    int maxValue -> g
    android.widget.FrameLayout$LayoutParams params -> h
    long outTime -> i
    boolean isPause -> j
    int refraeshTiem -> k
    long speed -> l
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void init(android.content.Context) -> a
    void setTimeOut(long,com.newland.payment.ui.view.progressbar.TimeOutProgressBarListener) -> setTimeOut
    void setValue(int) -> setValue
    void start() -> a
    void close() -> b
    long getTimeOut() -> getTimeOut
    void resetProgress() -> c
    void pause() -> d
    void resume() -> e
    boolean access$000(com.newland.payment.ui.view.progressbar.TimeOutProgressBar) -> a
    int access$100(com.newland.payment.ui.view.progressbar.TimeOutProgressBar) -> b
    int access$102(com.newland.payment.ui.view.progressbar.TimeOutProgressBar,int) -> a
    long access$200(com.newland.payment.ui.view.progressbar.TimeOutProgressBar) -> c
    com.newland.payment.ui.view.progressbar.TimeOutProgressBarListener access$300(com.newland.payment.ui.view.progressbar.TimeOutProgressBar) -> d
    int access$400(com.newland.payment.ui.view.progressbar.TimeOutProgressBar) -> e
    void access$500(com.newland.payment.ui.view.progressbar.TimeOutProgressBar,int) -> b
com.newland.payment.ui.view.progressbar.TimeOutProgressBar$1 -> com.newland.payment.ui.view.progressbar.TimeOutProgressBar$1:
    com.newland.payment.ui.view.progressbar.TimeOutProgressBar this$0 -> a
    void <init>(com.newland.payment.ui.view.progressbar.TimeOutProgressBar) -> <init>
    void run() -> run
com.newland.payment.ui.view.progressbar.TimeOutProgressBar$2 -> com.newland.payment.ui.view.progressbar.TimeOutProgressBar$2:
    com.newland.payment.ui.view.progressbar.TimeOutProgressBar this$0 -> a
    void <init>(com.newland.payment.ui.view.progressbar.TimeOutProgressBar) -> <init>
    void run() -> run
com.newland.payment.ui.view.progressbar.TimeOutProgressBar$2$1 -> com.newland.payment.ui.view.progressbar.TimeOutProgressBar$2$1:
    com.newland.payment.ui.view.progressbar.TimeOutProgressBar$2 this$1 -> a
    void <init>(com.newland.payment.ui.view.progressbar.TimeOutProgressBar$2) -> <init>
    void run() -> run
com.newland.payment.ui.view.progressbar.TimeOutProgressBarListener -> com.newland.payment.ui.view.progressbar.a:
    void timeout() -> a
com.newland.payment.ui.view.wheelview.DateWheelView -> com.newland.payment.ui.view.wheelview.DateWheelView:
    com.newland.payment.ui.view.wheelview.WheelView wwYear -> a
    com.newland.payment.ui.view.wheelview.WheelView wwMouth -> b
    com.newland.payment.ui.view.wheelview.OnDateWheelViewChangeListener onDateWheelViewChangeListener -> c
    long date -> d
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initView(android.content.Context) -> b
    void initDate() -> a
    long getDate() -> getDate
    void initEvent() -> b
    com.newland.payment.ui.view.wheelview.WheelView access$000(com.newland.payment.ui.view.wheelview.DateWheelView) -> a
    com.newland.payment.ui.view.wheelview.OnDateWheelViewChangeListener access$100(com.newland.payment.ui.view.wheelview.DateWheelView) -> b
    long access$200(com.newland.payment.ui.view.wheelview.DateWheelView) -> c
    long access$202(com.newland.payment.ui.view.wheelview.DateWheelView,long) -> a
    com.newland.payment.ui.view.wheelview.WheelView access$300(com.newland.payment.ui.view.wheelview.DateWheelView) -> d
com.newland.payment.ui.view.wheelview.DateWheelView$1 -> com.newland.payment.ui.view.wheelview.DateWheelView$1:
    com.newland.payment.ui.view.wheelview.DateWheelView this$0 -> a
    void <init>(com.newland.payment.ui.view.wheelview.DateWheelView) -> <init>
    void onChanged(com.newland.payment.ui.view.wheelview.WheelView,int,int) -> a
com.newland.payment.ui.view.wheelview.DateWheelView$2 -> com.newland.payment.ui.view.wheelview.DateWheelView$2:
    com.newland.payment.ui.view.wheelview.DateWheelView this$0 -> a
    void <init>(com.newland.payment.ui.view.wheelview.DateWheelView) -> <init>
    void onChanged(com.newland.payment.ui.view.wheelview.WheelView,int,int) -> a
com.newland.payment.ui.view.wheelview.DateWheelView2 -> com.newland.payment.ui.view.wheelview.DateWheelView2:
    com.newland.payment.ui.view.wheelview.WheelView wwYear -> a
    com.newland.payment.ui.view.wheelview.WheelView wwMouth -> b
    com.newland.payment.ui.view.wheelview.WheelView wwDay -> c
    android.widget.TextView txtYear -> d
    android.widget.TextView txtMouth -> e
    android.widget.TextView txtDay -> f
    com.newland.payment.ui.view.wheelview.OnDateWheelViewChangeListener onDateWheelViewChangeListener -> g
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter yearAdapter -> h
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter mouthAdapter -> i
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter dayAdapter -> j
    long date -> k
    int minYear -> l
    int maxYear -> m
    int minMouth -> n
    int maxMouth -> o
    int minDay -> p
    int maxDay -> q
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initView(android.content.Context) -> b
    void initDate() -> a
    long getDate() -> getDate
    void initEvent() -> b
    void addOnDateWheelViewChangeListener(com.newland.payment.ui.view.wheelview.OnDateWheelViewChangeListener) -> a
    int getMaxDay() -> getMaxDay
    void setDate(java.lang.Long) -> setDate
    void setNowDate() -> setNowDate
    void setIsShowYear(boolean) -> setIsShowYear
    void setIsShowMouth(boolean) -> setIsShowMouth
    void setIsShowDay(boolean) -> setIsShowDay
    void setAvailableYear(int,int) -> setAvailableYear
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter access$000(com.newland.payment.ui.view.wheelview.DateWheelView2) -> a
    com.newland.payment.ui.view.wheelview.WheelView access$100(com.newland.payment.ui.view.wheelview.DateWheelView2) -> b
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter access$200(com.newland.payment.ui.view.wheelview.DateWheelView2) -> c
    com.newland.payment.ui.view.wheelview.WheelView access$300(com.newland.payment.ui.view.wheelview.DateWheelView2) -> d
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter access$400(com.newland.payment.ui.view.wheelview.DateWheelView2) -> e
    com.newland.payment.ui.view.wheelview.OnDateWheelViewChangeListener access$500(com.newland.payment.ui.view.wheelview.DateWheelView2) -> f
    long access$600(com.newland.payment.ui.view.wheelview.DateWheelView2) -> g
    long access$602(com.newland.payment.ui.view.wheelview.DateWheelView2,long) -> a
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter access$402(com.newland.payment.ui.view.wheelview.DateWheelView2,com.newland.payment.ui.view.wheelview.NumericWheelAdapter) -> a
    int access$700(com.newland.payment.ui.view.wheelview.DateWheelView2) -> h
    int access$800(com.newland.payment.ui.view.wheelview.DateWheelView2) -> i
com.newland.payment.ui.view.wheelview.DateWheelView2$1 -> com.newland.payment.ui.view.wheelview.DateWheelView2$1:
    com.newland.payment.ui.view.wheelview.DateWheelView2 this$0 -> a
    void <init>(com.newland.payment.ui.view.wheelview.DateWheelView2) -> <init>
    void onChanged(com.newland.payment.ui.view.wheelview.WheelView,int,int) -> a
com.newland.payment.ui.view.wheelview.DateWheelView2$2 -> com.newland.payment.ui.view.wheelview.DateWheelView2$2:
    com.newland.payment.ui.view.wheelview.DateWheelView2 this$0 -> a
    void <init>(com.newland.payment.ui.view.wheelview.DateWheelView2) -> <init>
    void onChanged(com.newland.payment.ui.view.wheelview.WheelView,int,int) -> a
com.newland.payment.ui.view.wheelview.DateWheelView2$3 -> com.newland.payment.ui.view.wheelview.DateWheelView2$3:
    com.newland.payment.ui.view.wheelview.DateWheelView2 this$0 -> a
    void <init>(com.newland.payment.ui.view.wheelview.DateWheelView2) -> <init>
    void onChanged(com.newland.payment.ui.view.wheelview.WheelView,int,int) -> a
com.newland.payment.ui.view.wheelview.NumericWheelAdapter -> com.newland.payment.ui.view.wheelview.a:
    int minValue -> a
    int maxValue -> b
    java.lang.String format -> c
    void <init>() -> <init>
    void <init>(int,int) -> <init>
    void <init>(int,int,java.lang.String) -> <init>
    java.lang.String getItem(int) -> a
    int getItemsCount() -> a
    int getMaximumLength() -> b
com.newland.payment.ui.view.wheelview.OnDateWheelViewChangeListener -> com.newland.payment.ui.view.wheelview.b:
    void onChanged(long,long) -> a
com.newland.payment.ui.view.wheelview.OnWheelChangedListener -> com.newland.payment.ui.view.wheelview.c:
    void onChanged(com.newland.payment.ui.view.wheelview.WheelView,int,int) -> a
com.newland.payment.ui.view.wheelview.OnWheelScrollListener -> com.newland.payment.ui.view.wheelview.d:
    void onScrollingStarted(com.newland.payment.ui.view.wheelview.WheelView) -> a
    void onScrollingFinished(com.newland.payment.ui.view.wheelview.WheelView) -> b
com.newland.payment.ui.view.wheelview.TimeWheelView -> com.newland.payment.ui.view.wheelview.TimeWheelView:
    com.newland.payment.ui.view.wheelview.WheelView wwHour -> a
    com.newland.payment.ui.view.wheelview.WheelView wwMinute -> b
    com.newland.payment.ui.view.wheelview.WheelView wwSecond -> c
    com.newland.payment.ui.view.wheelview.OnDateWheelViewChangeListener onDateWheelViewChangeListener -> d
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter hourAdapter -> e
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter minuteAdapter -> f
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter secondAdapter -> g
    long date -> h
    int minHour -> i
    int maxHour -> j
    int minMinute -> k
    int maxMinute -> l
    int minSecond -> m
    int maxSecond -> n
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void init(android.content.Context) -> a
    void initView(android.content.Context) -> b
    void initData() -> a
    long getDate() -> getDate
    java.lang.String getTimeString() -> getTimeString
    void initEvent() -> b
    void setDateToView() -> c
    void setNowDateToView() -> d
    void setDate(int,int,int) -> setDate
    void setDate(long) -> setDate
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter access$000(com.newland.payment.ui.view.wheelview.TimeWheelView) -> a
    com.newland.payment.ui.view.wheelview.WheelView access$100(com.newland.payment.ui.view.wheelview.TimeWheelView) -> b
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter access$200(com.newland.payment.ui.view.wheelview.TimeWheelView) -> c
    com.newland.payment.ui.view.wheelview.WheelView access$300(com.newland.payment.ui.view.wheelview.TimeWheelView) -> d
    com.newland.payment.ui.view.wheelview.NumericWheelAdapter access$400(com.newland.payment.ui.view.wheelview.TimeWheelView) -> e
    com.newland.payment.ui.view.wheelview.OnDateWheelViewChangeListener access$500(com.newland.payment.ui.view.wheelview.TimeWheelView) -> f
    long access$600(com.newland.payment.ui.view.wheelview.TimeWheelView) -> g
    long access$602(com.newland.payment.ui.view.wheelview.TimeWheelView,long) -> a
com.newland.payment.ui.view.wheelview.TimeWheelView$1 -> com.newland.payment.ui.view.wheelview.TimeWheelView$1:
    com.newland.payment.ui.view.wheelview.TimeWheelView this$0 -> a
    void <init>(com.newland.payment.ui.view.wheelview.TimeWheelView) -> <init>
    void onChanged(com.newland.payment.ui.view.wheelview.WheelView,int,int) -> a
com.newland.payment.ui.view.wheelview.TimeWheelView$2 -> com.newland.payment.ui.view.wheelview.TimeWheelView$2:
    com.newland.payment.ui.view.wheelview.TimeWheelView this$0 -> a
    void <init>(com.newland.payment.ui.view.wheelview.TimeWheelView) -> <init>
    void onChanged(com.newland.payment.ui.view.wheelview.WheelView,int,int) -> a
com.newland.payment.ui.view.wheelview.TimeWheelView$3 -> com.newland.payment.ui.view.wheelview.TimeWheelView$3:
    com.newland.payment.ui.view.wheelview.TimeWheelView this$0 -> a
    void <init>(com.newland.payment.ui.view.wheelview.TimeWheelView) -> <init>
    void onChanged(com.newland.payment.ui.view.wheelview.WheelView,int,int) -> a
com.newland.payment.ui.view.wheelview.WheelAdapter -> com.newland.payment.ui.view.wheelview.e:
    int getItemsCount() -> a
    java.lang.String getItem(int) -> a
    int getMaximumLength() -> b
com.newland.payment.ui.view.wheelview.WheelView -> com.newland.payment.ui.view.wheelview.WheelView:
    int[] SHADOWS_COLORS -> b
    com.newland.payment.ui.view.wheelview.WheelAdapter adapter -> c
    int currentItem -> d
    int itemsWidth -> e
    int labelWidth -> f
    int visibleItems -> g
    int itemHeight -> h
    android.text.TextPaint itemsPaint -> i
    android.text.TextPaint valuePaint -> j
    android.text.StaticLayout itemsLayout -> k
    android.text.StaticLayout labelLayout -> l
    android.text.StaticLayout valueLayout -> m
    java.lang.String label -> n
    android.graphics.drawable.Drawable centerDrawable -> o
    android.graphics.drawable.GradientDrawable topShadow -> p
    android.graphics.drawable.GradientDrawable bottomShadow -> q
    boolean isScrollingPerformed -> r
    int scrollingOffset -> s
    android.view.GestureDetector gestureDetector -> t
    android.widget.Scroller scroller -> u
    int lastScrollY -> v
    boolean isCyclic -> a
    java.util.List changingListeners -> w
    java.util.List scrollingListeners -> x
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> y
    int MESSAGE_SCROLL -> z
    int MESSAGE_JUSTIFY -> A
    android.os.Handler animationHandler -> B
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void initData(android.content.Context) -> a
    com.newland.payment.ui.view.wheelview.WheelAdapter getAdapter() -> getAdapter
    void setAdapter(com.newland.payment.ui.view.wheelview.WheelAdapter) -> setAdapter
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    int getVisibleItems() -> getVisibleItems
    void setVisibleItems(int) -> setVisibleItems
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    void addChangingListener(com.newland.payment.ui.view.wheelview.OnWheelChangedListener) -> a
    void notifyChangingListeners(int,int) -> a
    void notifyScrollingListenersAboutStart() -> a
    void notifyScrollingListenersAboutEnd() -> b
    int getCurrentItem() -> getCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    void setCurrentItem(int) -> setCurrentItem
    void setCyclic(boolean) -> setCyclic
    void invalidateLayouts() -> d
    void initResourcesIfNecessary() -> e
    int getDesiredHeight(android.text.Layout) -> a
    java.lang.String getTextItem(int) -> a
    java.lang.String buildText(boolean) -> a
    int getMaxTextLength() -> getMaxTextLength
    int getItemHeight() -> getItemHeight
    int calculateLayoutWidth(int,int) -> c
    void createLayouts(int,int) -> d
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawShadows(android.graphics.Canvas) -> a
    void drawValue(android.graphics.Canvas) -> b
    void drawItems(android.graphics.Canvas) -> c
    void drawCenterRect(android.graphics.Canvas) -> d
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doScroll(int) -> b
    void setNextMessage(int) -> setNextMessage
    void clearMessages() -> f
    void justify() -> g
    void startScrolling() -> h
    void finishScrolling() -> c
    void scroll(int,int) -> b
    boolean access$000(com.newland.payment.ui.view.wheelview.WheelView) -> a
    android.widget.Scroller access$100(com.newland.payment.ui.view.wheelview.WheelView) -> b
    void access$200(com.newland.payment.ui.view.wheelview.WheelView) -> c
    void access$300(com.newland.payment.ui.view.wheelview.WheelView) -> d
    void access$400(com.newland.payment.ui.view.wheelview.WheelView,int) -> a
    int access$502(com.newland.payment.ui.view.wheelview.WheelView,int) -> b
    int access$600(com.newland.payment.ui.view.wheelview.WheelView) -> e
    int access$700(com.newland.payment.ui.view.wheelview.WheelView) -> f
    int access$800(com.newland.payment.ui.view.wheelview.WheelView) -> g
    com.newland.payment.ui.view.wheelview.WheelAdapter access$900(com.newland.payment.ui.view.wheelview.WheelView) -> h
    int access$500(com.newland.payment.ui.view.wheelview.WheelView) -> i
    void access$1000(com.newland.payment.ui.view.wheelview.WheelView,int) -> c
    android.os.Handler access$1100(com.newland.payment.ui.view.wheelview.WheelView) -> j
    void access$1200(com.newland.payment.ui.view.wheelview.WheelView) -> k
    void <clinit>() -> <clinit>
com.newland.payment.ui.view.wheelview.WheelView$1 -> com.newland.payment.ui.view.wheelview.WheelView$1:
    com.newland.payment.ui.view.wheelview.WheelView this$0 -> a
    void <init>(com.newland.payment.ui.view.wheelview.WheelView) -> <init>
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.newland.payment.ui.view.wheelview.WheelView$2 -> com.newland.payment.ui.view.wheelview.WheelView$2:
    com.newland.payment.ui.view.wheelview.WheelView this$0 -> a
    void <init>(com.newland.payment.ui.view.wheelview.WheelView) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.pos.sdk.bean.AmountBean -> com.newland.pos.sdk.bean.AmountBean:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer format -> format
    java.lang.Long maxAmount -> maxAmount
    java.lang.Long minAmount -> minAmount
    java.lang.Integer timeOut -> timeOut
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.Long amount -> amount
    java.lang.String currency -> currency
    java.lang.Boolean isConfirmAmount -> isConfirmAmount
    java.lang.Boolean isCheckRefundAmount -> isCheckRefundAmount
    void <init>() -> <init>
    java.lang.Long getAmount() -> getAmount
    void setAmount(java.lang.Long) -> setAmount
    java.lang.Long getMaxAmount() -> getMaxAmount
    void setMaxAmount(java.lang.Long) -> setMaxAmount
    java.lang.Integer getFormat() -> getFormat
    void setFormat(java.lang.Integer) -> setFormat
    java.lang.Long getMinAmount() -> getMinAmount
    void setMinAmount(java.lang.Long) -> setMinAmount
    java.lang.Integer getTimeOut() -> getTimeOut
    void setTimeOut(java.lang.Integer) -> setTimeOut
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
    java.lang.Boolean isConfirmAmount() -> isConfirmAmount
    void setConfirmAmount(java.lang.Boolean) -> setConfirmAmount
    java.lang.Boolean isCheckRefundAmount() -> isCheckRefundAmount
    void setCheckRefundAmount(java.lang.Boolean) -> setCheckRefundAmount
com.newland.pos.sdk.bean.BaseBean -> com.newland.pos.sdk.bean.BaseBean:
    long serialVersionUID -> serialVersionUID
    com.newland.pos.sdk.common.TransConst$StepResult stepResult -> stepResult
    boolean thirdInvoke -> thirdInvoke
    java.lang.Object waitObj -> waitObj
    void <init>() -> <init>
    com.newland.pos.sdk.common.TransConst$StepResult getStepResult() -> getStepResult
    void setStepResult(com.newland.pos.sdk.common.TransConst$StepResult) -> setStepResult
    void reSetStepResult() -> reSetStepResult
    java.lang.Object getWaitObj() -> getWaitObj
    boolean isThirdInvoke() -> isThirdInvoke
    void setThirdInvoke(boolean) -> setThirdInvoke
com.newland.pos.sdk.bean.CardBean -> com.newland.pos.sdk.bean.CardBean:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer inputMode -> inputMode
    java.lang.Integer maintk -> maintk
    java.lang.Integer inputMinLen -> inputMinLen
    java.lang.Integer inputMaxLen -> inputMaxLen
    java.lang.Integer timeOut -> timeOut
    java.lang.Integer funcKeyFlag -> funcKeyFlag
    byte transtype -> transtype
    java.lang.Long amountContent -> amountContent
    int isSupportSeekRFCardSale -> isSupportSeekRFCardSale
    java.lang.Boolean isComfrim -> isComfrim
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String tk1 -> tk1
    java.lang.String tk2 -> tk2
    java.lang.String tk3 -> tk3
    java.lang.Integer trueInput -> trueInput
    java.lang.String pan -> pan
    java.lang.Integer funcKey -> funcKey
    java.lang.Boolean isPosSupportIc -> isPosSupportIc
    java.lang.Boolean isCheckIcc -> isCheckIcc
    java.lang.Boolean isIcCard -> isIcCard
    int TK1 -> TK1
    int TK2 -> TK2
    int TK3 -> TK3
    int MAIN_TRACK -> MAIN_TRACK
    int INPUT_MIN_LEN -> INPUT_MIN_LEN
    int INPUT_MAX_LEN -> INPUT_MAX_LEN
    int TIME_OUT -> TIME_OUT
    int FUN_KEY_FLAG -> FUN_KEY_FLAG
    void <init>() -> <init>
    java.lang.Integer getInputMode() -> getInputMode
    void setInputMode(java.lang.Integer) -> setInputMode
    java.lang.Integer getMaintk() -> getMaintk
    void setMaintk(java.lang.Integer) -> setMaintk
    java.lang.Integer getInputMinLen() -> getInputMinLen
    void setInputMinLen(java.lang.Integer) -> setInputMinLen
    java.lang.Integer getInputMaxLen() -> getInputMaxLen
    void setInputMaxLen(java.lang.Integer) -> setInputMaxLen
    java.lang.Integer getTimeOut() -> getTimeOut
    void setTimeOut(java.lang.Integer) -> setTimeOut
    java.lang.Integer getFuncKeyFlag() -> getFuncKeyFlag
    void setFuncKeyFlag(java.lang.Integer) -> setFuncKeyFlag
    java.lang.Long getAmountContent() -> getAmountContent
    void setAmountContent(java.lang.Long) -> setAmountContent
    java.lang.Boolean getIsComfrim() -> getIsComfrim
    void setIsComfrim(java.lang.Boolean) -> setIsComfrim
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getTk1() -> getTk1
    void setTk1(java.lang.String) -> setTk1
    java.lang.String getTk2() -> getTk2
    void setTk2(java.lang.String) -> setTk2
    java.lang.String getTk3() -> getTk3
    void setTk3(java.lang.String) -> setTk3
    java.lang.Integer getTrueInput() -> getTrueInput
    void setTrueInput(java.lang.Integer) -> setTrueInput
    java.lang.String getPan() -> getPan
    void setPan(java.lang.String) -> setPan
    java.lang.Integer getFuncKey() -> getFuncKey
    void setFuncKey(java.lang.Integer) -> setFuncKey
    java.lang.Boolean getIsPosSupportIc() -> getIsPosSupportIc
    void setIsPosSupportIc(java.lang.Boolean) -> setIsPosSupportIc
    java.lang.Boolean getIsIcCard() -> getIsIcCard
    java.lang.Boolean getIsCheckIcc() -> getIsCheckIcc
    void setIsCheckIcc(java.lang.Boolean) -> setIsCheckIcc
    void setIsIcCard(java.lang.Boolean) -> setIsIcCard
    java.lang.String toString() -> toString
    byte getTranstype() -> getTranstype
    void setTranstype(byte) -> setTranstype
    int getIsSupportSeekRFCardSale() -> getIsSupportSeekRFCardSale
    void setIsSupportSeekRFCardSale(int) -> setIsSupportSeekRFCardSale
com.newland.pos.sdk.bean.EcLoadBean -> com.newland.pos.sdk.bean.EcLoadBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String p1 -> p1
    java.lang.String p2 -> p2
    java.lang.String balanceOld -> balanceOld
    java.lang.String balanceNew -> balanceNew
    java.lang.String tradeDate -> tradeDate
    java.lang.String tradeTime -> tradeTime
    java.lang.String countryCode -> countryCode
    java.lang.String merchantName -> merchantName
    java.lang.String tradeCount -> tradeCount
    void <init>() -> <init>
    void <init>(byte[]) -> <init>
    void setValueWithTLV(com.newland.pos.sdk.emv.EmvTLV) -> setValueWithTLV
    java.lang.String getP1() -> getP1
    void setP1(java.lang.String) -> setP1
    java.lang.String getP2() -> getP2
    void setP2(java.lang.String) -> setP2
    java.lang.String getTradeDate() -> getTradeDate
    void setTradeDate(java.lang.String) -> setTradeDate
    java.lang.String getTradeTime() -> getTradeTime
    void setTradeTime(java.lang.String) -> setTradeTime
    java.lang.String getCountryCode() -> getCountryCode
    void setCountryCode(java.lang.String) -> setCountryCode
    java.lang.String getMerchantName() -> getMerchantName
    void setMerchantName(java.lang.String) -> setMerchantName
    java.lang.String getTradeCount() -> getTradeCount
    void setTradeCount(java.lang.String) -> setTradeCount
    long getSerialversionuid() -> getSerialversionuid
    java.lang.String getBalanceOld() -> getBalanceOld
    void setBalanceOld(java.lang.String) -> setBalanceOld
    java.lang.String getBalanceNew() -> getBalanceNew
    void setBalanceNew(java.lang.String) -> setBalanceNew
com.newland.pos.sdk.bean.EmvBean -> com.newland.pos.sdk.bean.EmvBean:
    int transType -> transType
    java.lang.String transName -> transName
    int transAttr -> transAttr
    java.lang.String pan -> pan
    java.lang.Long amount -> amount
    java.lang.String expDate -> expDate
    java.lang.String inputMode -> inputMode
    java.lang.String cardSerialNo -> cardSerialNo
    java.lang.String trackData2 -> trackData2
    java.lang.String responseCode -> responseCode
    java.lang.String pinBlock -> pinBlock
    java.lang.String currency -> currency
    java.lang.Long ecBalance -> ecBalance
    java.lang.String isoField55 -> isoField55
    boolean isTSIComleted -> isTSIComleted
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode ecSelectMode -> ecSelectMode
    int qPbocPriority -> qPbocPriority
    boolean isEnableOnlyEc -> isEnableOnlyEc
    int transMode -> transMode
    byte l2_9CTransType -> l2_9CTransType
    int INSIDECARD -> INSIDECARD
    int OUTSIDECARD -> OUTSIDECARD
    int UNKNOWCARD -> UNKNOWCARD
    int CardType -> CardType
    int QuickPayByPWD -> QuickPayByPWD
    int QPSFlag -> QPSFlag
    void <init>() -> <init>
    int getTransType() -> getTransType
    void setTransType(int) -> setTransType
    java.lang.String getTransName() -> getTransName
    void setTransName(java.lang.String) -> setTransName
    int getTransAttr() -> getTransAttr
    void setTransAttr(int) -> setTransAttr
    java.lang.String getPan() -> getPan
    void setPan(java.lang.String) -> setPan
    java.lang.Long getAmount() -> getAmount
    void setAmount(java.lang.Long) -> setAmount
    java.lang.String getExpDate() -> getExpDate
    void setExpDate(java.lang.String) -> setExpDate
    java.lang.String getInputMode() -> getInputMode
    void setInputMode(java.lang.String) -> setInputMode
    java.lang.String getCardSerialNo() -> getCardSerialNo
    void setCardSerialNo(java.lang.String) -> setCardSerialNo
    java.lang.String getTrackData2() -> getTrackData2
    void setTrackData2(java.lang.String) -> setTrackData2
    java.lang.String getResponseCode() -> getResponseCode
    void setResponseCode(java.lang.String) -> setResponseCode
    java.lang.String getPinBlock() -> getPinBlock
    void setPinBlock(java.lang.String) -> setPinBlock
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
    java.lang.String getIsoField55() -> getIsoField55
    void setIsoField55(java.lang.String) -> setIsoField55
    boolean isTSIComleted() -> isTSIComleted
    void setTSIComleted(boolean) -> setTSIComleted
    void setEcSelectMode(com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode) -> setEcSelectMode
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode getEcSelectMode() -> getEcSelectMode
    java.lang.Long getEcBalance() -> getEcBalance
    void setEcBalance(java.lang.Long) -> setEcBalance
    int getqPbocPriority() -> getqPbocPriority
    void setqPbocPriority(int) -> setqPbocPriority
    boolean isEnableOnlyEc() -> isEnableOnlyEc
    void setEnableOnlyEc(boolean) -> setEnableOnlyEc
    int getTransMode() -> getTransMode
    void setTransMode(int) -> setTransMode
    byte getL2_9CTransType() -> getL2_9CTransType
    void setL2_9CTransType(byte) -> setL2_9CTransType
    int getCardType() -> getCardType
    void setCardType(int) -> setCardType
    int getQuickPayByPWD() -> getQuickPayByPWD
    void setQuickPayByPWD(int) -> setQuickPayByPWD
    int getQPSFlag() -> getQPSFlag
    void setQPSFlag(int) -> setQPSFlag
com.newland.pos.sdk.bean.MenuSelectBean -> com.newland.pos.sdk.bean.MenuSelectBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String[] items -> items
    int timeOut -> timeOut
    int itemIndex -> itemIndex
    void <init>() -> <init>
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String[] getItems() -> getItems
    void setItems(java.lang.String[]) -> setItems
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    int getItemIndex() -> getItemIndex
    void setItemIndex(int) -> setItemIndex
com.newland.pos.sdk.bean.MessageTipBean -> com.newland.pos.sdk.bean.MessageTipBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String title -> title
    java.lang.String content -> content
    int beep -> beep
    int timeOut -> timeOut
    boolean result -> result
    boolean cancelable -> cancelable
    void <init>() -> <init>
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    int getBeep() -> getBeep
    void setBeep(int) -> setBeep
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    boolean getResult() -> getResult
    void setResult(boolean) -> setResult
    boolean isCancelable() -> isCancelable
    void setCancelable(boolean) -> setCancelable
com.newland.pos.sdk.bean.PasswordBean -> com.newland.pos.sdk.bean.PasswordBean:
    java.lang.String pan -> pan
    long amountContent -> amountContent
    java.lang.Integer timeOut -> timeOut
    com.newland.pos.sdk.common.TransConst$PinInputMode pinInputMode -> pinInputMode
    java.lang.String title -> title
    java.lang.Integer PinMinLen -> PinMinLen
    java.lang.Integer PinMaxLen -> PinMaxLen
    java.lang.String content -> content
    java.lang.String pin -> pin
    java.lang.Integer len -> len
    void <init>() -> <init>
    void setPan(java.lang.String) -> setPan
    java.lang.String getPan() -> getPan
    void setAmountContent(long) -> setAmountContent
    long getAmountContent() -> getAmountContent
    void setTimeOut(java.lang.Integer) -> setTimeOut
    java.lang.Integer getTimeOut() -> getTimeOut
    com.newland.pos.sdk.common.TransConst$PinInputMode getPinInputMode() -> getPinInputMode
    void setPinInputMode(com.newland.pos.sdk.common.TransConst$PinInputMode) -> setPinInputMode
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setPinMinLen(java.lang.Integer) -> setPinMinLen
    java.lang.Integer getPinMinLen() -> getPinMinLen
    void setPinMaxLen(java.lang.Integer) -> setPinMaxLen
    java.lang.Integer getPinMaxLen() -> getPinMaxLen
    void setContent(java.lang.String) -> setContent
    java.lang.String getContent() -> getContent
    void setLen(java.lang.Integer) -> setLen
    java.lang.Integer getLen() -> getLen
    void setPin(java.lang.String) -> setPin
    java.lang.String getPin() -> getPin
com.newland.pos.sdk.bean.PbocDetailBean -> com.newland.pos.sdk.bean.PbocDetailBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String merchantName -> merchantName
    java.lang.String currency -> currency
    java.lang.String countryCode -> countryCode
    java.lang.String tradeType -> tradeType
    java.lang.String tradeCount -> tradeCount
    java.lang.String tradeDate -> tradeDate
    java.lang.String tradeTime -> tradeTime
    java.lang.String tradeAmount -> tradeAmount
    java.lang.String otherAmount -> otherAmount
    void <init>() -> <init>
    java.lang.String getMerchantName() -> getMerchantName
    void setMerchantName(java.lang.String) -> setMerchantName
    java.lang.String getCurrency() -> getCurrency
    void setCurrency(java.lang.String) -> setCurrency
    java.lang.String getCountryCode() -> getCountryCode
    void setCountryCode(java.lang.String) -> setCountryCode
    java.lang.String getTradeType() -> getTradeType
    void setTradeType(java.lang.String) -> setTradeType
    java.lang.String getTradeCount() -> getTradeCount
    void setTradeCount(java.lang.String) -> setTradeCount
    java.lang.String getTradeDate() -> getTradeDate
    void setTradeDate(java.lang.String) -> setTradeDate
    java.lang.String getTradeTime() -> getTradeTime
    void setTradeTime(java.lang.String) -> setTradeTime
    java.lang.String getTradeAmount() -> getTradeAmount
    void setTradeAmount(java.lang.String) -> setTradeAmount
    java.lang.String getOtherAmount() -> getOtherAmount
    void setOtherAmount(java.lang.String) -> setOtherAmount
    void setValueWithTLV(com.newland.pos.sdk.emv.EmvTLV) -> setValueWithTLV
com.newland.pos.sdk.bean.ScanBean -> com.newland.pos.sdk.bean.ScanBean:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer timeOut -> timeOut
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String barcode -> barcode
    java.lang.Boolean isConfirmBarcode -> isConfirmBarcode
    boolean emptyFlag -> emptyFlag
    java.lang.String hint -> hint
    int INPUT_MIN_LEN -> INPUT_MIN_LEN
    int INPUT_MAX_LEN -> INPUT_MAX_LEN
    int TIME_OUT -> TIME_OUT
    int FUN_KEY_FLAG -> FUN_KEY_FLAG
    void <init>() -> <init>
    java.lang.String toString() -> toString
    boolean isEmptyFlag() -> isEmptyFlag
    void setEmptyFlag(boolean) -> setEmptyFlag
    java.lang.Integer getTimeOut() -> getTimeOut
    void setTimeOut(java.lang.Integer) -> setTimeOut
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getBarcode() -> getBarcode
    void setBarcode(java.lang.String) -> setBarcode
    java.lang.Boolean getIsConfirmBarcode() -> getIsConfirmBarcode
    void setIsConfirmBarcode(java.lang.Boolean) -> setIsConfirmBarcode
    java.lang.String getHint() -> getHint
    void setHint(java.lang.String) -> setHint
com.newland.pos.sdk.card.CardModule -> com.newland.pos.sdk.card.CardModule:
    int INPUT_NO -> INPUT_NO
    int HAND_INPUT -> HAND_INPUT
    int SWIPE -> SWIPE
    int ICCARD -> ICCARD
    int RFCARD -> RFCARD
    java.lang.String DES -> DES
    java.lang.String DES3 -> DES3
    java.lang.String YES -> YES
    java.lang.String NO -> NO
    java.lang.String encryptMode -> encryptMode
    java.lang.String is_encrypt_track -> is_encrypt_track
    int TMkIndex -> TMkIndex
    com.newland.pos.sdk.card.CardModule instance -> instance
    java.lang.Thread SwipCardThread -> SwipCardThread
    java.lang.String is_timeout_toast -> is_timeout_toast
    com.newland.pos.sdk.bean.CardBean bean -> bean
    android.os.Handler handler -> handler
    boolean isCardNoComfrim -> isCardNoComfrim
    com.newland.pos.sdk.interfaces.CardListener CardListener -> CardListener
    java.lang.String str_card_read_timeout -> str_card_read_timeout
    java.lang.String str_card_swper_error_retry -> str_card_swper_error_retry
    java.lang.String str_card_read_cancel -> str_card_read_cancel
    java.lang.String str_card_read_cardno_not_allow -> str_card_read_cardno_not_allow
    java.lang.String str_card_read_fail_retry -> str_card_read_fail_retry
    java.lang.String str_card_read_pls_instert_ic -> str_card_read_pls_instert_ic
    java.lang.String str_card_read_error_pos_ic_not_allow -> str_card_read_error_pos_ic_not_allow
    java.lang.String str_card_read_track2_no_allow -> str_card_read_track2_no_allow
    java.lang.String str_card_read_ic_err -> str_card_read_ic_err
    void <clinit>() -> <clinit>
    void <init>(com.newland.pos.sdk.bean.CardBean,com.newland.pos.sdk.interfaces.CardListener) -> <init>
    int checkCardIsExist() -> checkCardIsExist
    void initData() -> initData
    void cancelCheckCard() -> cancelCheckCard
    void cardRead() -> cardRead
    void startCheckCard() -> startCheckCard
    android.os.Handler getCardReadHandler() -> getCardReadHandler
    java.lang.String encryptTrackData(java.lang.String) -> encryptTrackData
    void readTrackData(com.newland.pos.sdk.bean.CardBean) -> readTrackData
    void dealCardIsICCard(com.newland.pos.sdk.bean.CardBean) -> dealCardIsICCard
    boolean isIcCard(java.lang.String) -> isIcCard
    java.lang.String getEncryptMode() -> getEncryptMode
    void setEncryptMode(java.lang.String) -> setEncryptMode
    java.lang.String getIs_encrypt_track() -> getIs_encrypt_track
    void setIs_encrypt_track(java.lang.String) -> setIs_encrypt_track
    int getTMkIndex() -> getTMkIndex
    void setTMkIndex(int) -> setTMkIndex
    java.lang.String getIs_timeout_toast() -> getIs_timeout_toast
    void setIs_timeout_toast(java.lang.String) -> setIs_timeout_toast
    int SelectCardType(int) -> SelectCardType
    int stopreadcard() -> stopreadcard
    int cardpowerup(byte[],int[]) -> cardpowerup
    int cardpowerdown() -> cardpowerdown
    int cardrw(int,int,byte[],int[],byte[]) -> cardrw
    int M1StoreKey(byte,byte[],byte[]) -> M1StoreKey
    int M1AuthByKey(byte,byte,byte[]) -> M1AuthByKey
    int M1Write(byte,byte[]) -> M1Write
    int M1Read(byte,byte[]) -> M1Read
    int M1Inc(byte,byte[]) -> M1Inc
    int M1Dec(byte,byte[]) -> M1Dec
    int M1Transfer(byte) -> M1Transfer
    int M1ReStore(byte) -> M1ReStore
    int RFTypeARats(byte[]) -> RFTypeARats
    void access$0(com.newland.pos.sdk.card.CardModule) -> access$0
    com.newland.pos.sdk.interfaces.CardListener access$1(com.newland.pos.sdk.card.CardModule) -> access$1
    com.newland.pos.sdk.bean.CardBean access$2(com.newland.pos.sdk.card.CardModule) -> access$2
    void access$3(com.newland.pos.sdk.card.CardModule,com.newland.pos.sdk.bean.CardBean) -> access$3
    java.lang.String access$4(com.newland.pos.sdk.card.CardModule) -> access$4
    java.lang.String access$5(com.newland.pos.sdk.card.CardModule) -> access$5
    boolean access$6(com.newland.pos.sdk.card.CardModule) -> access$6
    java.lang.String access$7(com.newland.pos.sdk.card.CardModule) -> access$7
com.newland.pos.sdk.card.CardModule$1 -> com.newland.pos.sdk.card.CardModule$1:
    com.newland.pos.sdk.card.CardModule this$0 -> this$0
    void <init>(com.newland.pos.sdk.card.CardModule) -> <init>
    void run() -> run
com.newland.pos.sdk.card.CardModule$2 -> com.newland.pos.sdk.card.CardModule$2:
    com.newland.pos.sdk.card.CardModule this$0 -> this$0
    void <init>(com.newland.pos.sdk.card.CardModule) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.pos.sdk.card.CardModule$MSG -> com.newland.pos.sdk.card.CardModule$MSG:
    int CARD_READ_USER_CANCEL -> CARD_READ_USER_CANCEL
    int CARD_READ_TIMEOUT -> CARD_READ_TIMEOUT
    int MSCARD -> MSCARD
    int ICCARD -> ICCARD
    int RFCARD -> RFCARD
    int CARD_READ_CANCEL -> CARD_READ_CANCEL
    int CARD_READ_EXCEPTION -> CARD_READ_EXCEPTION
    int CARD_READ_AGAIN -> CARD_READ_AGAIN
    int CARD_READ_COMFIRM -> CARD_READ_COMFIRM
    int CARD_READ_IC_CARD -> CARD_READ_IC_CARD
    int CARD_READ_IC -> CARD_READ_IC
    int CARD_READ_CARDNO_NOT_ALLOW -> CARD_READ_CARDNO_NOT_ALLOW
    int CARD_READ_TRACK2_NO_ALLOW -> CARD_READ_TRACK2_NO_ALLOW
    int CARD_READ_FAIL -> CARD_READ_FAIL
    int RFCARD_READ_FAIL -> RFCARD_READ_FAIL
    int QPOC_EXCEED_AMOUNT -> QPOC_EXCEED_AMOUNT
    com.newland.pos.sdk.card.CardModule this$0 -> this$0
    void <init>(com.newland.pos.sdk.card.CardModule) -> <init>
com.newland.pos.sdk.card.CardModule$ReadCardType -> com.newland.pos.sdk.card.CardModule$ReadCardType:
    int CARD_STRIPE -> CARD_STRIPE
    int CARD_KEYIN -> CARD_KEYIN
    int CARD_INSERTIC -> CARD_INSERTIC
    int CARD_RFCARD -> CARD_RFCARD
    void <init>() -> <init>
com.newland.pos.sdk.common.EmvConst -> com.newland.pos.sdk.common.EmvConst:
    int AID_RMV -> AID_RMV
    int AID_UPT -> AID_UPT
    int AID_GET -> AID_GET
    int AID_CONFIG_R -> AID_CONFIG_R
    int AID_CONFIG_W -> AID_CONFIG_W
    int AID_CLR -> AID_CLR
    int CAPK_RMV -> CAPK_RMV
    int CAPK_UPT -> CAPK_UPT
    int CAPK_DIS -> CAPK_DIS
    int CAPK_ENB -> CAPK_ENB
    int CAPK_GET -> CAPK_GET
    int CAPK_CLR -> CAPK_CLR
    int BCTC_TEST_ENB -> BCTC_TEST_ENB
    int PBOC2_ENB -> PBOC2_ENB
    int VISA_ENB -> VISA_ENB
    int MASTERCARD_ENB -> MASTERCARD_ENB
    int JCB_ENB -> JCB_ENB
    int AMEX_ENB -> AMEX_ENB
    int AS_Support_PSE -> AS_Support_PSE
    int AS_Support_CardHolder_Confirm -> AS_Support_CardHolder_Confirm
    int AS_Support_Preferred_Order -> AS_Support_Preferred_Order
    int AS_Support_Partial_AID -> AS_Support_Partial_AID
    int AS_Support_Multi_Language -> AS_Support_Multi_Language
    int AS_Support_Common_Charset -> AS_Support_Common_Charset
    int DA_Support_IPKC_Revoc_Check -> DA_Support_IPKC_Revoc_Check
    int DA_Support_Default_DDOL -> DA_Support_Default_DDOL
    int DA_Support_CAPKLoad_Fail_Action -> DA_Support_CAPKLoad_Fail_Action
    int DA_Support_CAPK_Checksum -> DA_Support_CAPK_Checksum
    int CV_Support_Bypass_PIN -> CV_Support_Bypass_PIN
    int CV_Support_PIN_Try_Counter -> CV_Support_PIN_Try_Counter
    int CV_Support_Fail_CVM -> CV_Support_Fail_CVM
    int CV_Support_Amounts_before_CVM -> CV_Support_Amounts_before_CVM
    int CV_Support_Bypass_ALL_PIN -> CV_Support_Bypass_ALL_PIN
    int TRM_Support_FloorLimit -> TRM_Support_FloorLimit
    int TRM_Support_RandomSelect -> TRM_Support_RandomSelect
    int TRM_Support_VelocityCheck -> TRM_Support_VelocityCheck
    int TRM_Support_TransLog -> TRM_Support_TransLog
    int TRM_Support_ExceptionFile -> TRM_Support_ExceptionFile
    int TRM_Support_AIPBased -> TRM_Support_AIPBased
    int TRM_Use_EMV_LogPolicy -> TRM_Use_EMV_LogPolicy
    int TAA_Support_TAC -> TAA_Support_TAC
    int TAA_Support_DAC_before_1GenAC -> TAA_Support_DAC_before_1GenAC
    int TAA_Support_DAC_after_1GenAC -> TAA_Support_DAC_after_1GenAC
    int TAA_Support_Skip_DAC_OnlineFail -> TAA_Support_Skip_DAC_OnlineFail
    int TAA_Support_DAC_OnlineFail -> TAA_Support_DAC_OnlineFail
    int TAA_Support_CDAFail_Detected -> TAA_Support_CDAFail_Detected
    int TAA_Support_CDA_Always_in_ARQC -> TAA_Support_CDA_Always_in_ARQC
    int TAA_Support_CDA_Alawys_in_2TC -> TAA_Support_CDA_Alawys_in_2TC
    int CP_Support_Force_Online -> CP_Support_Force_Online
    int CP_Support_Force_Accept -> CP_Support_Force_Accept
    int CP_Support_Advices -> CP_Support_Advices
    int CP_Support_Issuer_VoiceRef -> CP_Support_Issuer_VoiceRef
    int CP_Support_Batch_Data_Capture -> CP_Support_Batch_Data_Capture
    int CP_Support_Online_Data_capture -> CP_Support_Online_Data_capture
    int CP_Support_Default_TDOL -> CP_Support_Default_TDOL
    int MISC_Support_Account_Select -> MISC_Support_Account_Select
    int MISC_Support_ISDL_Greater_than_128 -> MISC_Support_ISDL_Greater_than_128
    int MISC_Support_Internal_Date_Mana -> MISC_Support_Internal_Date_Mana
    int TC_Manual_Key_Entry -> TC_Manual_Key_Entry
    int TC_Magnetic_Stripe -> TC_Magnetic_Stripe
    int TC_IC_With_Contacts -> TC_IC_With_Contacts
    int TC_Plaintext_PIN -> TC_Plaintext_PIN
    int TC_Enciphered_PIN_Online -> TC_Enciphered_PIN_Online
    int TC_Signature_Paper -> TC_Signature_Paper
    int TC_Enciphered_PIN_Offline -> TC_Enciphered_PIN_Offline
    int TC_No_CVM_Required -> TC_No_CVM_Required
    int TC_Cardholder_Cert -> TC_Cardholder_Cert
    int TC_SDA -> TC_SDA
    int TC_DDA -> TC_DDA
    int TC_Card_Capture -> TC_Card_Capture
    int TC_CDA -> TC_CDA
    int ATC_Cash -> ATC_Cash
    int ATC_Goods -> ATC_Goods
    int ATC_Services -> ATC_Services
    int ATC_Cashback -> ATC_Cashback
    int ATC_Inquiry -> ATC_Inquiry
    int ATC_Transfer -> ATC_Transfer
    int ATC_Payment -> ATC_Payment
    int ATC_Administrative -> ATC_Administrative
    int ATC_Cash_Deposit -> ATC_Cash_Deposit
    int ATC_Numeric_Keys -> ATC_Numeric_Keys
    int ATC_Alphabetic_Special_Keys -> ATC_Alphabetic_Special_Keys
    int ATC_Command_Keys -> ATC_Command_Keys
    int ATC_Function_Keys -> ATC_Function_Keys
    int ATC_Print_Attendant -> ATC_Print_Attendant
    int ATC_Print_Cardholder -> ATC_Print_Cardholder
    int ATC_Display_Attendant -> ATC_Display_Attendant
    int ATC_Display_Cardholder -> ATC_Display_Cardholder
    int ATC_Code_Table_10 -> ATC_Code_Table_10
    int ATC_Code_Table_9 -> ATC_Code_Table_9
    int ATC_Code_Table_8 -> ATC_Code_Table_8
    int ATC_Code_Table_7 -> ATC_Code_Table_7
    int ATC_Code_Table_6 -> ATC_Code_Table_6
    int ATC_Code_Table_5 -> ATC_Code_Table_5
    int ATC_Code_Table_4 -> ATC_Code_Table_4
    int ATC_Code_Table_3 -> ATC_Code_Table_3
    int ATC_Code_Table_2 -> ATC_Code_Table_2
    int ATC_Code_Table_1 -> ATC_Code_Table_1
    int EMV_PROP_MSD -> EMV_PROP_MSD
    int EMV_PROP_PBOCCLSS -> EMV_PROP_PBOCCLSS
    int EMV_PROP_QPBOC -> EMV_PROP_QPBOC
    int EMV_PROP_PBOC -> EMV_PROP_PBOC
    int EMV_PROP_OFFLINE_ONLY -> EMV_PROP_OFFLINE_ONLY
    int EMV_PROP_ONLINEPIN -> EMV_PROP_ONLINEPIN
    int EMV_PROP_SIGNATURE -> EMV_PROP_SIGNATURE
    int EMV_PROP_ONLINEAC -> EMV_PROP_ONLINEAC
    int EMV_PROP_CVM -> EMV_PROP_CVM
    int EMV_PROP_01VERSUPPORT -> EMV_PROP_01VERSUPPORT
    int EMV_TRANS_REQAMT_NO -> EMV_TRANS_REQAMT_NO
    int EMV_TRANS_REQAMT_APS -> EMV_TRANS_REQAMT_APS
    int EMV_TRANS_REQAMT_DDA -> EMV_TRANS_REQAMT_DDA
    int EMV_TRANS_REQAMT_RFPRECESS -> EMV_TRANS_REQAMT_RFPRECESS
    int EMV_PROC_TO_APPSEL_INIT -> EMV_PROC_TO_APPSEL_INIT
    int EMV_PROC_TO_READAPPDATA -> EMV_PROC_TO_READAPPDATA
    int EMV_PROC_TO_OFFLINEAUTH -> EMV_PROC_TO_OFFLINEAUTH
    int EMV_PROC_TO_RESTRITCT -> EMV_PROC_TO_RESTRITCT
    int EMV_PROC_TO_CV -> EMV_PROC_TO_CV
    int EMV_PROC_TO_RISKMANA -> EMV_PROC_TO_RISKMANA
    int EMV_PROC_TO_1GENAC -> EMV_PROC_TO_1GENAC
    int EMV_PROC_TO_2GENAC -> EMV_PROC_TO_2GENAC
    int EMV_PROC_CONTINUE -> EMV_PROC_CONTINUE
    int EMV_TRANS_GOODS -> EMV_TRANS_GOODS
    int EMV_TRANS_SERVICES -> EMV_TRANS_SERVICES
    int EMV_TRANS_CASH -> EMV_TRANS_CASH
    int EMV_TRANS_CASHBACK -> EMV_TRANS_CASHBACK
    int EMV_TRANS_INQUIRY -> EMV_TRANS_INQUIRY
    int EMV_TRANS_TRANFER -> EMV_TRANS_TRANFER
    int EMV_TRANS_ADMIN -> EMV_TRANS_ADMIN
    int EMV_TRANS_CASHDEPOSIT -> EMV_TRANS_CASHDEPOSIT
    int EMV_TRANS_PAYMENT -> EMV_TRANS_PAYMENT
    int EMV_TRANS_PBOCLOG -> EMV_TRANS_PBOCLOG
    int EMV_TRANS_SALE -> EMV_TRANS_SALE
    int EMV_TRANS_PREAUTH -> EMV_TRANS_PREAUTH
    int EMV_TRANS_BALANCE -> EMV_TRANS_BALANCE
    int EMV_TRANS_ECLOADLOG -> EMV_TRANS_ECLOADLOG
    int EMV_TRANS_EC_GOODS -> EMV_TRANS_EC_GOODS
    int EMV_TRANS_EC_SERVICES -> EMV_TRANS_EC_SERVICES
    int EMV_TRANS_EC_SALE -> EMV_TRANS_EC_SALE
    int EMV_TRANS_EC_BINDLOAD -> EMV_TRANS_EC_BINDLOAD
    int EMV_TRANS_EC_NOBINDLOAD -> EMV_TRANS_EC_NOBINDLOAD
    int EMV_TRANS_EC_CASHLOAD -> EMV_TRANS_EC_CASHLOAD
    int EMV_TRANS_EC_UPLOAD -> EMV_TRANS_EC_UPLOAD
    int EMV_TRANS_EC_INQUIRE_LOG -> EMV_TRANS_EC_INQUIRE_LOG
    int EMV_TRANS_EC_INQUIRE_AMOUNT -> EMV_TRANS_EC_INQUIRE_AMOUNT
    int EMV_TRANS_EC_CASHLOAD_VOID -> EMV_TRANS_EC_CASHLOAD_VOID
    int EMV_TRANS_RF_START -> EMV_TRANS_RF_START
    int EMV_TRANS_RF_GOODS -> EMV_TRANS_RF_GOODS
    int EMV_TRANS_RF_SERVICES -> EMV_TRANS_RF_SERVICES
    int EMV_TRANS_RF_SALE -> EMV_TRANS_RF_SALE
    int EMV_TRANS_RF_BINDLOAD -> EMV_TRANS_RF_BINDLOAD
    int EMV_TRANS_RF_NOBINDLOAD -> EMV_TRANS_RF_NOBINDLOAD
    int EMV_TRANS_RF_CASHLOAD -> EMV_TRANS_RF_CASHLOAD
    int EMV_TRANS_RF_INQUIRE_AMOUNT -> EMV_TRANS_RF_INQUIRE_AMOUNT
    int EMV_TRANS_RF_UPLOAD -> EMV_TRANS_RF_UPLOAD
    int EMV_TRANS_RF_CASHLOAD_VOID -> EMV_TRANS_RF_CASHLOAD_VOID
    int EMV_TRANS_RF_PBOCLOG -> EMV_TRANS_RF_PBOCLOG
    int EMV_TRANS_RF_UPTCARDINFO -> EMV_TRANS_RF_UPTCARDINFO
    int EMV_TRANS_RF_PBOC_SALE -> EMV_TRANS_RF_PBOC_SALE
    int EMV_TRANS_RF_ECLOADLOG -> EMV_TRANS_RF_ECLOADLOG
    int EMV_TRANS_CANCEL -> EMV_TRANS_CANCEL
    int EMV_TRANS_NOCARD -> EMV_TRANS_NOCARD
    int EMV_TRANS_MORECARD -> EMV_TRANS_MORECARD
    int EMV_TRANS_FALLBACK -> EMV_TRANS_FALLBACK
    int EMV_TRANS_TERMINATE -> EMV_TRANS_TERMINATE
    int EMV_TRANS_ACCEPT -> EMV_TRANS_ACCEPT
    int EMV_TRANS_DENIAL -> EMV_TRANS_DENIAL
    int EMV_TRANS_GOONLINE -> EMV_TRANS_GOONLINE
    int EMV_TRANS_2GAC_AAC -> EMV_TRANS_2GAC_AAC
    int EMV_TRANS_ONLINEFAIL -> EMV_TRANS_ONLINEFAIL
    int EMV_TRANS_ONLINESUCC_ACCEPT -> EMV_TRANS_ONLINESUCC_ACCEPT
    int EMV_TRANS_ONLINESUCC_DENIAL -> EMV_TRANS_ONLINESUCC_DENIAL
    int EMV_TRANS_ONLINESUCC_ISSREF -> EMV_TRANS_ONLINESUCC_ISSREF
    int EMV_TRANS_GOON_PBOC2LOG -> EMV_TRANS_GOON_PBOC2LOG
    int EMV_TRANS_GOON_ECLOADLOG -> EMV_TRANS_GOON_ECLOADLOG
    int EMV_TRANS_EC_GOON_AMOUNT -> EMV_TRANS_EC_GOON_AMOUNT
    int EMV_TRANS_QPBOC_ACCEPT -> EMV_TRANS_QPBOC_ACCEPT
    int EMV_TRANS_QPBOC_DENIAL -> EMV_TRANS_QPBOC_DENIAL
    int EMV_TRANS_QPBOC_GOONLINE -> EMV_TRANS_QPBOC_GOONLINE
    int EMV_TRANS_MSD_GOONLINE -> EMV_TRANS_MSD_GOONLINE
    int EMV_TRANS_RF_GOON_AMOUNT -> EMV_TRANS_RF_GOON_AMOUNT
    int EMV_TRANS_RF_ACTIVECARD -> EMV_TRANS_RF_ACTIVECARD
    int EMV_TRANS_SLECT_NEXTAID -> EMV_TRANS_SLECT_NEXTAID
    int EMV_ERR_BASE -> EMV_ERR_BASE
    int RFERR_BASE -> RFERR_BASE
    int RFERR_PREPROCESS_PARAFILE -> RFERR_PREPROCESS_PARAFILE
    int RFERR_PREPROCESS_AMTQUIT -> RFERR_PREPROCESS_AMTQUIT
    int RFERR_PREPROCESS_AMTTIMEOUT -> RFERR_PREPROCESS_AMTTIMEOUT
    int RFERR_PREPROCESS_AMTFAIL -> RFERR_PREPROCESS_AMTFAIL
    int RFERR_PREPROCESS_AMTLIMITOVER -> RFERR_PREPROCESS_AMTLIMITOVER
    int RFERR_PREPROCESS_REQONLINE -> RFERR_PREPROCESS_REQONLINE
    void <init>() -> <init>
com.newland.pos.sdk.common.EmvResult -> com.newland.pos.sdk.common.EmvResult:
    int EMV_INITAPP_FAIL -> EMV_INITAPP_FAIL
    int EMV_INITAPP_QUIT -> EMV_INITAPP_QUIT
    int EMV_FALLBACK -> EMV_FALLBACK
    int EMV_FAIL -> EMV_FAIL
    void <init>() -> <init>
com.newland.pos.sdk.common.EmvTag -> com.newland.pos.sdk.common.EmvTag:
    int TAG_9F26_IC_AC -> TAG_9F26_IC_AC
    int TAG_9F42_IC_APPCURCODE -> TAG_9F42_IC_APPCURCODE
    int TAG_9F44_IC_APPCUREXP -> TAG_9F44_IC_APPCUREXP
    int TAG_9F05_IC_APPDISCDATA -> TAG_9F05_IC_APPDISCDATA
    int TAG_5F25_IC_APPEFFECTDATE -> TAG_5F25_IC_APPEFFECTDATE
    int TAG_5F24_IC_APPEXPIREDATE -> TAG_5F24_IC_APPEXPIREDATE
    int TAG_94_IC_AFL -> TAG_94_IC_AFL
    int TAG_4F_IC_AID -> TAG_4F_IC_AID
    int TAG_82_IC_AIP -> TAG_82_IC_AIP
    int TAG_50_IC_APPLABEL -> TAG_50_IC_APPLABEL
    int TAG_9F12_IC_APNAME -> TAG_9F12_IC_APNAME
    int TAG_5A_IC_PAN -> TAG_5A_IC_PAN
    int TAG_5F34_IC_PANSN -> TAG_5F34_IC_PANSN
    int TAG_87_IC_APID -> TAG_87_IC_APID
    int TAG_9F3B_IC_APCUR -> TAG_9F3B_IC_APCUR
    int TAG_9F43_IC_APCUREXP -> TAG_9F43_IC_APCUREXP
    int TAG_61_IC_APPTEMP -> TAG_61_IC_APPTEMP
    int TAG_9F36_IC_ATC -> TAG_9F36_IC_ATC
    int TAG_9F07_IC_AUC -> TAG_9F07_IC_AUC
    int TAG_9F08_IC_APPVERNO -> TAG_9F08_IC_APPVERNO
    int TAG_8C_IC_CDOL1 -> TAG_8C_IC_CDOL1
    int TAG_8D_IC_CDOL2 -> TAG_8D_IC_CDOL2
    int TAG_5F20_IC_HOLDERNAME -> TAG_5F20_IC_HOLDERNAME
    int TAG_9F0B_IC_HOLDERNAMEEX -> TAG_9F0B_IC_HOLDERNAMEEX
    int TAG_8E_IC_CVMLIST -> TAG_8E_IC_CVMLIST
    int TAG_8F_IC_CAPKINDEX -> TAG_8F_IC_CAPKINDEX
    int TAG_9F27_IC_CID -> TAG_9F27_IC_CID
    int TAG_9F45_IC_DTAUTHCODE -> TAG_9F45_IC_DTAUTHCODE
    int TAG_84_IC_DFNAME -> TAG_84_IC_DFNAME
    int TAG_9D_IC_DDFNAME -> TAG_9D_IC_DDFNAME
    int TAG_73_IC_DIRDISCTEMP -> TAG_73_IC_DIRDISCTEMP
    int TAG_9F49_IC_DDOL -> TAG_9F49_IC_DDOL
    int TAG_BF0C_IC_FCIDISCDATA -> TAG_BF0C_IC_FCIDISCDATA
    int TAG_A5_IC_FCIPROPTEMP -> TAG_A5_IC_FCIPROPTEMP
    int TAG_6F_IC_FCITEMP -> TAG_6F_IC_FCITEMP
    int TAG_9F4C_IC_ICCDYNNUM -> TAG_9F4C_IC_ICCDYNNUM
    int TAG_9F2D_IC_PECERT -> TAG_9F2D_IC_PECERT
    int TAG_9F2E_IC_PEEXP -> TAG_9F2E_IC_PEEXP
    int TAG_9F2F_IC_PERMD -> TAG_9F2F_IC_PERMD
    int TAG_9F46_IC_ICCPKCERT -> TAG_9F46_IC_ICCPKCERT
    int TAG_9F47_IC_ICCPKEXP -> TAG_9F47_IC_ICCPKEXP
    int TAG_9F48_IC_ICCPKRMD -> TAG_9F48_IC_ICCPKRMD
    int TAG_9F0D_IC_IAC_DEFAULT -> TAG_9F0D_IC_IAC_DEFAULT
    int TAG_9F0E_IC_IAC_DENIAL -> TAG_9F0E_IC_IAC_DENIAL
    int TAG_9F0F_IC_IAC_ONLINE -> TAG_9F0F_IC_IAC_ONLINE
    int TAG_9F10_IC_ISSAPPDATA -> TAG_9F10_IC_ISSAPPDATA
    int TAG_9F11_IC_ISSCTINDEX -> TAG_9F11_IC_ISSCTINDEX
    int TAG_5F28_IC_ISSCOUNTRYCODE -> TAG_5F28_IC_ISSCOUNTRYCODE
    int TAG_90_IC_ISSPKCERT -> TAG_90_IC_ISSPKCERT
    int TAG_9F32_IC_ISSPKEXP -> TAG_9F32_IC_ISSPKEXP
    int TAG_92_IC_ISSPKRMD -> TAG_92_IC_ISSPKRMD
    int TAG_5F50_IC_ISSURL -> TAG_5F50_IC_ISSURL
    int TAG_5F2D_IC_LANGPREF -> TAG_5F2D_IC_LANGPREF
    int TAG_9F13_IC_LASTATC -> TAG_9F13_IC_LASTATC
    int TAG_9F14_IC_LCOL -> TAG_9F14_IC_LCOL
    int TAG_9F17_IC_PINTRYCNTR -> TAG_9F17_IC_PINTRYCNTR
    int TAG_9F38_IC_PDOL -> TAG_9F38_IC_PDOL
    int TAG_80_IC_RMTF1 -> TAG_80_IC_RMTF1
    int TAG_77_IC_RMTF2 -> TAG_77_IC_RMTF2
    int TAG_5F30_IC_SERVICECODE -> TAG_5F30_IC_SERVICECODE
    int TAG_88_IC_SFI -> TAG_88_IC_SFI
    int TAG_9F4B_IC_SIGNDYNAPPDT -> TAG_9F4B_IC_SIGNDYNAPPDT
    int TAG_93_IC_SIGNSTAAPPDT -> TAG_93_IC_SIGNSTAAPPDT
    int TAG_9F4A_IC_SDATAGLIST -> TAG_9F4A_IC_SDATAGLIST
    int TAG_9F1F_IC_TRACK1DATA -> TAG_9F1F_IC_TRACK1DATA
    int TAG_9F20_IC_TRACK2DATA -> TAG_9F20_IC_TRACK2DATA
    int TAG_57_IC_TRACK2EQUDATA -> TAG_57_IC_TRACK2EQUDATA
    int TAG_97_IC_TDOL -> TAG_97_IC_TDOL
    int TAG_9F23_IC_UCOL -> TAG_9F23_IC_UCOL
    int TAG_DF31_IC_IISSCRIRES -> TAG_DF31_IC_IISSCRIRES
    int TAG_9F63_IC_PRODUCTID -> TAG_9F63_IC_PRODUCTID
    int TAG_9F01_TM_ACQID -> TAG_9F01_TM_ACQID
    int TAG_9F40_TM_CAP_AD -> TAG_9F40_TM_CAP_AD
    int TAG_81_TM_AUTHAMNTB -> TAG_81_TM_AUTHAMNTB
    int TAG_9F02_TM_AUTHAMNTN -> TAG_9F02_TM_AUTHAMNTN
    int TAG_9F04_TM_OTHERAMNTB -> TAG_9F04_TM_OTHERAMNTB
    int TAG_9F03_TM_OTHERAMNTN -> TAG_9F03_TM_OTHERAMNTN
    int TAG_9F3A_TM_REFCURAMNT -> TAG_9F3A_TM_REFCURAMNT
    int TAG_9F06_TM_AID -> TAG_9F06_TM_AID
    int TAG_9F09_TM_APPVERNO -> TAG_9F09_TM_APPVERNO
    int TAG_89_TM_AUTHCODE -> TAG_89_TM_AUTHCODE
    int TAG_8A_TM_ARC -> TAG_8A_TM_ARC
    int TAG_9F34_TM_CVMRESULT -> TAG_9F34_TM_CVMRESULT
    int TAG_9F22_TM_CAPKINDEX -> TAG_9F22_TM_CAPKINDEX
    int TAG_9F1E_TM_IFDSN -> TAG_9F1E_TM_IFDSN
    int TAG_91_TM_ISSAUTHDT -> TAG_91_TM_ISSAUTHDT
    int TAG_86_TM_ISSSCRCMD -> TAG_86_TM_ISSSCRCMD
    int TAG_9F18_TM_ISSSCRID -> TAG_9F18_TM_ISSSCRID
    int TAG_9F15_TM_MCHCATCODE -> TAG_9F15_TM_MCHCATCODE
    int TAG_9F16_TM_MCHID -> TAG_9F16_TM_MCHID
    int TAG_9F39_TM_POSENTMODE -> TAG_9F39_TM_POSENTMODE
    int TAG_9F33_TM_CAP -> TAG_9F33_TM_CAP
    int TAG_9F1A_TM_CNTRYCODE -> TAG_9F1A_TM_CNTRYCODE
    int TAG_9F1B_TM_FLOORLMT -> TAG_9F1B_TM_FLOORLMT
    int TAG_9F1C_TM_TERMID -> TAG_9F1C_TM_TERMID
    int TAG_9F1D_TM_RMDATA -> TAG_9F1D_TM_RMDATA
    int TAG_9F35_TM_TERMTYPE -> TAG_9F35_TM_TERMTYPE
    int TAG_95_TM_TVR -> TAG_95_TM_TVR
    int TAG_98_TM_TCHASH -> TAG_98_TM_TCHASH
    int TAG_5F2A_TM_CURCODE -> TAG_5F2A_TM_CURCODE
    int TAG_5F36_TM_CUREXP -> TAG_5F36_TM_CUREXP
    int TAG_9A_TM_TRANSDATE -> TAG_9A_TM_TRANSDATE
    int TAG_99_TM_PINDATA -> TAG_99_TM_PINDATA
    int TAG_9F3C_TM_REFCURCODE -> TAG_9F3C_TM_REFCURCODE
    int TAG_9F3D_TM_REFCUREXP -> TAG_9F3D_TM_REFCUREXP
    int TAG_9F41_TM_TRSEQCNTR -> TAG_9F41_TM_TRSEQCNTR
    int TAG_9B_TM_TSI -> TAG_9B_TM_TSI
    int TAG_9F21_TM_TRANSTIME -> TAG_9F21_TM_TRANSTIME
    int TAG_9C_TM_TRANSTYPE -> TAG_9C_TM_TRANSTYPE
    int TAG_9F37_TM_UNPNUM -> TAG_9F37_TM_UNPNUM
    void <init>() -> <init>
com.newland.pos.sdk.common.EmvTransType -> com.newland.pos.sdk.common.EmvTransType:
    int TRANS_BALANCE -> TRANS_BALANCE
    int TRANS_SALE -> TRANS_SALE
    int TRANS_AUTHSALE -> TRANS_AUTHSALE
    int TRANS_AUTHSALEOFF -> TRANS_AUTHSALEOFF
    int TRANS_PREAUTH -> TRANS_PREAUTH
    int TRANS_REFUND -> TRANS_REFUND
    int TRANS_VOID_SALE -> TRANS_VOID_SALE
    int TRANS_VOID_AUTHSALE -> TRANS_VOID_AUTHSALE
    int TRANS_VOID_PREAUTH -> TRANS_VOID_PREAUTH
    int TRANS_EMV_REFUND -> TRANS_EMV_REFUND
    int TRANS_EC_PURCHASE -> TRANS_EC_PURCHASE
    int TRANS_EC_LOAD -> TRANS_EC_LOAD
    int TRANS_EC_LOAD_CASH -> TRANS_EC_LOAD_CASH
    int TRANS_EC_LOAD_NOT_BIND -> TRANS_EC_LOAD_NOT_BIND
    int TRANS_EC_VOID_LOAD_CASH -> TRANS_EC_VOID_LOAD_CASH
    int TRANS_EC_BALANCE -> TRANS_EC_BALANCE
    void <init>() -> <init>
com.newland.pos.sdk.common.TransConst -> com.newland.pos.sdk.common.TransConst:
    void <init>() -> <init>
com.newland.pos.sdk.common.TransConst$AmountBeanConst -> com.newland.pos.sdk.common.TransConst$AmountBeanConst:
    int AMOUNT_DECIMAL_LEN -> AMOUNT_DECIMAL_LEN
    java.lang.String CURRENCY -> CURRENCY
    long MIN_AMOUNT -> MIN_AMOUNT
    long MAX_AMOUNT -> MAX_AMOUNT
    long DEFAULT_AMOUNT -> DEFAULT_AMOUNT
    int TIME_OUT -> TIME_OUT
    void <init>() -> <init>
com.newland.pos.sdk.common.TransConst$AmountFormat -> com.newland.pos.sdk.common.TransConst$AmountFormat:
    int WITHOUT_DECIMAL -> WITHOUT_DECIMAL
    int ONE_DECIMAL -> ONE_DECIMAL
    int TWO_DECIMAL -> TWO_DECIMAL
    int THREE_DECIMAL -> THREE_DECIMAL
    void <init>() -> <init>
com.newland.pos.sdk.common.TransConst$PinBeanConst -> com.newland.pos.sdk.common.TransConst$PinBeanConst:
    com.newland.pos.sdk.common.TransConst$PinInputMode PIN_INPUT_MODE -> PIN_INPUT_MODE
    int PIN_MIN_LEN -> PIN_MIN_LEN
    int PIN_MAX_LEN -> PIN_MAX_LEN
    int TIME_OUT -> TIME_OUT
    void <clinit>() -> <clinit>
    void <init>() -> <init>
com.newland.pos.sdk.common.TransConst$PinInputMode -> com.newland.pos.sdk.common.TransConst$PinInputMode:
    com.newland.pos.sdk.common.TransConst$PinInputMode PINTYPE_WITH_PAN -> PINTYPE_WITH_PAN
    com.newland.pos.sdk.common.TransConst$PinInputMode PINTYPE_WITHOUT_PAN -> PINTYPE_WITHOUT_PAN
    com.newland.pos.sdk.common.TransConst$PinInputMode[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.newland.pos.sdk.common.TransConst$PinInputMode[] values() -> values
    com.newland.pos.sdk.common.TransConst$PinInputMode valueOf(java.lang.String) -> valueOf
com.newland.pos.sdk.common.TransConst$QpbocPriority -> com.newland.pos.sdk.common.TransConst$QpbocPriority:
    int EMV -> EMV
    int EC -> EC
    void <init>() -> <init>
com.newland.pos.sdk.common.TransConst$StepResult -> com.newland.pos.sdk.common.TransConst$StepResult:
    com.newland.pos.sdk.common.TransConst$StepResult SUCCESS -> SUCCESS
    com.newland.pos.sdk.common.TransConst$StepResult FAIL -> FAIL
    com.newland.pos.sdk.common.TransConst$StepResult TIME_OUT -> TIME_OUT
    com.newland.pos.sdk.common.TransConst$StepResult BACK -> BACK
    com.newland.pos.sdk.common.TransConst$StepResult WAITING -> WAITING
    com.newland.pos.sdk.common.TransConst$StepResult[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.newland.pos.sdk.common.TransConst$StepResult[] values() -> values
    com.newland.pos.sdk.common.TransConst$StepResult valueOf(java.lang.String) -> valueOf
com.newland.pos.sdk.common.TransConst$TransAttr -> com.newland.pos.sdk.common.TransConst$TransAttr:
    int ATTR_MAG -> ATTR_MAG
    int ATTR_EMV_STANDARD -> ATTR_EMV_STANDARD
    int ATTR_EMV_PREDIGEST -> ATTR_EMV_PREDIGEST
    int ATTR_FALLBACK -> ATTR_FALLBACK
    int ATTR_qPBOC -> ATTR_qPBOC
    int ATTR_EMV_STANDARD_RF -> ATTR_EMV_STANDARD_RF
    int ATTR_EMV_PREDIGEST_RF -> ATTR_EMV_PREDIGEST_RF
    int ATTR_INPUT_PAN -> ATTR_INPUT_PAN
    void <init>() -> <init>
com.newland.pos.sdk.device.Device -> com.newland.pos.sdk.device.Device:
    void <init>() -> <init>
    java.lang.String getCertNo() -> getCertNo
    java.lang.String getSN() -> getSN
    boolean lightTurnOn(int,int,int,int) -> lightTurnOn
    boolean lightTurnOff(int,int,int,int) -> lightTurnOff
    boolean lightBlink(int,int,int,int) -> lightBlink
    void Beep(int) -> Beep
    com.newland.pos.sdk.device.Device$SCell getCellInfo(android.content.Context) -> getCellInfo
    java.lang.String getK21hardInfoVersion() -> getK21hardInfoVersion
    java.lang.String getK21FirmVersion() -> getK21FirmVersion
    java.lang.String getPUBVersion_JNI() -> getPUBVersion_JNI
com.newland.pos.sdk.device.Device$SCell -> com.newland.pos.sdk.device.Device$SCell:
    int MCC -> MCC
    int MNC -> MNC
    int LAC -> LAC
    int CID -> CID
    void <init>() -> <init>
    int getMCC() -> getMCC
    void setMCC(int) -> setMCC
    int getMNC() -> getMNC
    void setMNC(int) -> setMNC
    int getLAC() -> getLAC
    void setLAC(int) -> setLAC
    int getCID() -> getCID
    void setCID(int) -> setCID
    void access$0(com.newland.pos.sdk.device.Device$SCell,int) -> access$0
    void access$1(com.newland.pos.sdk.device.Device$SCell,int) -> access$1
    void access$2(com.newland.pos.sdk.device.Device$SCell,int) -> access$2
    void access$3(com.newland.pos.sdk.device.Device$SCell,int) -> access$3
com.newland.pos.sdk.device.PrintModule -> com.newland.pos.sdk.device.PrintModule:
    com.newland.pos.sdk.device.PrintModule instance -> instance
    int MAX_LEN -> MAX_LEN
    void <init>() -> <init>
    com.newland.pos.sdk.device.PrintModule getInstance() -> getInstance
    com.newland.pos.sdk.device.PrintModule$PRNSTATUS getPrinterStatus() -> getPrinterStatus
    int printScript(java.lang.String) -> printScript
    int printSetfont(int,int) -> printSetfont
    int printSetmode(int) -> printSetmode
    int printSetformat(int,int,int) -> printSetformat
    int printString(byte[]) -> printString
    int printBMP(byte[]) -> printBMP
    int printprintPNG(byte[]) -> printprintPNG
    int printBMP(int,byte[]) -> printBMP
    int printprintPNG(int,byte[]) -> printprintPNG
com.newland.pos.sdk.device.PrintModule$PRNSTATUS -> com.newland.pos.sdk.device.PrintModule$PRNSTATUS:
    com.newland.pos.sdk.device.PrintModule$PRNSTATUS PRN_STATUS_OK -> PRN_STATUS_OK
    com.newland.pos.sdk.device.PrintModule$PRNSTATUS PRN_STATUS_BUSY -> PRN_STATUS_BUSY
    com.newland.pos.sdk.device.PrintModule$PRNSTATUS PRN_STATUS_NOPAPER -> PRN_STATUS_NOPAPER
    com.newland.pos.sdk.device.PrintModule$PRNSTATUS PRN_STATUS_OVERHEAT -> PRN_STATUS_OVERHEAT
    com.newland.pos.sdk.device.PrintModule$PRNSTATUS PRN_STATUS_VOLERR -> PRN_STATUS_VOLERR
    com.newland.pos.sdk.device.PrintModule$PRNSTATUS PRN_STATUS_OTHER -> PRN_STATUS_OTHER
    com.newland.pos.sdk.device.PrintModule$PRNSTATUS[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.newland.pos.sdk.device.PrintModule$PRNSTATUS[] values() -> values
    com.newland.pos.sdk.device.PrintModule$PRNSTATUS valueOf(java.lang.String) -> valueOf
com.newland.pos.sdk.device.ScanModule -> com.newland.pos.sdk.device.ScanModule:
    android.newland.scan.ScanUtil scanUtil -> scanUtil
    android.os.Handler handler -> handler
    com.newland.pos.sdk.interfaces.ScanListener scanListener -> scanListener
    java.lang.String scanResult -> scanResult
    java.lang.Thread scanThread -> scanThread
    boolean isScaning -> isScaning
    void <clinit>() -> <clinit>
    void <init>(android.content.Context,com.newland.pos.sdk.interfaces.ScanListener) -> <init>
    int ScanInit() -> ScanInit
    int ScanInit(int,int,int,boolean) -> ScanInit
    int setModeContinuous(int,int) -> setModeContinuous
    java.lang.String DoScan() -> DoScan
    void stopScan() -> stopScan
    void relese() -> relese
    void initData() -> initData
    void cancelScan() -> cancelScan
    void Scan() -> Scan
    void startScan() -> startScan
    android.os.Handler getCardReadHandler() -> getCardReadHandler
    java.lang.String getScanResult() -> getScanResult
    void access$0(com.newland.pos.sdk.device.ScanModule) -> access$0
    com.newland.pos.sdk.interfaces.ScanListener access$1(com.newland.pos.sdk.device.ScanModule) -> access$1
    void access$2(boolean) -> access$2
com.newland.pos.sdk.device.ScanModule$1 -> com.newland.pos.sdk.device.ScanModule$1:
    com.newland.pos.sdk.device.ScanModule this$0 -> this$0
    void <init>(com.newland.pos.sdk.device.ScanModule) -> <init>
    void run() -> run
com.newland.pos.sdk.device.ScanModule$2 -> com.newland.pos.sdk.device.ScanModule$2:
    com.newland.pos.sdk.device.ScanModule this$0 -> this$0
    void <init>(com.newland.pos.sdk.device.ScanModule) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.newland.pos.sdk.device.ScanModule$MSG -> com.newland.pos.sdk.device.ScanModule$MSG:
    int SCAN_SUCC -> SCAN_SUCC
    int SCAN_FAIL -> SCAN_FAIL
    int SCAN_TIMEOUT -> SCAN_TIMEOUT
    int SCAN_CANCEL -> SCAN_CANCEL
    com.newland.pos.sdk.device.ScanModule this$0 -> this$0
    void <init>(com.newland.pos.sdk.device.ScanModule) -> <init>
com.newland.pos.sdk.emv.EmvCoreOperator -> com.newland.pos.sdk.emv.EmvCoreOperator:
    com.newland.pos.sdk.interfaces.EmvUiListener emvUiLisner -> emvUiLisner
    java.lang.String title -> title
    java.lang.Long amount -> amount
    java.lang.String pan -> pan
    boolean allowInputAmount -> allowInputAmount
    java.lang.String pinBlock -> pinBlock
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode ecSelectMode -> ecSelectMode
    int tsc -> tsc
    boolean isEmvInputPin -> isEmvInputPin
    boolean isNoInputPin -> isNoInputPin
    int[] $SWITCH_TABLE$com$newland$pos$sdk$common$TransConst$StepResult -> $SWITCH_TABLE$com$newland$pos$sdk$common$TransConst$StepResult
    int[] $SWITCH_TABLE$com$newland$pos$sdk$emv$EmvCoreOperator$ECSelectMode -> $SWITCH_TABLE$com$newland$pos$sdk$emv$EmvCoreOperator$ECSelectMode
    void <init>(com.newland.pos.sdk.interfaces.EmvUiListener) -> <init>
    void <init>(com.newland.pos.sdk.interfaces.EmvUiListener,boolean) -> <init>
    int acctype_sel() -> acctype_sel
    int candidate_sel(com.newland.emv.jni.type.candidate[],int,int) -> candidate_sel
    int cert_confirm(byte,byte[],int) -> cert_confirm
    int emv_ec_switch() -> emv_ec_switch
    int emv_get_bcdamt(byte,byte[],byte[]) -> emv_get_bcdamt
    int emv_get_pinentry(int,byte[]) -> emv_get_pinentry
    int emv_icc_powerup(int[]) -> emv_icc_powerup
    int emv_icc_rw(int,byte[],int,byte[],int) -> emv_icc_rw
    int emv_rf_powerdown(int) -> emv_rf_powerdown
    int inc_tsc() -> inc_tsc
    void saveEmvTransSerial() -> saveEmvTransSerial
    int iss_ref(byte[],int) -> iss_ref
    int lcd_msg(java.lang.String,byte[],int,int,int) -> lcd_msg
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.Long getAmount() -> getAmount
    void setAmount(java.lang.Long) -> setAmount
    java.lang.String getPan() -> getPan
    void setPan(java.lang.String) -> setPan
    void setAllowInputAmount(boolean) -> setAllowInputAmount
    java.lang.String getPinBlock() -> getPinBlock
    void resetPinBlock() -> resetPinBlock
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode getEcSelectMode() -> getEcSelectMode
    void setEcSelectMode(com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode) -> setEcSelectMode
    boolean isEmvInputPin() -> isEmvInputPin
    void setEmvInputPin(boolean) -> setEmvInputPin
    int[] $SWITCH_TABLE$com$newland$pos$sdk$common$TransConst$StepResult() -> $SWITCH_TABLE$com$newland$pos$sdk$common$TransConst$StepResult
    int[] $SWITCH_TABLE$com$newland$pos$sdk$emv$EmvCoreOperator$ECSelectMode() -> $SWITCH_TABLE$com$newland$pos$sdk$emv$EmvCoreOperator$ECSelectMode
com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode -> com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode:
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode PATH_EMV -> PATH_EMV
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode PATH_EC -> PATH_EC
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode PATH_SELECT -> PATH_SELECT
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode[] values() -> values
    com.newland.pos.sdk.emv.EmvCoreOperator$ECSelectMode valueOf(java.lang.String) -> valueOf
com.newland.pos.sdk.emv.EmvErrorCodeHelper -> com.newland.pos.sdk.emv.EmvErrorCodeHelper:
    java.util.Map errorCodeMap -> errorCodeMap
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.String getEmvErrorCode(int) -> getEmvErrorCode
com.newland.pos.sdk.emv.EmvModule -> com.newland.pos.sdk.emv.EmvModule:
    com.newland.emv.jni.service.EmvJNIService emvcore -> emvcore
    com.newland.pos.sdk.emv.EmvCoreOperator emvOperator -> emvOperator
    boolean isRpc -> isRpc
    int SpecHandleByAPP -> SpecHandleByAPP
    void <init>() -> <init>
    java.lang.String getEmvVersion() -> getEmvVersion
    void initEmvParams() -> initEmvParams
    void initEmvEnv(com.newland.pos.sdk.interfaces.EmvUiListener,java.lang.String) -> initEmvEnv
    void initEmvEnv(com.newland.pos.sdk.interfaces.EmvUiListener,java.lang.String,boolean) -> initEmvEnv
    void buildAIDList() -> buildAIDList
    boolean clearAllAID() -> clearAllAID
    boolean clearAllCAPK() -> clearAllCAPK
    boolean setAID(java.lang.String,boolean) -> setAID
    boolean SyncAIDFile() -> SyncAIDFile
    boolean setCAPK(java.lang.String) -> setCAPK
    boolean SyncCAPKFile() -> SyncCAPKFile
    void icsOptSet(byte[],int) -> icsOptSet
    void icsOptUnSet(byte[],int) -> icsOptUnSet
    byte peekTypeByAid(byte[],byte[]) -> peekTypeByAid
    java.lang.String packField55(boolean) -> packField55
    java.lang.String packReversalField55(boolean) -> packReversalField55
    java.lang.String packScriptField55() -> packScriptField55
    java.lang.String getArqc() -> getArqc
    void setEmvData(int,byte[]) -> setEmvData
    byte[] getEmvData(int) -> getEmvData
    java.lang.String getEmvDataStr(int) -> getEmvDataStr
    int FetchData(int[],int,byte[],int) -> FetchData
    com.newland.pos.sdk.emv.EmvCoreOperator getEmvOperator() -> getEmvOperator
    int startEmv(com.newland.emv.jni.type.emv_opt) -> startEmv
    int startEmvRF(com.newland.emv.jni.type.emv_opt,java.lang.Long) -> startEmvRF
    int emvRFSuspend(int) -> emvRFSuspend
    int emvSuspend(int) -> emvSuspend
    int emvGetErrorCode() -> emvGetErrorCode
    int emvGetPbocLog(int,byte[],int) -> emvGetPbocLog
    int emvGetEcLoadLog(int,byte[],int) -> emvGetEcLoadLog
    int emvICCGetDataByTagName(int,byte[],int[]) -> emvICCGetDataByTagName
    java.util.List getAIDList() -> getAIDList
    java.util.List getCAPKList() -> getCAPKList
    void setQpbocPriority(boolean) -> setQpbocPriority
    int startEmvRpcRF(com.newland.emv.jni.type.emv_opt,java.lang.Long) -> startEmvRpcRF
    int emvRpcRFSuspend(int) -> emvRpcRFSuspend
    void setRpc(boolean) -> setRpc
    boolean emvSetTerminalId(java.lang.String) -> emvSetTerminalId
    boolean emvSetMerchantId(java.lang.String) -> emvSetMerchantId
    boolean emvSetMerchantName(java.lang.String) -> emvSetMerchantName
    boolean emvSetSupportEc(boolean) -> emvSetSupportEc
    void emvSet9CTransType(byte) -> emvSet9CTransType
    int getSpecHandleByAPP() -> getSpecHandleByAPP
    void setSpecHandleByAPP(int) -> setSpecHandleByAPP
com.newland.pos.sdk.emv.EmvProcess -> com.newland.pos.sdk.emv.EmvProcess:
    com.newland.pos.sdk.emv.EmvModule emvModule -> emvModule
    com.newland.pos.sdk.emv.EmvCoreOperator emvOper -> emvOper
    com.newland.pos.sdk.interfaces.EmvUiListener emvUiListener -> emvUiListener
    boolean isDispTvrTsi -> isDispTvrTsi
    com.newland.emv.jni.type.emv_opt gstEMVOption -> gstEMVOption
    void <init>() -> <init>
    void setDispTvrTsi(boolean) -> setDispTvrTsi
    void init(com.newland.pos.sdk.emv.EmvModule,com.newland.pos.sdk.interfaces.EmvUiListener) -> init
    int simpleProcess(com.newland.pos.sdk.bean.EmvBean) -> simpleProcess
    int qPbocProcess(com.newland.pos.sdk.bean.EmvBean) -> qPbocProcess
    int initEmvApp(com.newland.pos.sdk.bean.EmvBean) -> initEmvApp
    int processApp(com.newland.pos.sdk.bean.EmvBean) -> processApp
    int completeApp(com.newland.pos.sdk.bean.EmvBean,boolean) -> completeApp
    java.util.List emvInnerGetPbocLog(boolean) -> emvInnerGetPbocLog
    java.util.List emvInnerGetEcLoadLog(boolean) -> emvInnerGetEcLoadLog
    java.util.List emvGetPbocLog(boolean) -> emvGetPbocLog
    java.util.List emvGetEcLoadLog(boolean) -> emvGetEcLoadLog
    int emvReadICC(com.newland.pos.sdk.bean.EmvBean) -> emvReadICC
    boolean checkIsEC() -> checkIsEC
    boolean checkIsOnlyEC() -> checkIsOnlyEC
    boolean checkIsQpbocOnlinePin() -> checkIsQpbocOnlinePin
    boolean checkIsPay() -> checkIsPay
    java.lang.String getPanFrom5A() -> getPanFrom5A
    java.lang.String getTrack2From57() -> getTrack2From57
    void DispOutICC(java.lang.String,java.lang.String,java.lang.String) -> DispOutICC
    java.lang.String getEmvErrMsg() -> getEmvErrMsg
    com.newland.pos.sdk.emv.EmvModule getEmvModule() -> getEmvModule
    void showTipMsg(java.lang.String) -> showTipMsg
    java.lang.String getEmvOrgSheet() -> getEmvOrgSheet
    void displayTvrTsi() -> displayTvrTsi
    int emvQpbocReadICC(com.newland.pos.sdk.bean.EmvBean) -> emvQpbocReadICC
    boolean checkInputPin() -> checkInputPin
com.newland.pos.sdk.emv.EmvProcess$EMV_PBOC_LOG_TAG -> com.newland.pos.sdk.emv.EmvProcess$EMV_PBOC_LOG_TAG:
    int PBOCLOG_RECNUM -> PBOCLOG_RECNUM
    int PBOCLOG_FMT -> PBOCLOG_FMT
    com.newland.pos.sdk.emv.EmvProcess this$0 -> this$0
    void <init>(com.newland.pos.sdk.emv.EmvProcess) -> <init>
com.newland.pos.sdk.emv.EmvTLV -> com.newland.pos.sdk.emv.EmvTLV:
    int tag -> tag
    int len -> len
    byte[] value -> value
    void <init>() -> <init>
    int getTag() -> getTag
    void setTag(int) -> setTag
    int getLen() -> getLen
    void setLen(int) -> setLen
    byte[] getValue() -> getValue
    void setValue(byte[]) -> setValue
    java.lang.String toString() -> toString
com.newland.pos.sdk.interfaces.CardListener -> com.newland.pos.sdk.interfaces.CardListener:
    void onCardSucess() -> onCardSucess
    void onCardFail() -> onCardFail
    void onCardBack() -> onCardBack
    void onCardTimeOut() -> onCardTimeOut
    void onCardComfrim() -> onCardComfrim
    void onRefreshDate() -> onRefreshDate
    void ToastShow(java.lang.Object) -> ToastShow
com.newland.pos.sdk.interfaces.EmvUiListener -> com.newland.pos.sdk.interfaces.EmvUiListener:
    com.newland.pos.sdk.bean.MenuSelectBean showUIMenuSelect(com.newland.pos.sdk.bean.MenuSelectBean) -> showUIMenuSelect
    com.newland.pos.sdk.bean.MessageTipBean showUIMessageTip(com.newland.pos.sdk.bean.MessageTipBean) -> showUIMessageTip
    com.newland.pos.sdk.bean.AmountBean showUIInputAmount(com.newland.pos.sdk.bean.AmountBean) -> showUIInputAmount
    com.newland.pos.sdk.bean.PasswordBean showUIPinInput(boolean,com.newland.pos.sdk.bean.PasswordBean) -> showUIPinInput
    int getEmvTransSerial() -> getEmvTransSerial
    void setEmvTransSerial(int) -> setEmvTransSerial
    void showToastMsg(java.lang.String) -> showToastMsg
com.newland.pos.sdk.interfaces.ScanListener -> com.newland.pos.sdk.interfaces.ScanListener:
    void onScanSucess() -> onScanSucess
    void onScanCancel() -> onScanCancel
    void ToastShow(java.lang.Object) -> ToastShow
com.newland.pos.sdk.print.PrintUtils -> com.newland.pos.sdk.print.PrintUtils:
    org.w3c.dom.Element root -> root
    int[] $SWITCH_TABLE$com$newland$pos$sdk$print$PrintUtils$AlignModel -> $SWITCH_TABLE$com$newland$pos$sdk$print$PrintUtils$AlignModel
    void <init>() -> <init>
    void load(android.content.Context,java.lang.String) -> load
    java.lang.String getPrintData(java.lang.String,java.lang.Object) -> getPrintData
    java.lang.String getPrintDataEndLine(java.lang.String,java.lang.Object) -> getPrintDataEndLine
    java.lang.String getChineseFontSize(java.lang.String) -> getChineseFontSize
    java.lang.String getAscFontSize(java.lang.String) -> getAscFontSize
    java.util.Map getCNMap() -> getCNMap
    java.util.Map getENMap() -> getENMap
    java.lang.String getNLFont(java.lang.String,java.lang.String,java.lang.String) -> getNLFont
    java.lang.String getGrayOfDegree(int) -> getGrayOfDegree
    java.lang.String getLineSpacing(int) -> getLineSpacing
    java.lang.String getBarCodeStyle(int,int) -> getBarCodeStyle
    java.lang.String getTwoDimensionCode(int,int) -> getTwoDimensionCode
    java.lang.String getPrintText(com.newland.pos.sdk.print.PrintUtils$AlignModel,java.lang.String) -> getPrintText
    java.lang.String getGoLineOfPaper(int) -> getGoLineOfPaper
    java.lang.String getPrintSpaceLine() -> getPrintSpaceLine
    java.lang.String getPrintBarCode(com.newland.pos.sdk.print.PrintUtils$AlignModel,java.lang.String) -> getPrintBarCode
    java.lang.String getPrintTwoDimensionCode(com.newland.pos.sdk.print.PrintUtils$AlignModel,java.lang.String) -> getPrintTwoDimensionCode
    java.lang.String getPrintImage(com.newland.pos.sdk.print.PrintUtils$AlignModel,int,int,java.lang.String) -> getPrintImage
    java.lang.String pause(int) -> pause
    java.lang.String getAlignModelCommond(com.newland.pos.sdk.print.PrintUtils$AlignModel) -> getAlignModelCommond
    com.newland.pos.sdk.print.PrintUtils$AlignModel changeToAlignModel(java.lang.String) -> changeToAlignModel
    org.w3c.dom.Element access$0() -> access$0
    int[] $SWITCH_TABLE$com$newland$pos$sdk$print$PrintUtils$AlignModel() -> $SWITCH_TABLE$com$newland$pos$sdk$print$PrintUtils$AlignModel
com.newland.pos.sdk.print.PrintUtils$AlignConst -> com.newland.pos.sdk.print.PrintUtils$AlignConst:
    java.lang.String LEFT -> LEFT
    java.lang.String CENTER -> CENTER
    java.lang.String RIGHT -> RIGHT
    void <init>() -> <init>
com.newland.pos.sdk.print.PrintUtils$AlignModel -> com.newland.pos.sdk.print.PrintUtils$AlignModel:
    com.newland.pos.sdk.print.PrintUtils$AlignModel LEFT -> LEFT
    com.newland.pos.sdk.print.PrintUtils$AlignModel CENTER -> CENTER
    com.newland.pos.sdk.print.PrintUtils$AlignModel RIGHT -> RIGHT
    com.newland.pos.sdk.print.PrintUtils$AlignModel[] ENUM$VALUES -> ENUM$VALUES
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    com.newland.pos.sdk.print.PrintUtils$AlignModel[] values() -> values
    com.newland.pos.sdk.print.PrintUtils$AlignModel valueOf(java.lang.String) -> valueOf
com.newland.pos.sdk.print.PrintUtils$Mode -> com.newland.pos.sdk.print.PrintUtils$Mode:
    java.lang.String chinaese -> chinaese
    java.lang.String english -> english
    java.lang.String align -> align
    java.lang.String showFlag -> showFlag
    java.lang.String fontMode -> fontMode
    java.lang.String lineHeight -> lineHeight
    void <init>() -> <init>
    java.lang.String getChinaese() -> getChinaese
    void setChinaese(java.lang.String) -> setChinaese
    java.lang.String getEnglish() -> getEnglish
    void setEnglish(java.lang.String) -> setEnglish
    java.lang.String getAlign() -> getAlign
    void setAlign(java.lang.String) -> setAlign
    java.lang.String getLineHeight() -> getLineHeight
    void setLineHeight(java.lang.String) -> setLineHeight
    java.lang.String getFontMode() -> getFontMode
    void setFontMode(java.lang.String) -> setFontMode
    java.lang.String getShowFlag() -> getShowFlag
    void setShowFlag(java.lang.String) -> setShowFlag
    void <init>(com.newland.pos.sdk.print.PrintUtils$Mode) -> <init>
com.newland.pos.sdk.print.PrintUtils$PrinterXmlParse -> com.newland.pos.sdk.print.PrintUtils$PrinterXmlParse:
    java.lang.Object printerModel -> printerModel
    void <init>() -> <init>
    com.newland.pos.sdk.print.PrintUtils$PrinterXmlParse getInstance() -> getInstance
    void parse(java.lang.String,java.lang.Object) -> parse
    void controllerTypeParse(org.w3c.dom.Element) -> controllerTypeParse
    com.newland.pos.sdk.print.PrintUtils$Mode parseMode(org.w3c.dom.NodeList) -> parseMode
    java.lang.String parseLine(java.lang.String) -> parseLine
    java.lang.String parseImage(java.lang.String) -> parseImage
    java.lang.String replaceProperty(java.lang.String,java.util.List) -> replaceProperty
    java.util.List getPropertyFromStringFormat(java.lang.String) -> getPropertyFromStringFormat
    java.lang.String getValueFromObjectByPropertyName(java.lang.String) -> getValueFromObjectByPropertyName
    org.w3c.dom.Node getModelByModelName(org.w3c.dom.NodeList,java.lang.String) -> getModelByModelName
com.newland.pos.sdk.print.PrintUtils$PrinterXmlParse$InnerPrinterXmlParse -> com.newland.pos.sdk.print.PrintUtils$PrinterXmlParse$InnerPrinterXmlParse:
    com.newland.pos.sdk.print.PrintUtils$PrinterXmlParse INSTANCE -> INSTANCE
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    com.newland.pos.sdk.print.PrintUtils$PrinterXmlParse access$0() -> access$0
com.newland.pos.sdk.security.SecurityModule -> com.newland.pos.sdk.security.SecurityModule:
    java.lang.String Algorithm_3DES -> Algorithm_3DES
    java.lang.String Algorithm_DES -> Algorithm_DES
    int mainKeyIndex -> mainKeyIndex
    int WORKKEY_COUNT -> WORKKEY_COUNT
    int MAC -> MAC
    int PIN -> PIN
    int TDK -> TDK
    int DATA -> DATA
    int DEFAULT_MAC_WK_INDEX -> DEFAULT_MAC_WK_INDEX
    int DEFAULT_PIN_WK_INDEX -> DEFAULT_PIN_WK_INDEX
    int DEFAULT_TRACK_WK_INDEX -> DEFAULT_TRACK_WK_INDEX
    int DEFAULT_DATA_WK_INDEX -> DEFAULT_DATA_WK_INDEX
    int MAC_TYPE_ECB -> MAC_TYPE_ECB
    int MAC_TYPE_X99 -> MAC_TYPE_X99
    int MAC_TYPE_X919 -> MAC_TYPE_X919
    int MAC_TYPE_9606 -> MAC_TYPE_9606
    void <clinit>() -> <clinit>
    byte[] encrypt3DESNoPadding(byte[],byte[]) -> encrypt3DESNoPadding
    byte[] encryptDESNoPadding(byte[],byte[]) -> encryptDESNoPadding
    byte[] decryptDESNoPadding(byte[],byte[]) -> decryptDESNoPadding
    byte[] decrypt3DESNoPadding(byte[],byte[]) -> decrypt3DESNoPadding
    byte[] build3DesKey(byte[]) -> build3DesKey
    void <init>() -> <init>
    com.newland.pos.sdk.security.SecurityModule getInstance() -> getInstance
    void setCurrentMainKeyIndex(int) -> setCurrentMainKeyIndex
    int getCurrentMainKeyIndex() -> getCurrentMainKeyIndex
    int getWorkKeyIndex(int) -> getWorkKeyIndex
    int getMACIndex() -> getMACIndex
    int getPINIndex() -> getPINIndex
    int getTDKIndex() -> getTDKIndex
    int getDataIndex() -> getDataIndex
    int loadMainKey(int,java.lang.String) -> loadMainKey
    void loadWorkKey(int,java.lang.String,java.lang.String) -> loadWorkKey
    java.lang.String calcMac(int,java.lang.String) -> calcMac
    void clearKey() -> clearKey
    java.lang.String des(int,java.lang.String) -> des
    java.lang.String undes(int,java.lang.String) -> undes
    java.lang.String des3(int,java.lang.String) -> des3
    java.lang.String undes3(int,java.lang.String) -> undes3
    int updatemainkey(int,int,java.lang.String) -> updatemainkey
    java.lang.String softdes(java.lang.String,java.lang.String) -> softdes
    java.lang.String softundes(java.lang.String,java.lang.String) -> softundes
    java.lang.String softdes3(java.lang.String,java.lang.String) -> softdes3
    java.lang.String softundes3(java.lang.String,java.lang.String) -> softundes3
    void <init>(com.newland.pos.sdk.security.SecurityModule) -> <init>
com.newland.pos.sdk.security.SecurityModule$InnerSecurityModule -> com.newland.pos.sdk.security.SecurityModule$InnerSecurityModule:
    com.newland.pos.sdk.security.SecurityModule INSTANCE -> INSTANCE
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    com.newland.pos.sdk.security.SecurityModule access$0() -> access$0
com.newland.pos.sdk.util.BitmapUtils -> com.newland.pos.sdk.util.BitmapUtils:
    void <init>() -> <init>
    void saveBmp1(android.graphics.Bitmap,java.lang.String) -> saveBmp1
    byte[] readFileByBytes(java.io.File) -> readFileByBytes
    byte[] readBmp1(java.io.File) -> readBmp1
    void writeWord(java.io.FileOutputStream,int) -> writeWord
    void writeDword(java.io.FileOutputStream,long) -> writeDword
    void writeLong(java.io.FileOutputStream,long) -> writeLong
com.newland.pos.sdk.util.BytesUtils -> com.newland.pos.sdk.util.BytesUtils:
    java.lang.String GBK -> GBK
    java.lang.String UTF8 -> UTF8
    char[] ascii -> ascii
    char[] HEX_VOCABLE -> HEX_VOCABLE
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    byte[] getBytes(short) -> getBytes
    byte[] getBytes(char) -> getBytes
    byte[] getBytes(boolean) -> getBytes
    byte[] getBytes(int) -> getBytes
    byte[] getBytes(long) -> getBytes
    byte[] getBytes(float) -> getBytes
    byte[] getBytes(double) -> getBytes
    byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    byte[] getBytes(java.lang.String) -> getBytes
    boolean getBoolean(byte[]) -> getBoolean
    boolean getBoolean(byte[],int) -> getBoolean
    short getShort(byte[]) -> getShort
    short getShort(byte[],int) -> getShort
    char getChar(byte[]) -> getChar
    char getChar(byte[],int) -> getChar
    int getInt(byte[]) -> getInt
    int getInt(byte[],int) -> getInt
    long getLong(byte[]) -> getLong
    long getLong(byte[],int) -> getLong
    float getFloat(byte[]) -> getFloat
    float getFloat(byte[],int) -> getFloat
    double getDouble(byte[]) -> getDouble
    double getDouble(byte[],int) -> getDouble
    java.lang.String getString(byte[],java.lang.String) -> getString
    java.lang.String getString(byte[]) -> getString
    byte[] str2bcd(java.lang.String,boolean) -> str2bcd
    byte[] hexStringToBytes(java.lang.String) -> hexStringToBytes
    byte[] hexStringToBytes(java.lang.String,java.lang.String,boolean) -> hexStringToBytes
    byte[] hexToBytes(java.lang.String) -> hexToBytes
    int indexOf(java.lang.String,char) -> indexOf
    java.lang.String bcdToString(byte[]) -> bcdToString
    int bcdToInt(byte) -> bcdToInt
    java.lang.String bytesToHex(byte[]) -> bytesToHex
    java.lang.String bytesToHex(byte[],int) -> bytesToHex
    java.lang.String bytesToHex(byte[],int,int) -> bytesToHex
    java.lang.String byteToHex(byte) -> byteToHex
    java.lang.String negate(byte[]) -> negate
    boolean compareBytes(byte[],byte[]) -> compareBytes
    boolean compareBytes(byte[],byte[],int) -> compareBytes
    java.lang.String bytesToBinaryString(byte[]) -> bytesToBinaryString
    java.lang.String byteToBinaryString(byte) -> byteToBinaryString
    byte[] xor(byte[],byte[]) -> xor
    byte[] xor(byte[],byte[],int) -> xor
    byte[] shortToBytes(int) -> shortToBytes
    int bytesToShort(byte[]) -> bytesToShort
    byte[] intToBytes(int) -> intToBytes
    byte[] intToBytes(int,int) -> intToBytes
    int bytesToInt(byte[]) -> bytesToInt
    byte[] longToBytes(long) -> longToBytes
    long bytesToLong(byte[]) -> bytesToLong
    byte toByte(char) -> toByte
    int bytesToIntWhereByteLengthEquals2(byte[]) -> bytesToIntWhereByteLengthEquals2
    int byteToInt(byte[]) -> byteToInt
    byte CheckXORSum(byte[]) -> CheckXORSum
    int bytesToInt(byte[],int,int) -> bytesToInt
    java.lang.String TrimCharLeft(java.lang.String,char) -> TrimCharLeft
    java.lang.String TrimCharRight(java.lang.String,char) -> TrimCharRight
com.newland.pos.sdk.util.FormatUtils -> com.newland.pos.sdk.util.FormatUtils:
    void <init>() -> <init>
    java.lang.String formatAmount(java.lang.String) -> formatAmount
    java.lang.String formatAmount(java.lang.String,int) -> formatAmount
    java.lang.String formatCardNoWithSpace(java.lang.String) -> formatCardNoWithSpace
    java.lang.String formatCardNoWithStar(java.lang.String) -> formatCardNoWithStar
    java.lang.String formatPhoneNumberWithStar(java.lang.String) -> formatPhoneNumberWithStar
    java.lang.String timeFormat(java.lang.String,java.lang.String) -> timeFormat
    java.lang.String timeFormat(java.lang.String) -> timeFormat
    java.lang.String getDate(java.lang.String) -> getDate
    java.lang.String formatMount(java.lang.String) -> formatMount
    java.lang.String formatPhoneNo(java.lang.String) -> formatPhoneNo
    java.lang.String getCurrencyIdentify(java.lang.String) -> getCurrencyIdentify
    java.lang.String getCurrencyUnit(java.lang.String) -> getCurrencyUnit
    java.lang.String getCurrencySymbol(java.lang.String) -> getCurrencySymbol
com.newland.pos.sdk.util.ISO8583 -> com.newland.pos.sdk.util.ISO8583:
    com.newland.pos.sdk.util.ISOFormat[] fieldFormat -> fieldFormat
    com.newland.pos.sdk.util.ISOField[] fieldElement -> fieldElement
    byte[] bitmap -> bitmap
    java.lang.String FIELD_SETTING_TAG -> FIELD_SETTING_TAG
    java.lang.String FILED_FORMAT -> FILED_FORMAT
    boolean bExfield -> bExfield
    android.content.Context context -> context
    void <init>(android.content.Context) -> <init>
    void initPack() -> initPack
    void setISOFormat(com.newland.pos.sdk.util.XmlNode,com.newland.pos.sdk.util.ISOFormat) -> setISOFormat
    void loadXmlFile(java.lang.String) -> loadXmlFile
    byte[] getBitmap() -> getBitmap
    void setField(int,java.lang.String) -> setField
    java.lang.String getField(int) -> getField
    boolean setBitmapMode(int) -> setBitmapMode
    java.lang.String packFixLenField(com.newland.pos.sdk.util.ISOFormat,java.lang.String) -> packFixLenField
    java.lang.String packVarLenField(com.newland.pos.sdk.util.ISOFormat,java.lang.String,int,boolean) -> packVarLenField
    java.lang.String pack() -> pack
    byte[] packBytes() -> packBytes
    void unpack(java.lang.String) -> unpack
    void unpack(byte[]) -> unpack
com.newland.pos.sdk.util.ISO8583Exception -> com.newland.pos.sdk.util.ISO8583Exception:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.newland.pos.sdk.util.ISOField -> com.newland.pos.sdk.util.ISOField:
    java.lang.String sData -> sData
    boolean bIsExist -> bIsExist
    void <init>() -> <init>
com.newland.pos.sdk.util.ISOFormat -> com.newland.pos.sdk.util.ISOFormat:
    int maxLen -> maxLen
    int type -> type
    int lengthType -> lengthType
    int option -> option
    void <init>() -> <init>
    java.lang.String toString() -> toString
com.newland.pos.sdk.util.JBigConvert -> com.newland.pos.sdk.util.JBigConvert:
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void convert(java.lang.String,java.lang.String) -> convert
    void convertToJBIG(java.lang.String,java.lang.String) -> convertToJBIG
com.newland.pos.sdk.util.JBigConvertException -> com.newland.pos.sdk.util.JBigConvertException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
com.newland.pos.sdk.util.LoggerUtils -> com.newland.pos.sdk.util.LoggerUtils:
    java.lang.String customTagPrefix -> customTagPrefix
    boolean allowD -> allowD
    boolean allowE -> allowE
    boolean allowI -> allowI
    boolean allowV -> allowV
    boolean allowW -> allowW
    boolean allowWtf -> allowWtf
    com.newland.pos.sdk.util.LoggerUtils$CustomLogger customLogger -> customLogger
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void configPrint(boolean) -> configPrint
    java.lang.StackTraceElement getCallerStackTraceElement() -> getCallerStackTraceElement
    java.lang.String generateTag(java.lang.StackTraceElement) -> generateTag
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.Throwable) -> w
    void wtf(java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.Throwable) -> wtf
com.newland.pos.sdk.util.LoggerUtils$CustomLogger -> com.newland.pos.sdk.util.LoggerUtils$CustomLogger:
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void wtf(java.lang.String,java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
com.newland.pos.sdk.util.PublicLibJNIService -> com.newland.pos.sdk.util.PublicLibJNIService:
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    int jnireadcard(int,int,byte,long,int,byte[],byte[],byte[],int[]) -> jnireadcard
    int jnistopreadcard() -> jnistopreadcard
    int jnicardpowerup(byte[],int[]) -> jnicardpowerup
    int jnicardpowerdown() -> jnicardpowerdown
    int jnicardrw(int,int,byte[],int[],byte[]) -> jnicardrw
    int jnigetqpbocresult() -> jnigetqpbocresult
    int jnigetcardstatus() -> jnigetcardstatus
    int jniSelectCardType(int) -> jniSelectCardType
    int jniRFStoreKey(byte,byte[],byte[]) -> jniRFStoreKey
    int jniRFAuthByKey(byte,byte,byte[]) -> jniRFAuthByKey
    int jniRFWrite(byte,byte[]) -> jniRFWrite
    int jniRFRead(byte,byte[]) -> jniRFRead
    int jniRFInc(byte,byte[]) -> jniRFInc
    int jniRFDec(byte,byte[]) -> jniRFDec
    int jniRFTransfer(byte) -> jniRFTransfer
    int jniReStore(byte) -> jniReStore
    int jniRfidTypeARats(byte[]) -> jniRfidTypeARats
    int jniprintinit() -> jniprintinit
    int jnigetprintstatus() -> jnigetprintstatus
    int jniprnsetfont(int,int) -> jniprnsetfont
    int jniprnsetmode(int) -> jniprnsetmode
    int jniprnstring(byte[]) -> jniprnstring
    int jniprnsetformat(int,int,int) -> jniprnsetformat
    int jniprnsetunderline(int) -> jniprnsetunderline
    int jniprintimage(int,int,int,byte[]) -> jniprintimage
    int jniprintBMP(byte[]) -> jniprintBMP
    int jniprintBMPoffset(int,byte[]) -> jniprintBMPoffset
    int jniprintscript(byte[],int) -> jniprintscript
    int jniprintPNG(byte[]) -> jniprintPNG
    int jniprintPNGoffset(int,byte[]) -> jniprintPNGoffset
    int jniinitkey(int) -> jniinitkey
    int jnisetcurrentmainkeyindex(int) -> jnisetcurrentmainkeyindex
    int jniloadmainkey(int,byte[],int) -> jniloadmainkey
    int jniupdatemainkey(int,int,byte[],int) -> jniupdatemainkey
    int jniloadworkkey(int,byte[],int,byte[]) -> jniloadworkkey
    int jnicalcmac(int,byte[],int,byte[]) -> jnicalcmac
    int jnides(int,byte[],byte[]) -> jnides
    int jniundes(int,byte[],byte[]) -> jniundes
    int jnides3(int,byte[],byte[]) -> jnides3
    int jniundes3(int,byte[],byte[]) -> jniundes3
    int jnivpptpinit(byte[],byte[],byte[]) -> jnivpptpinit
    int jnigetpin(int,byte[],int,int) -> jnigetpin
    int jnigetpinresult(byte[],int[]) -> jnigetpinresult
    java.lang.String jnigetPUBJNIVER() -> jnigetPUBJNIVER
    int jnigetBIOSVER(byte[]) -> jnigetBIOSVER
    int jnigetSN(byte[]) -> jnigetSN
    int jnigetPN(byte[]) -> jnigetPN
    int jnigetBOARDVER(byte[]) -> jnigetBOARDVER
    int jnisetposdatetime(byte[],byte[],byte[]) -> jnisetposdatetime
    int jnisysbeep(int) -> jnisysbeep
    int jnisystimebeep(int,int) -> jnisystimebeep
    int jniledturnon(int,int,int,int) -> jniledturnon
    int jniledturnoff(int,int,int,int) -> jniledturnoff
    int jniledflick(int,int,int,int) -> jniledflick
    int jnigetKbCode(int) -> jnigetKbCode
com.newland.pos.sdk.util.StringUtils -> com.newland.pos.sdk.util.StringUtils:
    void <init>() -> <init>
    boolean isMacthIp(java.lang.String) -> isMacthIp
    boolean isEmpty(java.lang.String) -> isEmpty
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    boolean isDigital(java.lang.String) -> isDigital
    int length(java.lang.String) -> length
    java.util.List stringsToList(java.lang.String[]) -> stringsToList
    java.lang.String fill(java.lang.String,java.lang.String,int,boolean) -> fill
    java.lang.String paddingString(java.lang.String,int,java.lang.String,int) -> paddingString
    java.lang.String intToBcd(int,int) -> intToBcd
    java.lang.String hexToStr(java.lang.String) -> hexToStr
    java.lang.String strToHex(java.lang.String) -> strToHex
    java.lang.String paddingZeroToHexStr(java.lang.String,int) -> paddingZeroToHexStr
    boolean checkHexStr(java.lang.String) -> checkHexStr
    java.lang.String binaryToHex(java.lang.String) -> binaryToHex
    java.lang.String hexToBinary(java.lang.String) -> hexToBinary
    java.lang.String getBinaryString(byte[]) -> getBinaryString
com.newland.pos.sdk.util.TLVUtils -> com.newland.pos.sdk.util.TLVUtils:
    void <init>() -> <init>
    java.lang.String[] getTLVList(java.lang.String) -> getTLVList
    com.newland.pos.sdk.emv.EmvTLV[] getTLVList(byte[]) -> getTLVList
    byte[] getValueFromTLVlist(int,com.newland.pos.sdk.emv.EmvTLV[]) -> getValueFromTLVlist
    java.lang.String[] getTLList(java.lang.String) -> getTLList
    com.newland.pos.sdk.emv.EmvTLV[] getTLList(byte[]) -> getTLList
    int getTagLen(byte[],int) -> getTagLen
    int getTagLen(java.lang.String) -> getTagLen
    int getTagLen(int) -> getTagLen
    android.util.SparseArray unpack_q(byte[]) -> unpack_q
    com.newland.pos.sdk.util.TLVUtils$PackTLV newPackTLV() -> newPackTLV
com.newland.pos.sdk.util.TLVUtils$PackTLV -> com.newland.pos.sdk.util.TLVUtils$PackTLV:
    java.io.ByteArrayOutputStream bos -> bos
    void <init>() -> <init>
    void append(int,byte[]) -> append
    void append_q(int,byte[]) -> append_q
    void append(int,java.lang.String) -> append
    void append_q(int,java.lang.String) -> append_q
    void append_q(java.lang.String,java.lang.String) -> append_q
    byte[] pack() -> pack
    void <init>(com.newland.pos.sdk.util.TLVUtils$PackTLV) -> <init>
com.newland.pos.sdk.util.TimeUtils -> com.newland.pos.sdk.util.TimeUtils:
    int[] dayArr -> dayArr
    java.lang.String[] constellationArr -> constellationArr
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.String getMediaTime(int) -> getMediaTime
    java.lang.String getMediaTime(long) -> getMediaTime
    java.lang.String getAbsoluteTime() -> getAbsoluteTime
    java.lang.String getRelativeTime(long) -> getRelativeTime
    java.lang.String getSurplusTime(long) -> getSurplusTime
    java.lang.String getFormatTime(java.lang.String) -> getFormatTime
    java.lang.String getFormatTime(long) -> getFormatTime
    java.lang.String getFormatTime(long,java.lang.String) -> getFormatTime
    java.lang.String getTimeNow() -> getTimeNow
    java.lang.String getTimeNow(java.lang.String) -> getTimeNow
    int getAge(long) -> getAge
    java.lang.String getConstellation(int,int) -> getConstellation
    int compareTime(java.lang.String,java.lang.String) -> compareTime
    int compareCalendarTime(long,long) -> compareCalendarTime
    int compareHourMinute(java.util.Calendar,java.util.Calendar) -> compareHourMinute
    int compareHourMinute(int,int,int,int) -> compareHourMinute
    java.lang.String getCurrentDate() -> getCurrentDate
    java.lang.String getCurrentTime() -> getCurrentTime
    java.lang.String getCurrentTime(java.lang.String) -> getCurrentTime
    int getCurrentYear() -> getCurrentYear
    boolean updateSystemTime(java.lang.String,java.lang.String,int) -> updateSystemTime
com.newland.pos.sdk.util.XmlNode -> com.newland.pos.sdk.util.XmlNode:
    java.lang.String name -> name
    java.util.Map attrs -> attrs
    java.lang.String text -> text
    java.util.List children -> children
    int level -> level
    com.newland.pos.sdk.util.XmlNode parent -> parent
    void <init>() -> <init>
    com.newland.pos.sdk.util.XmlNode[] getChildren(java.lang.String) -> getChildren
    com.newland.pos.sdk.util.XmlNode getChild(java.lang.String) -> getChild
    void decodeXml(java.io.InputStream) -> decodeXml
    void decodeXml(java.lang.String) -> decodeXml
    java.lang.String toString() -> toString
com.newland.usb.TransPort -> com.newland.a.a:
    boolean Open() -> a
    int Write(byte[],int,int,int) -> a
    int Read(byte[],int,int) -> a
    void Clear() -> b
    void Close() -> c
com.newland.usb.USBPortImpl -> com.newland.a.b:
    android.newland.AnalogSerialManager analogSerial -> a
    void <init>(android.content.Context) -> <init>
    boolean Open() -> a
    int Write(byte[],int,int,int) -> a
    int Read(byte[],int,int) -> a
    void Clear() -> b
    void Close() -> c
org.apache.commons.lang.ArrayUtils -> org.apache.commons.lang.ArrayUtils:
    java.lang.Object[] EMPTY_OBJECT_ARRAY -> EMPTY_OBJECT_ARRAY
    java.lang.Class[] EMPTY_CLASS_ARRAY -> EMPTY_CLASS_ARRAY
    java.lang.String[] EMPTY_STRING_ARRAY -> EMPTY_STRING_ARRAY
    long[] EMPTY_LONG_ARRAY -> EMPTY_LONG_ARRAY
    java.lang.Long[] EMPTY_LONG_OBJECT_ARRAY -> EMPTY_LONG_OBJECT_ARRAY
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    java.lang.Integer[] EMPTY_INTEGER_OBJECT_ARRAY -> EMPTY_INTEGER_OBJECT_ARRAY
    short[] EMPTY_SHORT_ARRAY -> EMPTY_SHORT_ARRAY
    java.lang.Short[] EMPTY_SHORT_OBJECT_ARRAY -> EMPTY_SHORT_OBJECT_ARRAY
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    java.lang.Byte[] EMPTY_BYTE_OBJECT_ARRAY -> EMPTY_BYTE_OBJECT_ARRAY
    double[] EMPTY_DOUBLE_ARRAY -> EMPTY_DOUBLE_ARRAY
    java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY -> EMPTY_DOUBLE_OBJECT_ARRAY
    float[] EMPTY_FLOAT_ARRAY -> EMPTY_FLOAT_ARRAY
    java.lang.Float[] EMPTY_FLOAT_OBJECT_ARRAY -> EMPTY_FLOAT_OBJECT_ARRAY
    boolean[] EMPTY_BOOLEAN_ARRAY -> EMPTY_BOOLEAN_ARRAY
    java.lang.Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY -> EMPTY_BOOLEAN_OBJECT_ARRAY
    char[] EMPTY_CHAR_ARRAY -> EMPTY_CHAR_ARRAY
    java.lang.Character[] EMPTY_CHARACTER_OBJECT_ARRAY -> EMPTY_CHARACTER_OBJECT_ARRAY
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    java.lang.Class class$java$lang$Object -> class$java$lang$Object
    void <init>() -> <init>
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    int hashCode(java.lang.Object) -> hashCode
    boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
    java.util.Map toMap(java.lang.Object[]) -> toMap
    java.lang.Object[] clone(java.lang.Object[]) -> clone
    long[] clone(long[]) -> clone
    int[] clone(int[]) -> clone
    short[] clone(short[]) -> clone
    char[] clone(char[]) -> clone
    byte[] clone(byte[]) -> clone
    double[] clone(double[]) -> clone
    float[] clone(float[]) -> clone
    boolean[] clone(boolean[]) -> clone
    java.lang.Object[] subarray(java.lang.Object[],int,int) -> subarray
    long[] subarray(long[],int,int) -> subarray
    int[] subarray(int[],int,int) -> subarray
    short[] subarray(short[],int,int) -> subarray
    char[] subarray(char[],int,int) -> subarray
    byte[] subarray(byte[],int,int) -> subarray
    double[] subarray(double[],int,int) -> subarray
    float[] subarray(float[],int,int) -> subarray
    boolean[] subarray(boolean[],int,int) -> subarray
    boolean isSameLength(java.lang.Object[],java.lang.Object[]) -> isSameLength
    boolean isSameLength(long[],long[]) -> isSameLength
    boolean isSameLength(int[],int[]) -> isSameLength
    boolean isSameLength(short[],short[]) -> isSameLength
    boolean isSameLength(char[],char[]) -> isSameLength
    boolean isSameLength(byte[],byte[]) -> isSameLength
    boolean isSameLength(double[],double[]) -> isSameLength
    boolean isSameLength(float[],float[]) -> isSameLength
    boolean isSameLength(boolean[],boolean[]) -> isSameLength
    int getLength(java.lang.Object) -> getLength
    boolean isSameType(java.lang.Object,java.lang.Object) -> isSameType
    void reverse(java.lang.Object[]) -> reverse
    void reverse(long[]) -> reverse
    void reverse(int[]) -> reverse
    void reverse(short[]) -> reverse
    void reverse(char[]) -> reverse
    void reverse(byte[]) -> reverse
    void reverse(double[]) -> reverse
    void reverse(float[]) -> reverse
    void reverse(boolean[]) -> reverse
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    int indexOf(java.lang.Object[],java.lang.Object,int) -> indexOf
    int lastIndexOf(java.lang.Object[],java.lang.Object) -> lastIndexOf
    int lastIndexOf(java.lang.Object[],java.lang.Object,int) -> lastIndexOf
    boolean contains(java.lang.Object[],java.lang.Object) -> contains
    int indexOf(long[],long) -> indexOf
    int indexOf(long[],long,int) -> indexOf
    int lastIndexOf(long[],long) -> lastIndexOf
    int lastIndexOf(long[],long,int) -> lastIndexOf
    boolean contains(long[],long) -> contains
    int indexOf(int[],int) -> indexOf
    int indexOf(int[],int,int) -> indexOf
    int lastIndexOf(int[],int) -> lastIndexOf
    int lastIndexOf(int[],int,int) -> lastIndexOf
    boolean contains(int[],int) -> contains
    int indexOf(short[],short) -> indexOf
    int indexOf(short[],short,int) -> indexOf
    int lastIndexOf(short[],short) -> lastIndexOf
    int lastIndexOf(short[],short,int) -> lastIndexOf
    boolean contains(short[],short) -> contains
    int indexOf(char[],char) -> indexOf
    int indexOf(char[],char,int) -> indexOf
    int lastIndexOf(char[],char) -> lastIndexOf
    int lastIndexOf(char[],char,int) -> lastIndexOf
    boolean contains(char[],char) -> contains
    int indexOf(byte[],byte) -> indexOf
    int indexOf(byte[],byte,int) -> indexOf
    int lastIndexOf(byte[],byte) -> lastIndexOf
    int lastIndexOf(byte[],byte,int) -> lastIndexOf
    boolean contains(byte[],byte) -> contains
    int indexOf(double[],double) -> indexOf
    int indexOf(double[],double,double) -> indexOf
    int indexOf(double[],double,int) -> indexOf
    int indexOf(double[],double,int,double) -> indexOf
    int lastIndexOf(double[],double) -> lastIndexOf
    int lastIndexOf(double[],double,double) -> lastIndexOf
    int lastIndexOf(double[],double,int) -> lastIndexOf
    int lastIndexOf(double[],double,int,double) -> lastIndexOf
    boolean contains(double[],double) -> contains
    boolean contains(double[],double,double) -> contains
    int indexOf(float[],float) -> indexOf
    int indexOf(float[],float,int) -> indexOf
    int lastIndexOf(float[],float) -> lastIndexOf
    int lastIndexOf(float[],float,int) -> lastIndexOf
    boolean contains(float[],float) -> contains
    int indexOf(boolean[],boolean) -> indexOf
    int indexOf(boolean[],boolean,int) -> indexOf
    int lastIndexOf(boolean[],boolean) -> lastIndexOf
    int lastIndexOf(boolean[],boolean,int) -> lastIndexOf
    boolean contains(boolean[],boolean) -> contains
    char[] toPrimitive(java.lang.Character[]) -> toPrimitive
    char[] toPrimitive(java.lang.Character[],char) -> toPrimitive
    java.lang.Character[] toObject(char[]) -> toObject
    long[] toPrimitive(java.lang.Long[]) -> toPrimitive
    long[] toPrimitive(java.lang.Long[],long) -> toPrimitive
    java.lang.Long[] toObject(long[]) -> toObject
    int[] toPrimitive(java.lang.Integer[]) -> toPrimitive
    int[] toPrimitive(java.lang.Integer[],int) -> toPrimitive
    java.lang.Integer[] toObject(int[]) -> toObject
    short[] toPrimitive(java.lang.Short[]) -> toPrimitive
    short[] toPrimitive(java.lang.Short[],short) -> toPrimitive
    java.lang.Short[] toObject(short[]) -> toObject
    byte[] toPrimitive(java.lang.Byte[]) -> toPrimitive
    byte[] toPrimitive(java.lang.Byte[],byte) -> toPrimitive
    java.lang.Byte[] toObject(byte[]) -> toObject
    double[] toPrimitive(java.lang.Double[]) -> toPrimitive
    double[] toPrimitive(java.lang.Double[],double) -> toPrimitive
    java.lang.Double[] toObject(double[]) -> toObject
    float[] toPrimitive(java.lang.Float[]) -> toPrimitive
    float[] toPrimitive(java.lang.Float[],float) -> toPrimitive
    java.lang.Float[] toObject(float[]) -> toObject
    boolean[] toPrimitive(java.lang.Boolean[]) -> toPrimitive
    boolean[] toPrimitive(java.lang.Boolean[],boolean) -> toPrimitive
    java.lang.Boolean[] toObject(boolean[]) -> toObject
    boolean isEmpty(java.lang.Object[]) -> isEmpty
    boolean isEmpty(long[]) -> isEmpty
    boolean isEmpty(int[]) -> isEmpty
    boolean isEmpty(short[]) -> isEmpty
    boolean isEmpty(char[]) -> isEmpty
    boolean isEmpty(byte[]) -> isEmpty
    boolean isEmpty(double[]) -> isEmpty
    boolean isEmpty(float[]) -> isEmpty
    boolean isEmpty(boolean[]) -> isEmpty
    java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[]) -> addAll
    boolean[] addAll(boolean[],boolean[]) -> addAll
    char[] addAll(char[],char[]) -> addAll
    byte[] addAll(byte[],byte[]) -> addAll
    short[] addAll(short[],short[]) -> addAll
    int[] addAll(int[],int[]) -> addAll
    long[] addAll(long[],long[]) -> addAll
    float[] addAll(float[],float[]) -> addAll
    double[] addAll(double[],double[]) -> addAll
    java.lang.Object[] add(java.lang.Object[],java.lang.Object) -> add
    boolean[] add(boolean[],boolean) -> add
    byte[] add(byte[],byte) -> add
    char[] add(char[],char) -> add
    double[] add(double[],double) -> add
    float[] add(float[],float) -> add
    int[] add(int[],int) -> add
    long[] add(long[],long) -> add
    short[] add(short[],short) -> add
    java.lang.Object copyArrayGrow1(java.lang.Object,java.lang.Class) -> copyArrayGrow1
    java.lang.Object[] add(java.lang.Object[],int,java.lang.Object) -> add
    boolean[] add(boolean[],int,boolean) -> add
    char[] add(char[],int,char) -> add
    byte[] add(byte[],int,byte) -> add
    short[] add(short[],int,short) -> add
    int[] add(int[],int,int) -> add
    long[] add(long[],int,long) -> add
    float[] add(float[],int,float) -> add
    double[] add(double[],int,double) -> add
    java.lang.Object add(java.lang.Object,int,java.lang.Object,java.lang.Class) -> add
    java.lang.Object[] remove(java.lang.Object[],int) -> remove
    java.lang.Object[] removeElement(java.lang.Object[],java.lang.Object) -> removeElement
    boolean[] remove(boolean[],int) -> remove
    boolean[] removeElement(boolean[],boolean) -> removeElement
    byte[] remove(byte[],int) -> remove
    byte[] removeElement(byte[],byte) -> removeElement
    char[] remove(char[],int) -> remove
    char[] removeElement(char[],char) -> removeElement
    double[] remove(double[],int) -> remove
    double[] removeElement(double[],double) -> removeElement
    float[] remove(float[],int) -> remove
    float[] removeElement(float[],float) -> removeElement
    int[] remove(int[],int) -> remove
    int[] removeElement(int[],int) -> removeElement
    long[] remove(long[],int) -> remove
    long[] removeElement(long[],long) -> removeElement
    short[] remove(short[],int) -> remove
    short[] removeElement(short[],short) -> removeElement
    java.lang.Object remove(java.lang.Object,int) -> remove
    java.lang.Class class$(java.lang.String) -> class$
    void <clinit>() -> <clinit>
org.apache.commons.lang.BitField -> org.apache.commons.lang.BitField:
    int _mask -> _mask
    int _shift_count -> _shift_count
    void <init>(int) -> <init>
    int getValue(int) -> getValue
    short getShortValue(short) -> getShortValue
    int getRawValue(int) -> getRawValue
    short getShortRawValue(short) -> getShortRawValue
    boolean isSet(int) -> isSet
    boolean isAllSet(int) -> isAllSet
    int setValue(int,int) -> setValue
    short setShortValue(short,short) -> setShortValue
    int clear(int) -> clear
    short clearShort(short) -> clearShort
    byte clearByte(byte) -> clearByte
    int set(int) -> set
    short setShort(short) -> setShort
    byte setByte(byte) -> setByte
    int setBoolean(int,boolean) -> setBoolean
    short setShortBoolean(short,boolean) -> setShortBoolean
    byte setByteBoolean(byte,boolean) -> setByteBoolean
org.apache.commons.lang.BooleanUtils -> org.apache.commons.lang.BooleanUtils:
    void <init>() -> <init>
    java.lang.Boolean negate(java.lang.Boolean) -> negate
    boolean isTrue(java.lang.Boolean) -> isTrue
    boolean isNotTrue(java.lang.Boolean) -> isNotTrue
    boolean isFalse(java.lang.Boolean) -> isFalse
    boolean isNotFalse(java.lang.Boolean) -> isNotFalse
    java.lang.Boolean toBooleanObject(boolean) -> toBooleanObject
    boolean toBoolean(java.lang.Boolean) -> toBoolean
    boolean toBooleanDefaultIfNull(java.lang.Boolean,boolean) -> toBooleanDefaultIfNull
    boolean toBoolean(int) -> toBoolean
    java.lang.Boolean toBooleanObject(int) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.Integer) -> toBooleanObject
    boolean toBoolean(int,int,int) -> toBoolean
    boolean toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toBoolean
    java.lang.Boolean toBooleanObject(int,int,int,int) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toBooleanObject
    int toInteger(boolean) -> toInteger
    java.lang.Integer toIntegerObject(boolean) -> toIntegerObject
    java.lang.Integer toIntegerObject(java.lang.Boolean) -> toIntegerObject
    int toInteger(boolean,int,int) -> toInteger
    int toInteger(java.lang.Boolean,int,int,int) -> toInteger
    java.lang.Integer toIntegerObject(boolean,java.lang.Integer,java.lang.Integer) -> toIntegerObject
    java.lang.Integer toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toIntegerObject
    java.lang.Boolean toBooleanObject(java.lang.String) -> toBooleanObject
    java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> toBooleanObject
    boolean toBoolean(java.lang.String) -> toBoolean
    boolean toBoolean(java.lang.String,java.lang.String,java.lang.String) -> toBoolean
    java.lang.String toStringTrueFalse(java.lang.Boolean) -> toStringTrueFalse
    java.lang.String toStringOnOff(java.lang.Boolean) -> toStringOnOff
    java.lang.String toStringYesNo(java.lang.Boolean) -> toStringYesNo
    java.lang.String toString(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String) -> toString
    java.lang.String toStringTrueFalse(boolean) -> toStringTrueFalse
    java.lang.String toStringOnOff(boolean) -> toStringOnOff
    java.lang.String toStringYesNo(boolean) -> toStringYesNo
    java.lang.String toString(boolean,java.lang.String,java.lang.String) -> toString
    boolean xor(boolean[]) -> xor
    java.lang.Boolean xor(java.lang.Boolean[]) -> xor
org.apache.commons.lang.CharEncoding -> org.apache.commons.lang.CharEncoding:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
    void <init>() -> <init>
    boolean isSupported(java.lang.String) -> isSupported
org.apache.commons.lang.CharRange -> org.apache.commons.lang.CharRange:
    long serialVersionUID -> serialVersionUID
    char start -> start
    char end -> end
    boolean negated -> negated
    java.lang.String iToString -> iToString
    void <init>(char) -> <init>
    void <init>(char,boolean) -> <init>
    void <init>(char,char) -> <init>
    void <init>(char,char,boolean) -> <init>
    char getStart() -> getStart
    char getEnd() -> getEnd
    boolean isNegated() -> isNegated
    boolean contains(char) -> contains
    boolean contains(org.apache.commons.lang.CharRange) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.CharSet -> org.apache.commons.lang.CharSet:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.CharSet EMPTY -> EMPTY
    org.apache.commons.lang.CharSet ASCII_ALPHA -> ASCII_ALPHA
    org.apache.commons.lang.CharSet ASCII_ALPHA_LOWER -> ASCII_ALPHA_LOWER
    org.apache.commons.lang.CharSet ASCII_ALPHA_UPPER -> ASCII_ALPHA_UPPER
    org.apache.commons.lang.CharSet ASCII_NUMERIC -> ASCII_NUMERIC
    java.util.Map COMMON -> COMMON
    java.util.Set set -> set
    org.apache.commons.lang.CharSet getInstance(java.lang.String) -> getInstance
    org.apache.commons.lang.CharSet getInstance(java.lang.String[]) -> getInstance
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String[]) -> <init>
    void add(java.lang.String) -> add
    org.apache.commons.lang.CharRange[] getCharRanges() -> getCharRanges
    boolean contains(char) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
org.apache.commons.lang.CharSetUtils -> org.apache.commons.lang.CharSetUtils:
    void <init>() -> <init>
    org.apache.commons.lang.CharSet evaluateSet(java.lang.String[]) -> evaluateSet
    java.lang.String squeeze(java.lang.String,java.lang.String) -> squeeze
    java.lang.String squeeze(java.lang.String,java.lang.String[]) -> squeeze
    int count(java.lang.String,java.lang.String) -> count
    int count(java.lang.String,java.lang.String[]) -> count
    java.lang.String keep(java.lang.String,java.lang.String) -> keep
    java.lang.String keep(java.lang.String,java.lang.String[]) -> keep
    java.lang.String delete(java.lang.String,java.lang.String) -> delete
    java.lang.String delete(java.lang.String,java.lang.String[]) -> delete
    java.lang.String modify(java.lang.String,java.lang.String[],boolean) -> modify
    java.lang.String translate(java.lang.String,java.lang.String,java.lang.String) -> translate
org.apache.commons.lang.CharUtils -> org.apache.commons.lang.CharUtils:
    java.lang.String CHAR_STRING -> CHAR_STRING
    java.lang.String[] CHAR_STRING_ARRAY -> CHAR_STRING_ARRAY
    java.lang.Character[] CHAR_ARRAY -> CHAR_ARRAY
    char LF -> LF
    char CR -> CR
    void <init>() -> <init>
    java.lang.Character toCharacterObject(char) -> toCharacterObject
    java.lang.Character toCharacterObject(java.lang.String) -> toCharacterObject
    char toChar(java.lang.Character) -> toChar
    char toChar(java.lang.Character,char) -> toChar
    char toChar(java.lang.String) -> toChar
    char toChar(java.lang.String,char) -> toChar
    int toIntValue(char) -> toIntValue
    int toIntValue(char,int) -> toIntValue
    int toIntValue(java.lang.Character) -> toIntValue
    int toIntValue(java.lang.Character,int) -> toIntValue
    java.lang.String toString(char) -> toString
    java.lang.String toString(java.lang.Character) -> toString
    java.lang.String unicodeEscaped(char) -> unicodeEscaped
    java.lang.String unicodeEscaped(java.lang.Character) -> unicodeEscaped
    boolean isAscii(char) -> isAscii
    boolean isAsciiPrintable(char) -> isAsciiPrintable
    boolean isAsciiControl(char) -> isAsciiControl
    boolean isAsciiAlpha(char) -> isAsciiAlpha
    boolean isAsciiAlphaUpper(char) -> isAsciiAlphaUpper
    boolean isAsciiAlphaLower(char) -> isAsciiAlphaLower
    boolean isAsciiNumeric(char) -> isAsciiNumeric
    boolean isAsciiAlphanumeric(char) -> isAsciiAlphanumeric
    void <clinit>() -> <clinit>
org.apache.commons.lang.ClassUtils -> org.apache.commons.lang.ClassUtils:
    char PACKAGE_SEPARATOR_CHAR -> PACKAGE_SEPARATOR_CHAR
    java.lang.String PACKAGE_SEPARATOR -> PACKAGE_SEPARATOR
    char INNER_CLASS_SEPARATOR_CHAR -> INNER_CLASS_SEPARATOR_CHAR
    java.lang.String INNER_CLASS_SEPARATOR -> INNER_CLASS_SEPARATOR
    java.util.Map primitiveWrapperMap -> primitiveWrapperMap
    java.util.Map wrapperPrimitiveMap -> wrapperPrimitiveMap
    java.util.Map abbreviationMap -> abbreviationMap
    java.util.Map reverseAbbreviationMap -> reverseAbbreviationMap
    java.lang.Class class$java$lang$Boolean -> class$java$lang$Boolean
    java.lang.Class class$java$lang$Byte -> class$java$lang$Byte
    java.lang.Class class$java$lang$Character -> class$java$lang$Character
    java.lang.Class class$java$lang$Short -> class$java$lang$Short
    java.lang.Class class$java$lang$Integer -> class$java$lang$Integer
    java.lang.Class class$java$lang$Long -> class$java$lang$Long
    java.lang.Class class$java$lang$Double -> class$java$lang$Double
    java.lang.Class class$java$lang$Float -> class$java$lang$Float
    java.lang.Class class$org$apache$commons$lang$ClassUtils -> class$org$apache$commons$lang$ClassUtils
    void addAbbreviation(java.lang.String,java.lang.String) -> addAbbreviation
    void <init>() -> <init>
    java.lang.String getShortClassName(java.lang.Object,java.lang.String) -> getShortClassName
    java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    java.lang.String getShortClassName(java.lang.String) -> getShortClassName
    java.lang.String getPackageName(java.lang.Object,java.lang.String) -> getPackageName
    java.lang.String getPackageName(java.lang.Class) -> getPackageName
    java.lang.String getPackageName(java.lang.String) -> getPackageName
    java.util.List getAllSuperclasses(java.lang.Class) -> getAllSuperclasses
    java.util.List getAllInterfaces(java.lang.Class) -> getAllInterfaces
    java.util.List convertClassNamesToClasses(java.util.List) -> convertClassNamesToClasses
    java.util.List convertClassesToClassNames(java.util.List) -> convertClassesToClassNames
    boolean isAssignable(java.lang.Class[],java.lang.Class[]) -> isAssignable
    boolean isAssignable(java.lang.Class,java.lang.Class) -> isAssignable
    java.lang.Class primitiveToWrapper(java.lang.Class) -> primitiveToWrapper
    java.lang.Class[] primitivesToWrappers(java.lang.Class[]) -> primitivesToWrappers
    java.lang.Class wrapperToPrimitive(java.lang.Class) -> wrapperToPrimitive
    java.lang.Class[] wrappersToPrimitives(java.lang.Class[]) -> wrappersToPrimitives
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean) -> getClass
    java.lang.Class getClass(java.lang.ClassLoader,java.lang.String) -> getClass
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.Class getClass(java.lang.String,boolean) -> getClass
    java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getPublicMethod
    java.lang.String toCanonicalName(java.lang.String) -> toCanonicalName
    java.lang.Class[] toClass(java.lang.Object[]) -> toClass
    java.lang.String getShortCanonicalName(java.lang.Object,java.lang.String) -> getShortCanonicalName
    java.lang.String getShortCanonicalName(java.lang.Class) -> getShortCanonicalName
    java.lang.String getShortCanonicalName(java.lang.String) -> getShortCanonicalName
    java.lang.String getPackageCanonicalName(java.lang.Object,java.lang.String) -> getPackageCanonicalName
    java.lang.String getPackageCanonicalName(java.lang.Class) -> getPackageCanonicalName
    java.lang.String getPackageCanonicalName(java.lang.String) -> getPackageCanonicalName
    java.lang.String getCanonicalName(java.lang.String) -> getCanonicalName
    java.lang.Class class$(java.lang.String) -> class$
    void <clinit>() -> <clinit>
org.apache.commons.lang.Entities -> org.apache.commons.lang.Entities:
    java.lang.String[][] BASIC_ARRAY -> BASIC_ARRAY
    java.lang.String[][] APOS_ARRAY -> APOS_ARRAY
    java.lang.String[][] ISO8859_1_ARRAY -> ISO8859_1_ARRAY
    java.lang.String[][] HTML40_ARRAY -> HTML40_ARRAY
    org.apache.commons.lang.Entities XML -> XML
    org.apache.commons.lang.Entities HTML32 -> HTML32
    org.apache.commons.lang.Entities HTML40 -> HTML40
    org.apache.commons.lang.Entities$EntityMap map -> map
    void <init>() -> <init>
    void fillWithHtml40Entities(org.apache.commons.lang.Entities) -> fillWithHtml40Entities
    void addEntities(java.lang.String[][]) -> addEntities
    void addEntity(java.lang.String,int) -> addEntity
    java.lang.String entityName(int) -> entityName
    int entityValue(java.lang.String) -> entityValue
    java.lang.String escape(java.lang.String) -> escape
    void escape(java.io.Writer,java.lang.String) -> escape
    java.lang.String unescape(java.lang.String) -> unescape
    java.io.StringWriter createStringWriter(java.lang.String) -> createStringWriter
    void unescape(java.io.Writer,java.lang.String) -> unescape
    void doUnescape(java.io.Writer,java.lang.String,int) -> doUnescape
    void <clinit>() -> <clinit>
org.apache.commons.lang.Entities$ArrayEntityMap -> org.apache.commons.lang.Entities$ArrayEntityMap:
    int growBy -> growBy
    int size -> size
    java.lang.String[] names -> names
    int[] values -> values
    void <init>() -> <init>
    void <init>(int) -> <init>
    void add(java.lang.String,int) -> add
    void ensureCapacity(int) -> ensureCapacity
    java.lang.String name(int) -> name
    int value(java.lang.String) -> value
org.apache.commons.lang.Entities$BinaryEntityMap -> org.apache.commons.lang.Entities$BinaryEntityMap:
    void <init>() -> <init>
    void <init>(int) -> <init>
    int binarySearch(int) -> binarySearch
    void add(java.lang.String,int) -> add
    java.lang.String name(int) -> name
org.apache.commons.lang.Entities$EntityMap -> org.apache.commons.lang.Entities$EntityMap:
    void add(java.lang.String,int) -> add
    java.lang.String name(int) -> name
    int value(java.lang.String) -> value
org.apache.commons.lang.Entities$HashEntityMap -> org.apache.commons.lang.Entities$HashEntityMap:
    void <init>() -> <init>
org.apache.commons.lang.Entities$LookupEntityMap -> org.apache.commons.lang.Entities$LookupEntityMap:
    java.lang.String[] lookupTable -> lookupTable
    int LOOKUP_TABLE_SIZE -> LOOKUP_TABLE_SIZE
    void <init>() -> <init>
    java.lang.String name(int) -> name
    java.lang.String[] lookupTable() -> lookupTable
    void createLookupTable() -> createLookupTable
org.apache.commons.lang.Entities$MapIntMap -> org.apache.commons.lang.Entities$MapIntMap:
    java.util.Map mapNameToValue -> mapNameToValue
    java.util.Map mapValueToName -> mapValueToName
    void <init>() -> <init>
    void add(java.lang.String,int) -> add
    java.lang.String name(int) -> name
    int value(java.lang.String) -> value
org.apache.commons.lang.Entities$PrimitiveEntityMap -> org.apache.commons.lang.Entities$PrimitiveEntityMap:
    java.util.Map mapNameToValue -> mapNameToValue
    org.apache.commons.lang.IntHashMap mapValueToName -> mapValueToName
    void <init>() -> <init>
    void add(java.lang.String,int) -> add
    java.lang.String name(int) -> name
    int value(java.lang.String) -> value
org.apache.commons.lang.Entities$TreeEntityMap -> org.apache.commons.lang.Entities$TreeEntityMap:
    void <init>() -> <init>
org.apache.commons.lang.IllegalClassException -> org.apache.commons.lang.IllegalClassException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Class,java.lang.Object) -> <init>
    void <init>(java.lang.Class,java.lang.Class) -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String safeGetClassName(java.lang.Class) -> safeGetClassName
org.apache.commons.lang.IncompleteArgumentException -> org.apache.commons.lang.IncompleteArgumentException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String[]) -> <init>
    java.lang.String safeArrayToString(java.lang.Object[]) -> safeArrayToString
org.apache.commons.lang.IntHashMap -> org.apache.commons.lang.IntHashMap:
    org.apache.commons.lang.IntHashMap$Entry[] table -> table
    int count -> count
    int threshold -> threshold
    float loadFactor -> loadFactor
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(int,float) -> <init>
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsKey(int) -> containsKey
    java.lang.Object get(int) -> get
    void rehash() -> rehash
    java.lang.Object put(int,java.lang.Object) -> put
    java.lang.Object remove(int) -> remove
    void clear() -> clear
org.apache.commons.lang.IntHashMap$Entry -> org.apache.commons.lang.IntHashMap$Entry:
    int hash -> hash
    int key -> key
    java.lang.Object value -> value
    org.apache.commons.lang.IntHashMap$Entry next -> next
    void <init>(int,int,java.lang.Object,org.apache.commons.lang.IntHashMap$Entry) -> <init>
org.apache.commons.lang.LocaleUtils -> org.apache.commons.lang.LocaleUtils:
    java.util.List cAvailableLocaleList -> cAvailableLocaleList
    java.util.Set cAvailableLocaleSet -> cAvailableLocaleSet
    java.util.Map cLanguagesByCountry -> cLanguagesByCountry
    java.util.Map cCountriesByLanguage -> cCountriesByLanguage
    void <init>() -> <init>
    java.util.Locale toLocale(java.lang.String) -> toLocale
    java.util.List localeLookupList(java.util.Locale) -> localeLookupList
    java.util.List localeLookupList(java.util.Locale,java.util.Locale) -> localeLookupList
    java.util.List availableLocaleList() -> availableLocaleList
    java.util.Set availableLocaleSet() -> availableLocaleSet
    boolean isAvailableLocale(java.util.Locale) -> isAvailableLocale
    java.util.List languagesByCountry(java.lang.String) -> languagesByCountry
    java.util.List countriesByLanguage(java.lang.String) -> countriesByLanguage
    void <clinit>() -> <clinit>
org.apache.commons.lang.NotImplementedException -> org.apache.commons.lang.NotImplementedException:
    java.lang.String DEFAULT_MESSAGE -> DEFAULT_MESSAGE
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.exception.NestableDelegate delegate -> delegate
    java.lang.Throwable cause -> cause
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <init>(java.lang.Class) -> <init>
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
org.apache.commons.lang.NullArgumentException -> org.apache.commons.lang.NullArgumentException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.String) -> <init>
org.apache.commons.lang.NumberRange -> org.apache.commons.lang.NumberRange:
    java.lang.Number min -> min
    java.lang.Number max -> max
    void <init>(java.lang.Number) -> <init>
    void <init>(java.lang.Number,java.lang.Number) -> <init>
    java.lang.Number getMinimum() -> getMinimum
    java.lang.Number getMaximum() -> getMaximum
    boolean includesNumber(java.lang.Number) -> includesNumber
    boolean includesRange(org.apache.commons.lang.NumberRange) -> includesRange
    boolean overlaps(org.apache.commons.lang.NumberRange) -> overlaps
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.NumberUtils -> org.apache.commons.lang.NumberUtils:
    void <init>() -> <init>
    int stringToInt(java.lang.String) -> stringToInt
    int stringToInt(java.lang.String,int) -> stringToInt
    java.lang.Number createNumber(java.lang.String) -> createNumber
    boolean isAllZeros(java.lang.String) -> isAllZeros
    java.lang.Float createFloat(java.lang.String) -> createFloat
    java.lang.Double createDouble(java.lang.String) -> createDouble
    java.lang.Integer createInteger(java.lang.String) -> createInteger
    java.lang.Long createLong(java.lang.String) -> createLong
    java.math.BigInteger createBigInteger(java.lang.String) -> createBigInteger
    java.math.BigDecimal createBigDecimal(java.lang.String) -> createBigDecimal
    long minimum(long,long,long) -> minimum
    int minimum(int,int,int) -> minimum
    long maximum(long,long,long) -> maximum
    int maximum(int,int,int) -> maximum
    int compare(double,double) -> compare
    int compare(float,float) -> compare
    boolean isDigits(java.lang.String) -> isDigits
    boolean isNumber(java.lang.String) -> isNumber
org.apache.commons.lang.ObjectUtils -> org.apache.commons.lang.ObjectUtils:
    org.apache.commons.lang.ObjectUtils$Null NULL -> NULL
    void <init>() -> <init>
    java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object) -> defaultIfNull
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    int hashCode(java.lang.Object) -> hashCode
    java.lang.String identityToString(java.lang.Object) -> identityToString
    void identityToString(java.lang.StringBuffer,java.lang.Object) -> identityToString
    java.lang.StringBuffer appendIdentityToString(java.lang.StringBuffer,java.lang.Object) -> appendIdentityToString
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    java.lang.Object min(java.lang.Comparable,java.lang.Comparable) -> min
    java.lang.Object max(java.lang.Comparable,java.lang.Comparable) -> max
    void <clinit>() -> <clinit>
org.apache.commons.lang.ObjectUtils$Null -> org.apache.commons.lang.ObjectUtils$Null:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.RandomStringUtils -> org.apache.commons.lang.RandomStringUtils:
    java.util.Random RANDOM -> RANDOM
    void <init>() -> <init>
    java.lang.String random(int) -> random
    java.lang.String randomAscii(int) -> randomAscii
    java.lang.String randomAlphabetic(int) -> randomAlphabetic
    java.lang.String randomAlphanumeric(int) -> randomAlphanumeric
    java.lang.String randomNumeric(int) -> randomNumeric
    java.lang.String random(int,boolean,boolean) -> random
    java.lang.String random(int,int,int,boolean,boolean) -> random
    java.lang.String random(int,int,int,boolean,boolean,char[]) -> random
    java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random) -> random
    java.lang.String random(int,java.lang.String) -> random
    java.lang.String random(int,char[]) -> random
    void <clinit>() -> <clinit>
org.apache.commons.lang.SerializationException -> org.apache.commons.lang.SerializationException:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.commons.lang.SerializationUtils -> org.apache.commons.lang.SerializationUtils:
    void <init>() -> <init>
    java.lang.Object clone(java.io.Serializable) -> clone
    void serialize(java.io.Serializable,java.io.OutputStream) -> serialize
    byte[] serialize(java.io.Serializable) -> serialize
    java.lang.Object deserialize(java.io.InputStream) -> deserialize
    java.lang.Object deserialize(byte[]) -> deserialize
org.apache.commons.lang.StringEscapeUtils -> org.apache.commons.lang.StringEscapeUtils:
    char CSV_DELIMITER -> CSV_DELIMITER
    char CSV_QUOTE -> CSV_QUOTE
    java.lang.String CSV_QUOTE_STR -> CSV_QUOTE_STR
    char[] CSV_SEARCH_CHARS -> CSV_SEARCH_CHARS
    void <init>() -> <init>
    java.lang.String escapeJava(java.lang.String) -> escapeJava
    void escapeJava(java.io.Writer,java.lang.String) -> escapeJava
    java.lang.String escapeJavaScript(java.lang.String) -> escapeJavaScript
    void escapeJavaScript(java.io.Writer,java.lang.String) -> escapeJavaScript
    java.lang.String escapeJavaStyleString(java.lang.String,boolean) -> escapeJavaStyleString
    void escapeJavaStyleString(java.io.Writer,java.lang.String,boolean) -> escapeJavaStyleString
    java.lang.String hex(char) -> hex
    java.lang.String unescapeJava(java.lang.String) -> unescapeJava
    void unescapeJava(java.io.Writer,java.lang.String) -> unescapeJava
    java.lang.String unescapeJavaScript(java.lang.String) -> unescapeJavaScript
    void unescapeJavaScript(java.io.Writer,java.lang.String) -> unescapeJavaScript
    java.lang.String escapeHtml(java.lang.String) -> escapeHtml
    void escapeHtml(java.io.Writer,java.lang.String) -> escapeHtml
    java.lang.String unescapeHtml(java.lang.String) -> unescapeHtml
    void unescapeHtml(java.io.Writer,java.lang.String) -> unescapeHtml
    void escapeXml(java.io.Writer,java.lang.String) -> escapeXml
    java.lang.String escapeXml(java.lang.String) -> escapeXml
    void unescapeXml(java.io.Writer,java.lang.String) -> unescapeXml
    java.lang.String unescapeXml(java.lang.String) -> unescapeXml
    java.lang.String escapeSql(java.lang.String) -> escapeSql
    java.lang.String escapeCsv(java.lang.String) -> escapeCsv
    void escapeCsv(java.io.Writer,java.lang.String) -> escapeCsv
    java.lang.String unescapeCsv(java.lang.String) -> unescapeCsv
    void unescapeCsv(java.io.Writer,java.lang.String) -> unescapeCsv
    void <clinit>() -> <clinit>
org.apache.commons.lang.StringUtils -> org.apache.commons.lang.StringUtils:
    java.lang.String EMPTY -> EMPTY
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    int PAD_LIMIT -> PAD_LIMIT
    void <init>() -> <init>
    boolean isEmpty(java.lang.String) -> isEmpty
    boolean isNotEmpty(java.lang.String) -> isNotEmpty
    boolean isBlank(java.lang.String) -> isBlank
    boolean isNotBlank(java.lang.String) -> isNotBlank
    java.lang.String clean(java.lang.String) -> clean
    java.lang.String trim(java.lang.String) -> trim
    java.lang.String trimToNull(java.lang.String) -> trimToNull
    java.lang.String trimToEmpty(java.lang.String) -> trimToEmpty
    java.lang.String strip(java.lang.String) -> strip
    java.lang.String stripToNull(java.lang.String) -> stripToNull
    java.lang.String stripToEmpty(java.lang.String) -> stripToEmpty
    java.lang.String strip(java.lang.String,java.lang.String) -> strip
    java.lang.String stripStart(java.lang.String,java.lang.String) -> stripStart
    java.lang.String stripEnd(java.lang.String,java.lang.String) -> stripEnd
    java.lang.String[] stripAll(java.lang.String[]) -> stripAll
    java.lang.String[] stripAll(java.lang.String[],java.lang.String) -> stripAll
    boolean equals(java.lang.String,java.lang.String) -> equals
    boolean equalsIgnoreCase(java.lang.String,java.lang.String) -> equalsIgnoreCase
    int indexOf(java.lang.String,char) -> indexOf
    int indexOf(java.lang.String,char,int) -> indexOf
    int indexOf(java.lang.String,java.lang.String) -> indexOf
    int ordinalIndexOf(java.lang.String,java.lang.String,int) -> ordinalIndexOf
    int indexOf(java.lang.String,java.lang.String,int) -> indexOf
    int lastIndexOf(java.lang.String,char) -> lastIndexOf
    int lastIndexOf(java.lang.String,char,int) -> lastIndexOf
    int lastIndexOf(java.lang.String,java.lang.String) -> lastIndexOf
    int lastIndexOf(java.lang.String,java.lang.String,int) -> lastIndexOf
    boolean contains(java.lang.String,char) -> contains
    boolean contains(java.lang.String,java.lang.String) -> contains
    boolean containsIgnoreCase(java.lang.String,java.lang.String) -> containsIgnoreCase
    int indexOfAny(java.lang.String,char[]) -> indexOfAny
    int indexOfAny(java.lang.String,java.lang.String) -> indexOfAny
    boolean containsAny(java.lang.String,char[]) -> containsAny
    boolean containsAny(java.lang.String,java.lang.String) -> containsAny
    int indexOfAnyBut(java.lang.String,char[]) -> indexOfAnyBut
    int indexOfAnyBut(java.lang.String,java.lang.String) -> indexOfAnyBut
    boolean containsOnly(java.lang.String,char[]) -> containsOnly
    boolean containsOnly(java.lang.String,java.lang.String) -> containsOnly
    boolean containsNone(java.lang.String,char[]) -> containsNone
    boolean containsNone(java.lang.String,java.lang.String) -> containsNone
    int indexOfAny(java.lang.String,java.lang.String[]) -> indexOfAny
    int lastIndexOfAny(java.lang.String,java.lang.String[]) -> lastIndexOfAny
    java.lang.String substring(java.lang.String,int) -> substring
    java.lang.String substring(java.lang.String,int,int) -> substring
    java.lang.String left(java.lang.String,int) -> left
    java.lang.String right(java.lang.String,int) -> right
    java.lang.String mid(java.lang.String,int,int) -> mid
    java.lang.String substringBefore(java.lang.String,java.lang.String) -> substringBefore
    java.lang.String substringAfter(java.lang.String,java.lang.String) -> substringAfter
    java.lang.String substringBeforeLast(java.lang.String,java.lang.String) -> substringBeforeLast
    java.lang.String substringAfterLast(java.lang.String,java.lang.String) -> substringAfterLast
    java.lang.String substringBetween(java.lang.String,java.lang.String) -> substringBetween
    java.lang.String substringBetween(java.lang.String,java.lang.String,java.lang.String) -> substringBetween
    java.lang.String[] substringsBetween(java.lang.String,java.lang.String,java.lang.String) -> substringsBetween
    java.lang.String getNestedString(java.lang.String,java.lang.String) -> getNestedString
    java.lang.String getNestedString(java.lang.String,java.lang.String,java.lang.String) -> getNestedString
    java.lang.String[] split(java.lang.String) -> split
    java.lang.String[] split(java.lang.String,char) -> split
    java.lang.String[] split(java.lang.String,java.lang.String) -> split
    java.lang.String[] split(java.lang.String,java.lang.String,int) -> split
    java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String) -> splitByWholeSeparator
    java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String,int) -> splitByWholeSeparator
    java.lang.String[] splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String) -> splitByWholeSeparatorPreserveAllTokens
    java.lang.String[] splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int) -> splitByWholeSeparatorPreserveAllTokens
    java.lang.String[] splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean) -> splitByWholeSeparatorWorker
    java.lang.String[] splitPreserveAllTokens(java.lang.String) -> splitPreserveAllTokens
    java.lang.String[] splitPreserveAllTokens(java.lang.String,char) -> splitPreserveAllTokens
    java.lang.String[] splitWorker(java.lang.String,char,boolean) -> splitWorker
    java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String) -> splitPreserveAllTokens
    java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String,int) -> splitPreserveAllTokens
    java.lang.String[] splitWorker(java.lang.String,java.lang.String,int,boolean) -> splitWorker
    java.lang.String[] splitByCharacterType(java.lang.String) -> splitByCharacterType
    java.lang.String[] splitByCharacterTypeCamelCase(java.lang.String) -> splitByCharacterTypeCamelCase
    java.lang.String[] splitByCharacterType(java.lang.String,boolean) -> splitByCharacterType
    java.lang.String concatenate(java.lang.Object[]) -> concatenate
    java.lang.String join(java.lang.Object[]) -> join
    java.lang.String join(java.lang.Object[],char) -> join
    java.lang.String join(java.lang.Object[],char,int,int) -> join
    java.lang.String join(java.lang.Object[],java.lang.String) -> join
    java.lang.String join(java.lang.Object[],java.lang.String,int,int) -> join
    java.lang.String join(java.util.Iterator,char) -> join
    java.lang.String join(java.util.Iterator,java.lang.String) -> join
    java.lang.String join(java.util.Collection,char) -> join
    java.lang.String join(java.util.Collection,java.lang.String) -> join
    java.lang.String deleteSpaces(java.lang.String) -> deleteSpaces
    java.lang.String deleteWhitespace(java.lang.String) -> deleteWhitespace
    java.lang.String removeStart(java.lang.String,java.lang.String) -> removeStart
    java.lang.String removeStartIgnoreCase(java.lang.String,java.lang.String) -> removeStartIgnoreCase
    java.lang.String removeEnd(java.lang.String,java.lang.String) -> removeEnd
    java.lang.String removeEndIgnoreCase(java.lang.String,java.lang.String) -> removeEndIgnoreCase
    java.lang.String remove(java.lang.String,java.lang.String) -> remove
    java.lang.String remove(java.lang.String,char) -> remove
    java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String) -> replaceOnce
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int) -> replace
    java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[]) -> replaceEach
    java.lang.String replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[]) -> replaceEachRepeatedly
    java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int) -> replaceEach
    java.lang.String replaceChars(java.lang.String,char,char) -> replaceChars
    java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String) -> replaceChars
    java.lang.String overlayString(java.lang.String,java.lang.String,int,int) -> overlayString
    java.lang.String overlay(java.lang.String,java.lang.String,int,int) -> overlay
    java.lang.String chomp(java.lang.String) -> chomp
    java.lang.String chomp(java.lang.String,java.lang.String) -> chomp
    java.lang.String chompLast(java.lang.String) -> chompLast
    java.lang.String chompLast(java.lang.String,java.lang.String) -> chompLast
    java.lang.String getChomp(java.lang.String,java.lang.String) -> getChomp
    java.lang.String prechomp(java.lang.String,java.lang.String) -> prechomp
    java.lang.String getPrechomp(java.lang.String,java.lang.String) -> getPrechomp
    java.lang.String chop(java.lang.String) -> chop
    java.lang.String chopNewline(java.lang.String) -> chopNewline
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String repeat(java.lang.String,int) -> repeat
    java.lang.String padding(int,char) -> padding
    java.lang.String rightPad(java.lang.String,int) -> rightPad
    java.lang.String rightPad(java.lang.String,int,char) -> rightPad
    java.lang.String rightPad(java.lang.String,int,java.lang.String) -> rightPad
    java.lang.String leftPad(java.lang.String,int) -> leftPad
    java.lang.String leftPad(java.lang.String,int,char) -> leftPad
    java.lang.String leftPad(java.lang.String,int,java.lang.String) -> leftPad
    int length(java.lang.String) -> length
    java.lang.String center(java.lang.String,int) -> center
    java.lang.String center(java.lang.String,int,char) -> center
    java.lang.String center(java.lang.String,int,java.lang.String) -> center
    java.lang.String upperCase(java.lang.String) -> upperCase
    java.lang.String lowerCase(java.lang.String) -> lowerCase
    java.lang.String capitalize(java.lang.String) -> capitalize
    java.lang.String capitalise(java.lang.String) -> capitalise
    java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    java.lang.String uncapitalise(java.lang.String) -> uncapitalise
    java.lang.String swapCase(java.lang.String) -> swapCase
    java.lang.String capitaliseAllWords(java.lang.String) -> capitaliseAllWords
    int countMatches(java.lang.String,java.lang.String) -> countMatches
    boolean isAlpha(java.lang.String) -> isAlpha
    boolean isAlphaSpace(java.lang.String) -> isAlphaSpace
    boolean isAlphanumeric(java.lang.String) -> isAlphanumeric
    boolean isAlphanumericSpace(java.lang.String) -> isAlphanumericSpace
    boolean isAsciiPrintable(java.lang.String) -> isAsciiPrintable
    boolean isNumeric(java.lang.String) -> isNumeric
    boolean isNumericSpace(java.lang.String) -> isNumericSpace
    boolean isWhitespace(java.lang.String) -> isWhitespace
    java.lang.String defaultString(java.lang.String) -> defaultString
    java.lang.String defaultString(java.lang.String,java.lang.String) -> defaultString
    java.lang.String defaultIfEmpty(java.lang.String,java.lang.String) -> defaultIfEmpty
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String reverseDelimited(java.lang.String,char) -> reverseDelimited
    java.lang.String reverseDelimitedString(java.lang.String,java.lang.String) -> reverseDelimitedString
    java.lang.String abbreviate(java.lang.String,int) -> abbreviate
    java.lang.String abbreviate(java.lang.String,int,int) -> abbreviate
    java.lang.String difference(java.lang.String,java.lang.String) -> difference
    int indexOfDifference(java.lang.String,java.lang.String) -> indexOfDifference
    int indexOfDifference(java.lang.String[]) -> indexOfDifference
    java.lang.String getCommonPrefix(java.lang.String[]) -> getCommonPrefix
    int getLevenshteinDistance(java.lang.String,java.lang.String) -> getLevenshteinDistance
    boolean startsWith(java.lang.String,java.lang.String) -> startsWith
    boolean startsWithIgnoreCase(java.lang.String,java.lang.String) -> startsWithIgnoreCase
    boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
    boolean endsWith(java.lang.String,java.lang.String) -> endsWith
    boolean endsWithIgnoreCase(java.lang.String,java.lang.String) -> endsWithIgnoreCase
    boolean endsWith(java.lang.String,java.lang.String,boolean) -> endsWith
org.apache.commons.lang.SystemUtils -> org.apache.commons.lang.SystemUtils:
    java.lang.String OS_NAME_WINDOWS_PREFIX -> OS_NAME_WINDOWS_PREFIX
    java.lang.String USER_HOME_KEY -> USER_HOME_KEY
    java.lang.String USER_DIR_KEY -> USER_DIR_KEY
    java.lang.String JAVA_IO_TMPDIR_KEY -> JAVA_IO_TMPDIR_KEY
    java.lang.String JAVA_HOME_KEY -> JAVA_HOME_KEY
    java.lang.String AWT_TOOLKIT -> AWT_TOOLKIT
    java.lang.String FILE_ENCODING -> FILE_ENCODING
    java.lang.String FILE_SEPARATOR -> FILE_SEPARATOR
    java.lang.String JAVA_AWT_FONTS -> JAVA_AWT_FONTS
    java.lang.String JAVA_AWT_GRAPHICSENV -> JAVA_AWT_GRAPHICSENV
    java.lang.String JAVA_AWT_HEADLESS -> JAVA_AWT_HEADLESS
    java.lang.String JAVA_AWT_PRINTERJOB -> JAVA_AWT_PRINTERJOB
    java.lang.String JAVA_CLASS_PATH -> JAVA_CLASS_PATH
    java.lang.String JAVA_CLASS_VERSION -> JAVA_CLASS_VERSION
    java.lang.String JAVA_COMPILER -> JAVA_COMPILER
    java.lang.String JAVA_ENDORSED_DIRS -> JAVA_ENDORSED_DIRS
    java.lang.String JAVA_EXT_DIRS -> JAVA_EXT_DIRS
    java.lang.String JAVA_HOME -> JAVA_HOME
    java.lang.String JAVA_IO_TMPDIR -> JAVA_IO_TMPDIR
    java.lang.String JAVA_LIBRARY_PATH -> JAVA_LIBRARY_PATH
    java.lang.String JAVA_RUNTIME_NAME -> JAVA_RUNTIME_NAME
    java.lang.String JAVA_RUNTIME_VERSION -> JAVA_RUNTIME_VERSION
    java.lang.String JAVA_SPECIFICATION_NAME -> JAVA_SPECIFICATION_NAME
    java.lang.String JAVA_SPECIFICATION_VENDOR -> JAVA_SPECIFICATION_VENDOR
    java.lang.String JAVA_SPECIFICATION_VERSION -> JAVA_SPECIFICATION_VERSION
    java.lang.String JAVA_UTIL_PREFS_PREFERENCES_FACTORY -> JAVA_UTIL_PREFS_PREFERENCES_FACTORY
    java.lang.String JAVA_VENDOR -> JAVA_VENDOR
    java.lang.String JAVA_VENDOR_URL -> JAVA_VENDOR_URL
    java.lang.String JAVA_VERSION -> JAVA_VERSION
    java.lang.String JAVA_VM_INFO -> JAVA_VM_INFO
    java.lang.String JAVA_VM_NAME -> JAVA_VM_NAME
    java.lang.String JAVA_VM_SPECIFICATION_NAME -> JAVA_VM_SPECIFICATION_NAME
    java.lang.String JAVA_VM_SPECIFICATION_VENDOR -> JAVA_VM_SPECIFICATION_VENDOR
    java.lang.String JAVA_VM_SPECIFICATION_VERSION -> JAVA_VM_SPECIFICATION_VERSION
    java.lang.String JAVA_VM_VENDOR -> JAVA_VM_VENDOR
    java.lang.String JAVA_VM_VERSION -> JAVA_VM_VERSION
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    java.lang.String OS_ARCH -> OS_ARCH
    java.lang.String OS_NAME -> OS_NAME
    java.lang.String OS_VERSION -> OS_VERSION
    java.lang.String PATH_SEPARATOR -> PATH_SEPARATOR
    java.lang.String USER_COUNTRY -> USER_COUNTRY
    java.lang.String USER_DIR -> USER_DIR
    java.lang.String USER_HOME -> USER_HOME
    java.lang.String USER_LANGUAGE -> USER_LANGUAGE
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String USER_TIMEZONE -> USER_TIMEZONE
    java.lang.String JAVA_VERSION_TRIMMED -> JAVA_VERSION_TRIMMED
    float JAVA_VERSION_FLOAT -> JAVA_VERSION_FLOAT
    int JAVA_VERSION_INT -> JAVA_VERSION_INT
    boolean IS_JAVA_1_1 -> IS_JAVA_1_1
    boolean IS_JAVA_1_2 -> IS_JAVA_1_2
    boolean IS_JAVA_1_3 -> IS_JAVA_1_3
    boolean IS_JAVA_1_4 -> IS_JAVA_1_4
    boolean IS_JAVA_1_5 -> IS_JAVA_1_5
    boolean IS_JAVA_1_6 -> IS_JAVA_1_6
    boolean IS_OS_AIX -> IS_OS_AIX
    boolean IS_OS_HP_UX -> IS_OS_HP_UX
    boolean IS_OS_IRIX -> IS_OS_IRIX
    boolean IS_OS_LINUX -> IS_OS_LINUX
    boolean IS_OS_MAC -> IS_OS_MAC
    boolean IS_OS_MAC_OSX -> IS_OS_MAC_OSX
    boolean IS_OS_OS2 -> IS_OS_OS2
    boolean IS_OS_SOLARIS -> IS_OS_SOLARIS
    boolean IS_OS_SUN_OS -> IS_OS_SUN_OS
    boolean IS_OS_UNIX -> IS_OS_UNIX
    boolean IS_OS_WINDOWS -> IS_OS_WINDOWS
    boolean IS_OS_WINDOWS_2000 -> IS_OS_WINDOWS_2000
    boolean IS_OS_WINDOWS_95 -> IS_OS_WINDOWS_95
    boolean IS_OS_WINDOWS_98 -> IS_OS_WINDOWS_98
    boolean IS_OS_WINDOWS_ME -> IS_OS_WINDOWS_ME
    boolean IS_OS_WINDOWS_NT -> IS_OS_WINDOWS_NT
    boolean IS_OS_WINDOWS_XP -> IS_OS_WINDOWS_XP
    boolean IS_OS_WINDOWS_VISTA -> IS_OS_WINDOWS_VISTA
    void <init>() -> <init>
    float getJavaVersion() -> getJavaVersion
    float getJavaVersionAsFloat() -> getJavaVersionAsFloat
    int getJavaVersionAsInt() -> getJavaVersionAsInt
    java.lang.String getJavaVersionTrimmed() -> getJavaVersionTrimmed
    boolean getJavaVersionMatches(java.lang.String) -> getJavaVersionMatches
    boolean getOSMatches(java.lang.String) -> getOSMatches
    boolean getOSMatches(java.lang.String,java.lang.String) -> getOSMatches
    java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    boolean isJavaVersionAtLeast(float) -> isJavaVersionAtLeast
    boolean isJavaVersionAtLeast(int) -> isJavaVersionAtLeast
    boolean isJavaAwtHeadless() -> isJavaAwtHeadless
    java.io.File getJavaHome() -> getJavaHome
    java.io.File getJavaIoTmpDir() -> getJavaIoTmpDir
    java.io.File getUserDir() -> getUserDir
    java.io.File getUserHome() -> getUserHome
    void <clinit>() -> <clinit>
org.apache.commons.lang.UnhandledException -> org.apache.commons.lang.UnhandledException:
    long serialVersionUID -> serialVersionUID
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.commons.lang.Validate -> org.apache.commons.lang.Validate:
    void <init>() -> <init>
    void isTrue(boolean,java.lang.String,java.lang.Object) -> isTrue
    void isTrue(boolean,java.lang.String,long) -> isTrue
    void isTrue(boolean,java.lang.String,double) -> isTrue
    void isTrue(boolean,java.lang.String) -> isTrue
    void isTrue(boolean) -> isTrue
    void notNull(java.lang.Object,java.lang.String) -> notNull
    void notNull(java.lang.Object) -> notNull
    void notEmpty(java.lang.Object[],java.lang.String) -> notEmpty
    void notEmpty(java.lang.Object[]) -> notEmpty
    void notEmpty(java.util.Collection,java.lang.String) -> notEmpty
    void notEmpty(java.util.Collection) -> notEmpty
    void notEmpty(java.util.Map,java.lang.String) -> notEmpty
    void notEmpty(java.util.Map) -> notEmpty
    void notEmpty(java.lang.String,java.lang.String) -> notEmpty
    void notEmpty(java.lang.String) -> notEmpty
    void noNullElements(java.lang.Object[],java.lang.String) -> noNullElements
    void noNullElements(java.lang.Object[]) -> noNullElements
    void noNullElements(java.util.Collection,java.lang.String) -> noNullElements
    void noNullElements(java.util.Collection) -> noNullElements
    void allElementsOfType(java.util.Collection,java.lang.Class,java.lang.String) -> allElementsOfType
    void allElementsOfType(java.util.Collection,java.lang.Class) -> allElementsOfType
org.apache.commons.lang.WordUtils -> org.apache.commons.lang.WordUtils:
    void <init>() -> <init>
    java.lang.String wrap(java.lang.String,int) -> wrap
    java.lang.String wrap(java.lang.String,int,java.lang.String,boolean) -> wrap
    java.lang.String capitalize(java.lang.String) -> capitalize
    java.lang.String capitalize(java.lang.String,char[]) -> capitalize
    java.lang.String capitalizeFully(java.lang.String) -> capitalizeFully
    java.lang.String capitalizeFully(java.lang.String,char[]) -> capitalizeFully
    java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    java.lang.String uncapitalize(java.lang.String,char[]) -> uncapitalize
    java.lang.String swapCase(java.lang.String) -> swapCase
    java.lang.String initials(java.lang.String) -> initials
    java.lang.String initials(java.lang.String,char[]) -> initials
    boolean isDelimiter(char,char[]) -> isDelimiter
    java.lang.String abbreviate(java.lang.String,int,int,java.lang.String) -> abbreviate
org.apache.commons.lang.builder.CompareToBuilder -> org.apache.commons.lang.builder.CompareToBuilder:
    int comparison -> comparison
    void <init>() -> <init>
    int reflectionCompare(java.lang.Object,java.lang.Object) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,boolean) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,java.util.Collection) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,java.lang.String[]) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class) -> reflectionCompare
    int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionCompare
    void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang.builder.CompareToBuilder,boolean,java.lang.String[]) -> reflectionAppend
    org.apache.commons.lang.builder.CompareToBuilder appendSuper(int) -> appendSuper
    org.apache.commons.lang.builder.CompareToBuilder append(java.lang.Object,java.lang.Object) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(java.lang.Object,java.lang.Object,java.util.Comparator) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(long,long) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(int,int) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(short,short) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(char,char) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(byte,byte) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(double,double) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(float,float) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(boolean,boolean) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[],java.util.Comparator) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(long[],long[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(int[],int[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(short[],short[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(char[],char[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(byte[],byte[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(double[],double[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(float[],float[]) -> append
    org.apache.commons.lang.builder.CompareToBuilder append(boolean[],boolean[]) -> append
    int toComparison() -> toComparison
org.apache.commons.lang.builder.EqualsBuilder -> org.apache.commons.lang.builder.EqualsBuilder:
    boolean isEquals -> isEquals
    void <init>() -> <init>
    boolean reflectionEquals(java.lang.Object,java.lang.Object) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,java.util.Collection) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,java.lang.String[]) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class) -> reflectionEquals
    boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionEquals
    void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang.builder.EqualsBuilder,boolean,java.lang.String[]) -> reflectionAppend
    org.apache.commons.lang.builder.EqualsBuilder appendSuper(boolean) -> appendSuper
    org.apache.commons.lang.builder.EqualsBuilder append(java.lang.Object,java.lang.Object) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(long,long) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(int,int) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(short,short) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(char,char) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(byte,byte) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(double,double) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(float,float) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(boolean,boolean) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(long[],long[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(int[],int[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(short[],short[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(char[],char[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(byte[],byte[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(double[],double[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(float[],float[]) -> append
    org.apache.commons.lang.builder.EqualsBuilder append(boolean[],boolean[]) -> append
    boolean isEquals() -> isEquals
    void setEquals(boolean) -> setEquals
org.apache.commons.lang.builder.HashCodeBuilder -> org.apache.commons.lang.builder.HashCodeBuilder:
    java.lang.ThreadLocal registry -> registry
    int iConstant -> iConstant
    int iTotal -> iTotal
    java.util.Set getRegistry() -> getRegistry
    boolean isRegistered(java.lang.Object) -> isRegistered
    void reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang.builder.HashCodeBuilder,boolean,java.lang.String[]) -> reflectionAppend
    int reflectionHashCode(int,int,java.lang.Object) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object,boolean) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class) -> reflectionHashCode
    int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,boolean) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,java.util.Collection) -> reflectionHashCode
    int reflectionHashCode(java.lang.Object,java.lang.String[]) -> reflectionHashCode
    void register(java.lang.Object) -> register
    java.lang.Integer toIdentityHashCodeInteger(java.lang.Object) -> toIdentityHashCodeInteger
    void unregister(java.lang.Object) -> unregister
    void <init>() -> <init>
    void <init>(int,int) -> <init>
    org.apache.commons.lang.builder.HashCodeBuilder append(boolean) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(boolean[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(byte) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(byte[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(char) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(char[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(double) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(double[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(float) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(float[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(int) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(int[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(long) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(long[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(java.lang.Object) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(java.lang.Object[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(short) -> append
    org.apache.commons.lang.builder.HashCodeBuilder append(short[]) -> append
    org.apache.commons.lang.builder.HashCodeBuilder appendSuper(int) -> appendSuper
    int toHashCode() -> toHashCode
    void <clinit>() -> <clinit>
org.apache.commons.lang.builder.HashCodeBuilder$1 -> org.apache.commons.lang.builder.HashCodeBuilder$1:
    void <init>() -> <init>
    java.lang.Object initialValue() -> initialValue
org.apache.commons.lang.builder.ReflectionToStringBuilder -> org.apache.commons.lang.builder.ReflectionToStringBuilder:
    boolean appendStatics -> appendStatics
    boolean appendTransients -> appendTransients
    java.lang.String[] excludeFieldNames -> excludeFieldNames
    java.lang.Class upToClass -> upToClass
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean,boolean) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean,boolean,java.lang.Class) -> toString
    java.lang.String toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean,java.lang.Class) -> toString
    java.lang.String toStringExclude(java.lang.Object,java.lang.String) -> toStringExclude
    java.lang.String toStringExclude(java.lang.Object,java.util.Collection) -> toStringExclude
    java.lang.String[] toNoNullStringArray(java.util.Collection) -> toNoNullStringArray
    java.lang.String[] toNoNullStringArray(java.lang.Object[]) -> toNoNullStringArray
    java.lang.String toStringExclude(java.lang.Object,java.lang.String[]) -> toStringExclude
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle) -> <init>
    void <init>(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,java.lang.StringBuffer) -> <init>
    void <init>(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,java.lang.StringBuffer,java.lang.Class,boolean) -> <init>
    void <init>(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,java.lang.StringBuffer,java.lang.Class,boolean,boolean) -> <init>
    boolean accept(java.lang.reflect.Field) -> accept
    void appendFieldsIn(java.lang.Class) -> appendFieldsIn
    java.lang.String[] getExcludeFieldNames() -> getExcludeFieldNames
    java.lang.Class getUpToClass() -> getUpToClass
    java.lang.Object getValue(java.lang.reflect.Field) -> getValue
    boolean isAppendStatics() -> isAppendStatics
    boolean isAppendTransients() -> isAppendTransients
    org.apache.commons.lang.builder.ToStringBuilder reflectionAppendArray(java.lang.Object) -> reflectionAppendArray
    void setAppendStatics(boolean) -> setAppendStatics
    void setAppendTransients(boolean) -> setAppendTransients
    org.apache.commons.lang.builder.ReflectionToStringBuilder setExcludeFieldNames(java.lang.String[]) -> setExcludeFieldNames
    void setUpToClass(java.lang.Class) -> setUpToClass
    java.lang.String toString() -> toString
org.apache.commons.lang.builder.StandardToStringStyle -> org.apache.commons.lang.builder.StandardToStringStyle:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    boolean isUseClassName() -> isUseClassName
    void setUseClassName(boolean) -> setUseClassName
    boolean isUseShortClassName() -> isUseShortClassName
    boolean isShortClassName() -> isShortClassName
    void setUseShortClassName(boolean) -> setUseShortClassName
    void setShortClassName(boolean) -> setShortClassName
    boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    boolean isUseFieldNames() -> isUseFieldNames
    void setUseFieldNames(boolean) -> setUseFieldNames
    boolean isDefaultFullDetail() -> isDefaultFullDetail
    void setDefaultFullDetail(boolean) -> setDefaultFullDetail
    boolean isArrayContentDetail() -> isArrayContentDetail
    void setArrayContentDetail(boolean) -> setArrayContentDetail
    java.lang.String getArrayStart() -> getArrayStart
    void setArrayStart(java.lang.String) -> setArrayStart
    java.lang.String getArrayEnd() -> getArrayEnd
    void setArrayEnd(java.lang.String) -> setArrayEnd
    java.lang.String getArraySeparator() -> getArraySeparator
    void setArraySeparator(java.lang.String) -> setArraySeparator
    java.lang.String getContentStart() -> getContentStart
    void setContentStart(java.lang.String) -> setContentStart
    java.lang.String getContentEnd() -> getContentEnd
    void setContentEnd(java.lang.String) -> setContentEnd
    java.lang.String getFieldNameValueSeparator() -> getFieldNameValueSeparator
    void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    java.lang.String getFieldSeparator() -> getFieldSeparator
    void setFieldSeparator(java.lang.String) -> setFieldSeparator
    boolean isFieldSeparatorAtStart() -> isFieldSeparatorAtStart
    void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    boolean isFieldSeparatorAtEnd() -> isFieldSeparatorAtEnd
    void setFieldSeparatorAtEnd(boolean) -> setFieldSeparatorAtEnd
    java.lang.String getNullText() -> getNullText
    void setNullText(java.lang.String) -> setNullText
    java.lang.String getSizeStartText() -> getSizeStartText
    void setSizeStartText(java.lang.String) -> setSizeStartText
    java.lang.String getSizeEndText() -> getSizeEndText
    void setSizeEndText(java.lang.String) -> setSizeEndText
    java.lang.String getSummaryObjectStartText() -> getSummaryObjectStartText
    void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    java.lang.String getSummaryObjectEndText() -> getSummaryObjectEndText
    void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
org.apache.commons.lang.builder.ToStringBuilder -> org.apache.commons.lang.builder.ToStringBuilder:
    org.apache.commons.lang.builder.ToStringStyle defaultStyle -> defaultStyle
    java.lang.StringBuffer buffer -> buffer
    java.lang.Object object -> object
    org.apache.commons.lang.builder.ToStringStyle style -> style
    org.apache.commons.lang.builder.ToStringStyle getDefaultStyle() -> getDefaultStyle
    java.lang.String reflectionToString(java.lang.Object) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean) -> reflectionToString
    java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,boolean,java.lang.Class) -> reflectionToString
    void setDefaultStyle(org.apache.commons.lang.builder.ToStringStyle) -> setDefaultStyle
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle) -> <init>
    void <init>(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle,java.lang.StringBuffer) -> <init>
    org.apache.commons.lang.builder.ToStringBuilder append(boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(boolean[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(byte) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(byte[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(char) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(char[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(double) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(double[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(float) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(float[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(int) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(int[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(long) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(long[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.Object) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.Object[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(short) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(short[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,boolean[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,boolean[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,byte) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,byte[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,byte[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,char) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,char[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,char[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,double) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,double[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,double[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,float) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,float[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,float[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,int) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,int[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,int[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,long) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,long[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,long[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,java.lang.Object) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,java.lang.Object,boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,java.lang.Object[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,java.lang.Object[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,short) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,short[]) -> append
    org.apache.commons.lang.builder.ToStringBuilder append(java.lang.String,short[],boolean) -> append
    org.apache.commons.lang.builder.ToStringBuilder appendAsObjectToString(java.lang.Object) -> appendAsObjectToString
    org.apache.commons.lang.builder.ToStringBuilder appendSuper(java.lang.String) -> appendSuper
    org.apache.commons.lang.builder.ToStringBuilder appendToString(java.lang.String) -> appendToString
    java.lang.Object getObject() -> getObject
    java.lang.StringBuffer getStringBuffer() -> getStringBuffer
    org.apache.commons.lang.builder.ToStringStyle getStyle() -> getStyle
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
org.apache.commons.lang.builder.ToStringStyle -> org.apache.commons.lang.builder.ToStringStyle:
    org.apache.commons.lang.builder.ToStringStyle DEFAULT_STYLE -> DEFAULT_STYLE
    org.apache.commons.lang.builder.ToStringStyle MULTI_LINE_STYLE -> MULTI_LINE_STYLE
    org.apache.commons.lang.builder.ToStringStyle NO_FIELD_NAMES_STYLE -> NO_FIELD_NAMES_STYLE
    org.apache.commons.lang.builder.ToStringStyle SHORT_PREFIX_STYLE -> SHORT_PREFIX_STYLE
    org.apache.commons.lang.builder.ToStringStyle SIMPLE_STYLE -> SIMPLE_STYLE
    java.lang.ThreadLocal registry -> registry
    boolean useFieldNames -> useFieldNames
    boolean useClassName -> useClassName
    boolean useShortClassName -> useShortClassName
    boolean useIdentityHashCode -> useIdentityHashCode
    java.lang.String contentStart -> contentStart
    java.lang.String contentEnd -> contentEnd
    java.lang.String fieldNameValueSeparator -> fieldNameValueSeparator
    boolean fieldSeparatorAtStart -> fieldSeparatorAtStart
    boolean fieldSeparatorAtEnd -> fieldSeparatorAtEnd
    java.lang.String fieldSeparator -> fieldSeparator
    java.lang.String arrayStart -> arrayStart
    java.lang.String arraySeparator -> arraySeparator
    boolean arrayContentDetail -> arrayContentDetail
    java.lang.String arrayEnd -> arrayEnd
    boolean defaultFullDetail -> defaultFullDetail
    java.lang.String nullText -> nullText
    java.lang.String sizeStartText -> sizeStartText
    java.lang.String sizeEndText -> sizeEndText
    java.lang.String summaryObjectStartText -> summaryObjectStartText
    java.lang.String summaryObjectEndText -> summaryObjectEndText
    java.util.Set getRegistry() -> getRegistry
    boolean isRegistered(java.lang.Object) -> isRegistered
    void register(java.lang.Object) -> register
    void unregister(java.lang.Object) -> unregister
    void <init>() -> <init>
    void appendSuper(java.lang.StringBuffer,java.lang.String) -> appendSuper
    void appendToString(java.lang.StringBuffer,java.lang.String) -> appendToString
    void appendStart(java.lang.StringBuffer,java.lang.Object) -> appendStart
    void appendEnd(java.lang.StringBuffer,java.lang.Object) -> appendEnd
    void removeLastFieldSeparator(java.lang.StringBuffer) -> removeLastFieldSeparator
    void append(java.lang.StringBuffer,java.lang.String,java.lang.Object,java.lang.Boolean) -> append
    void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> appendInternal
    void appendCyclicObject(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendCyclicObject
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Collection) -> appendDetail
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Map) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,long) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,long) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,int) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,int) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,short) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,short) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,byte) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,byte) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,char) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,char) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,double) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,double) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,float) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,float) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,boolean) -> appendDetail
    void append(java.lang.StringBuffer,java.lang.String,java.lang.Object[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendDetail
    void reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> reflectionAppendArrayDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,long[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,long[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,long[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,int[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,int[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,int[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,short[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,short[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,short[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,byte[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,byte[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,byte[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,char[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,char[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,char[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,double[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,double[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,double[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,float[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,float[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,float[]) -> appendSummary
    void append(java.lang.StringBuffer,java.lang.String,boolean[],java.lang.Boolean) -> append
    void appendDetail(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendDetail
    void appendSummary(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendSummary
    void appendClassName(java.lang.StringBuffer,java.lang.Object) -> appendClassName
    void appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object) -> appendIdentityHashCode
    void appendContentStart(java.lang.StringBuffer) -> appendContentStart
    void appendContentEnd(java.lang.StringBuffer) -> appendContentEnd
    void appendNullText(java.lang.StringBuffer,java.lang.String) -> appendNullText
    void appendFieldSeparator(java.lang.StringBuffer) -> appendFieldSeparator
    void appendFieldStart(java.lang.StringBuffer,java.lang.String) -> appendFieldStart
    void appendFieldEnd(java.lang.StringBuffer,java.lang.String) -> appendFieldEnd
    void appendSummarySize(java.lang.StringBuffer,java.lang.String,int) -> appendSummarySize
    boolean isFullDetail(java.lang.Boolean) -> isFullDetail
    java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    boolean isUseClassName() -> isUseClassName
    void setUseClassName(boolean) -> setUseClassName
    boolean isUseShortClassName() -> isUseShortClassName
    boolean isShortClassName() -> isShortClassName
    void setUseShortClassName(boolean) -> setUseShortClassName
    void setShortClassName(boolean) -> setShortClassName
    boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    boolean isUseFieldNames() -> isUseFieldNames
    void setUseFieldNames(boolean) -> setUseFieldNames
    boolean isDefaultFullDetail() -> isDefaultFullDetail
    void setDefaultFullDetail(boolean) -> setDefaultFullDetail
    boolean isArrayContentDetail() -> isArrayContentDetail
    void setArrayContentDetail(boolean) -> setArrayContentDetail
    java.lang.String getArrayStart() -> getArrayStart
    void setArrayStart(java.lang.String) -> setArrayStart
    java.lang.String getArrayEnd() -> getArrayEnd
    void setArrayEnd(java.lang.String) -> setArrayEnd
    java.lang.String getArraySeparator() -> getArraySeparator
    void setArraySeparator(java.lang.String) -> setArraySeparator
    java.lang.String getContentStart() -> getContentStart
    void setContentStart(java.lang.String) -> setContentStart
    java.lang.String getContentEnd() -> getContentEnd
    void setContentEnd(java.lang.String) -> setContentEnd
    java.lang.String getFieldNameValueSeparator() -> getFieldNameValueSeparator
    void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    java.lang.String getFieldSeparator() -> getFieldSeparator
    void setFieldSeparator(java.lang.String) -> setFieldSeparator
    boolean isFieldSeparatorAtStart() -> isFieldSeparatorAtStart
    void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    boolean isFieldSeparatorAtEnd() -> isFieldSeparatorAtEnd
    void setFieldSeparatorAtEnd(boolean) -> setFieldSeparatorAtEnd
    java.lang.String getNullText() -> getNullText
    void setNullText(java.lang.String) -> setNullText
    java.lang.String getSizeStartText() -> getSizeStartText
    void setSizeStartText(java.lang.String) -> setSizeStartText
    java.lang.String getSizeEndText() -> getSizeEndText
    void setSizeEndText(java.lang.String) -> setSizeEndText
    java.lang.String getSummaryObjectStartText() -> getSummaryObjectStartText
    void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    java.lang.String getSummaryObjectEndText() -> getSummaryObjectEndText
    void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
    void <clinit>() -> <clinit>
org.apache.commons.lang.builder.ToStringStyle$1 -> org.apache.commons.lang.builder.ToStringStyle$1:
    void <init>() -> <init>
    java.lang.Object initialValue() -> initialValue
org.apache.commons.lang.builder.ToStringStyle$DefaultToStringStyle -> org.apache.commons.lang.builder.ToStringStyle$DefaultToStringStyle:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.builder.ToStringStyle$MultiLineToStringStyle -> org.apache.commons.lang.builder.ToStringStyle$MultiLineToStringStyle:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.builder.ToStringStyle$NoFieldNameToStringStyle -> org.apache.commons.lang.builder.ToStringStyle$NoFieldNameToStringStyle:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.builder.ToStringStyle$ShortPrefixToStringStyle -> org.apache.commons.lang.builder.ToStringStyle$ShortPrefixToStringStyle:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.builder.ToStringStyle$SimpleToStringStyle -> org.apache.commons.lang.builder.ToStringStyle$SimpleToStringStyle:
    long serialVersionUID -> serialVersionUID
    void <init>() -> <init>
    java.lang.Object readResolve() -> readResolve
org.apache.commons.lang.enum.Enum -> org.apache.commons.lang.enum.Enum:
    long serialVersionUID -> serialVersionUID
    java.util.Map EMPTY_MAP -> EMPTY_MAP
    java.util.Map cEnumClasses -> cEnumClasses
    java.lang.String iName -> iName
    int iHashCode -> iHashCode
    java.lang.String iToString -> iToString
    java.lang.Class class$org$apache$commons$lang$enum$Enum -> class$org$apache$commons$lang$enum$Enum
    java.lang.Class class$org$apache$commons$lang$enum$ValuedEnum -> class$org$apache$commons$lang$enum$ValuedEnum
    void <init>(java.lang.String) -> <init>
    void init(java.lang.String) -> init
    java.lang.Object readResolve() -> readResolve
    org.apache.commons.lang.enum.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    java.util.List getEnumList(java.lang.Class) -> getEnumList
    java.util.Iterator iterator(java.lang.Class) -> iterator
    org.apache.commons.lang.enum.Enum$Entry getEntry(java.lang.Class) -> getEntry
    org.apache.commons.lang.enum.Enum$Entry createEntry(java.lang.Class) -> createEntry
    java.lang.String getName() -> getName
    java.lang.Class getEnumClass() -> getEnumClass
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String getNameInOtherClassLoader(java.lang.Object) -> getNameInOtherClassLoader
    java.lang.String toString() -> toString
    java.lang.Class class$(java.lang.String) -> class$
    void <clinit>() -> <clinit>
org.apache.commons.lang.enum.Enum$Entry -> org.apache.commons.lang.enum.Enum$Entry:
    java.util.Map map -> map
    java.util.Map unmodifiableMap -> unmodifiableMap
    java.util.List list -> list
    java.util.List unmodifiableList -> unmodifiableList
    void <init>() -> <init>
org.apache.commons.lang.enum.EnumUtils -> org.apache.commons.lang.enum.EnumUtils:
    void <init>() -> <init>
    org.apache.commons.lang.enum.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    org.apache.commons.lang.enum.ValuedEnum getEnum(java.lang.Class,int) -> getEnum
    java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    java.util.List getEnumList(java.lang.Class) -> getEnumList
    java.util.Iterator iterator(java.lang.Class) -> iterator
org.apache.commons.lang.enum.ValuedEnum -> org.apache.commons.lang.enum.ValuedEnum:
    long serialVersionUID -> serialVersionUID
    int iValue -> iValue
    void <init>(java.lang.String,int) -> <init>
    org.apache.commons.lang.enum.Enum getEnum(java.lang.Class,int) -> getEnum
    int getValue() -> getValue
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.enums.Enum -> org.apache.commons.lang.enums.Enum:
    long serialVersionUID -> serialVersionUID
    java.util.Map EMPTY_MAP -> EMPTY_MAP
    java.util.Map cEnumClasses -> cEnumClasses
    java.lang.String iName -> iName
    int iHashCode -> iHashCode
    java.lang.String iToString -> iToString
    java.lang.Class class$org$apache$commons$lang$enums$Enum -> class$org$apache$commons$lang$enums$Enum
    java.lang.Class class$org$apache$commons$lang$enums$ValuedEnum -> class$org$apache$commons$lang$enums$ValuedEnum
    void <init>(java.lang.String) -> <init>
    void init(java.lang.String) -> init
    java.lang.Object readResolve() -> readResolve
    org.apache.commons.lang.enums.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    java.util.List getEnumList(java.lang.Class) -> getEnumList
    java.util.Iterator iterator(java.lang.Class) -> iterator
    org.apache.commons.lang.enums.Enum$Entry getEntry(java.lang.Class) -> getEntry
    org.apache.commons.lang.enums.Enum$Entry createEntry(java.lang.Class) -> createEntry
    java.lang.String getName() -> getName
    java.lang.Class getEnumClass() -> getEnumClass
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String getNameInOtherClassLoader(java.lang.Object) -> getNameInOtherClassLoader
    java.lang.String toString() -> toString
    java.lang.Class class$(java.lang.String) -> class$
    void <clinit>() -> <clinit>
org.apache.commons.lang.enums.Enum$Entry -> org.apache.commons.lang.enums.Enum$Entry:
    java.util.Map map -> map
    java.util.Map unmodifiableMap -> unmodifiableMap
    java.util.List list -> list
    java.util.List unmodifiableList -> unmodifiableList
    void <init>() -> <init>
org.apache.commons.lang.enums.EnumUtils -> org.apache.commons.lang.enums.EnumUtils:
    void <init>() -> <init>
    org.apache.commons.lang.enums.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    org.apache.commons.lang.enums.ValuedEnum getEnum(java.lang.Class,int) -> getEnum
    java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    java.util.List getEnumList(java.lang.Class) -> getEnumList
    java.util.Iterator iterator(java.lang.Class) -> iterator
org.apache.commons.lang.enums.ValuedEnum -> org.apache.commons.lang.enums.ValuedEnum:
    long serialVersionUID -> serialVersionUID
    int iValue -> iValue
    void <init>(java.lang.String,int) -> <init>
    org.apache.commons.lang.enums.Enum getEnum(java.lang.Class,int) -> getEnum
    int getValue() -> getValue
    int compareTo(java.lang.Object) -> compareTo
    int getValueInOtherClassLoader(java.lang.Object) -> getValueInOtherClassLoader
    java.lang.String toString() -> toString
org.apache.commons.lang.exception.ExceptionUtils -> org.apache.commons.lang.exception.ExceptionUtils:
    java.lang.String WRAPPED_MARKER -> WRAPPED_MARKER
    java.lang.String[] CAUSE_METHOD_NAMES -> CAUSE_METHOD_NAMES
    java.lang.reflect.Method THROWABLE_CAUSE_METHOD -> THROWABLE_CAUSE_METHOD
    java.lang.reflect.Method THROWABLE_INITCAUSE_METHOD -> THROWABLE_INITCAUSE_METHOD
    java.lang.Class class$java$lang$Throwable -> class$java$lang$Throwable
    void <init>() -> <init>
    void addCauseMethodName(java.lang.String) -> addCauseMethodName
    void removeCauseMethodName(java.lang.String) -> removeCauseMethodName
    boolean setCause(java.lang.Throwable,java.lang.Throwable) -> setCause
    java.lang.String[] toArray(java.util.List) -> toArray
    java.util.ArrayList getCauseMethodNameList() -> getCauseMethodNameList
    boolean isCauseMethodName(java.lang.String) -> isCauseMethodName
    java.lang.Throwable getCause(java.lang.Throwable) -> getCause
    java.lang.Throwable getCause(java.lang.Throwable,java.lang.String[]) -> getCause
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    java.lang.Throwable getCauseUsingWellKnownTypes(java.lang.Throwable) -> getCauseUsingWellKnownTypes
    java.lang.Throwable getCauseUsingMethodName(java.lang.Throwable,java.lang.String) -> getCauseUsingMethodName
    java.lang.Throwable getCauseUsingFieldName(java.lang.Throwable,java.lang.String) -> getCauseUsingFieldName
    boolean isThrowableNested() -> isThrowableNested
    boolean isNestedThrowable(java.lang.Throwable) -> isNestedThrowable
    int getThrowableCount(java.lang.Throwable) -> getThrowableCount
    java.lang.Throwable[] getThrowables(java.lang.Throwable) -> getThrowables
    java.util.List getThrowableList(java.lang.Throwable) -> getThrowableList
    int indexOfThrowable(java.lang.Throwable,java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Throwable,java.lang.Class,int) -> indexOfThrowable
    int indexOfType(java.lang.Throwable,java.lang.Class) -> indexOfType
    int indexOfType(java.lang.Throwable,java.lang.Class,int) -> indexOfType
    int indexOf(java.lang.Throwable,java.lang.Class,int,boolean) -> indexOf
    void printRootCauseStackTrace(java.lang.Throwable) -> printRootCauseStackTrace
    void printRootCauseStackTrace(java.lang.Throwable,java.io.PrintStream) -> printRootCauseStackTrace
    void printRootCauseStackTrace(java.lang.Throwable,java.io.PrintWriter) -> printRootCauseStackTrace
    java.lang.String[] getRootCauseStackTrace(java.lang.Throwable) -> getRootCauseStackTrace
    void removeCommonFrames(java.util.List,java.util.List) -> removeCommonFrames
    java.lang.String getFullStackTrace(java.lang.Throwable) -> getFullStackTrace
    java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    java.lang.String[] getStackFrames(java.lang.Throwable) -> getStackFrames
    java.lang.String[] getStackFrames(java.lang.String) -> getStackFrames
    java.util.List getStackFrameList(java.lang.Throwable) -> getStackFrameList
    java.lang.String getMessage(java.lang.Throwable) -> getMessage
    java.lang.String getRootCauseMessage(java.lang.Throwable) -> getRootCauseMessage
    java.lang.Class class$(java.lang.String) -> class$
    void <clinit>() -> <clinit>
org.apache.commons.lang.exception.Nestable -> org.apache.commons.lang.exception.Nestable:
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
org.apache.commons.lang.exception.NestableDelegate -> org.apache.commons.lang.exception.NestableDelegate:
    long serialVersionUID -> serialVersionUID
    java.lang.String MUST_BE_THROWABLE -> MUST_BE_THROWABLE
    java.lang.Throwable nestable -> nestable
    boolean topDown -> topDown
    boolean trimStackFrames -> trimStackFrames
    boolean matchSubclasses -> matchSubclasses
    java.lang.Class class$org$apache$commons$lang$exception$Nestable -> class$org$apache$commons$lang$exception$Nestable
    void <init>(org.apache.commons.lang.exception.Nestable) -> <init>
    java.lang.String getMessage(int) -> getMessage
    java.lang.String getMessage(java.lang.String) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.String[] getStackFrames(java.lang.Throwable) -> getStackFrames
    void trimStackFrames(java.util.List) -> trimStackFrames
    java.lang.Class class$(java.lang.String) -> class$
    void <clinit>() -> <clinit>
org.apache.commons.lang.exception.NestableError -> org.apache.commons.lang.exception.NestableError:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.exception.NestableDelegate delegate -> delegate
    java.lang.Throwable cause -> cause
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
org.apache.commons.lang.exception.NestableException -> org.apache.commons.lang.exception.NestableException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.exception.NestableDelegate delegate -> delegate
    java.lang.Throwable cause -> cause
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
org.apache.commons.lang.exception.NestableRuntimeException -> org.apache.commons.lang.exception.NestableRuntimeException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.exception.NestableDelegate delegate -> delegate
    java.lang.Throwable cause -> cause
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.Throwable) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
org.apache.commons.lang.math.DoubleRange -> org.apache.commons.lang.math.DoubleRange:
    long serialVersionUID -> serialVersionUID
    double min -> min
    double max -> max
    java.lang.Double minObject -> minObject
    java.lang.Double maxObject -> maxObject
    int hashCode -> hashCode
    java.lang.String toString -> toString
    void <init>(double) -> <init>
    void <init>(java.lang.Number) -> <init>
    void <init>(double,double) -> <init>
    void <init>(java.lang.Number,java.lang.Number) -> <init>
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    long getMinimumLong() -> getMinimumLong
    int getMinimumInteger() -> getMinimumInteger
    double getMinimumDouble() -> getMinimumDouble
    float getMinimumFloat() -> getMinimumFloat
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    long getMaximumLong() -> getMaximumLong
    int getMaximumInteger() -> getMaximumInteger
    double getMaximumDouble() -> getMaximumDouble
    float getMaximumFloat() -> getMaximumFloat
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean containsDouble(double) -> containsDouble
    boolean containsRange(org.apache.commons.lang.math.Range) -> containsRange
    boolean overlapsRange(org.apache.commons.lang.math.Range) -> overlapsRange
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.math.FloatRange -> org.apache.commons.lang.math.FloatRange:
    long serialVersionUID -> serialVersionUID
    float min -> min
    float max -> max
    java.lang.Float minObject -> minObject
    java.lang.Float maxObject -> maxObject
    int hashCode -> hashCode
    java.lang.String toString -> toString
    void <init>(float) -> <init>
    void <init>(java.lang.Number) -> <init>
    void <init>(float,float) -> <init>
    void <init>(java.lang.Number,java.lang.Number) -> <init>
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    long getMinimumLong() -> getMinimumLong
    int getMinimumInteger() -> getMinimumInteger
    double getMinimumDouble() -> getMinimumDouble
    float getMinimumFloat() -> getMinimumFloat
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    long getMaximumLong() -> getMaximumLong
    int getMaximumInteger() -> getMaximumInteger
    double getMaximumDouble() -> getMaximumDouble
    float getMaximumFloat() -> getMaximumFloat
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean containsFloat(float) -> containsFloat
    boolean containsRange(org.apache.commons.lang.math.Range) -> containsRange
    boolean overlapsRange(org.apache.commons.lang.math.Range) -> overlapsRange
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.math.Fraction -> org.apache.commons.lang.math.Fraction:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang.math.Fraction ZERO -> ZERO
    org.apache.commons.lang.math.Fraction ONE -> ONE
    org.apache.commons.lang.math.Fraction ONE_HALF -> ONE_HALF
    org.apache.commons.lang.math.Fraction ONE_THIRD -> ONE_THIRD
    org.apache.commons.lang.math.Fraction TWO_THIRDS -> TWO_THIRDS
    org.apache.commons.lang.math.Fraction ONE_QUARTER -> ONE_QUARTER
    org.apache.commons.lang.math.Fraction TWO_QUARTERS -> TWO_QUARTERS
    org.apache.commons.lang.math.Fraction THREE_QUARTERS -> THREE_QUARTERS
    org.apache.commons.lang.math.Fraction ONE_FIFTH -> ONE_FIFTH
    org.apache.commons.lang.math.Fraction TWO_FIFTHS -> TWO_FIFTHS
    org.apache.commons.lang.math.Fraction THREE_FIFTHS -> THREE_FIFTHS
    org.apache.commons.lang.math.Fraction FOUR_FIFTHS -> FOUR_FIFTHS
    int numerator -> numerator
    int denominator -> denominator
    int hashCode -> hashCode
    java.lang.String toString -> toString
    java.lang.String toProperString -> toProperString
    void <init>(int,int) -> <init>
    org.apache.commons.lang.math.Fraction getFraction(int,int) -> getFraction
    org.apache.commons.lang.math.Fraction getFraction(int,int,int) -> getFraction
    org.apache.commons.lang.math.Fraction getReducedFraction(int,int) -> getReducedFraction
    org.apache.commons.lang.math.Fraction getFraction(double) -> getFraction
    org.apache.commons.lang.math.Fraction getFraction(java.lang.String) -> getFraction
    int getNumerator() -> getNumerator
    int getDenominator() -> getDenominator
    int getProperNumerator() -> getProperNumerator
    int getProperWhole() -> getProperWhole
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    org.apache.commons.lang.math.Fraction reduce() -> reduce
    org.apache.commons.lang.math.Fraction invert() -> invert
    org.apache.commons.lang.math.Fraction negate() -> negate
    org.apache.commons.lang.math.Fraction abs() -> abs
    org.apache.commons.lang.math.Fraction pow(int) -> pow
    int greatestCommonDivisor(int,int) -> greatestCommonDivisor
    int mulAndCheck(int,int) -> mulAndCheck
    int mulPosAndCheck(int,int) -> mulPosAndCheck
    int addAndCheck(int,int) -> addAndCheck
    int subAndCheck(int,int) -> subAndCheck
    org.apache.commons.lang.math.Fraction add(org.apache.commons.lang.math.Fraction) -> add
    org.apache.commons.lang.math.Fraction subtract(org.apache.commons.lang.math.Fraction) -> subtract
    org.apache.commons.lang.math.Fraction addSub(org.apache.commons.lang.math.Fraction,boolean) -> addSub
    org.apache.commons.lang.math.Fraction multiplyBy(org.apache.commons.lang.math.Fraction) -> multiplyBy
    org.apache.commons.lang.math.Fraction divideBy(org.apache.commons.lang.math.Fraction) -> divideBy
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
    java.lang.String toProperString() -> toProperString
    void <clinit>() -> <clinit>
org.apache.commons.lang.math.IEEE754rUtils -> org.apache.commons.lang.math.IEEE754rUtils:
    void <init>() -> <init>
    double min(double[]) -> min
    float min(float[]) -> min
    double min(double,double,double) -> min
    double min(double,double) -> min
    float min(float,float,float) -> min
    float min(float,float) -> min
    double max(double[]) -> max
    float max(float[]) -> max
    double max(double,double,double) -> max
    double max(double,double) -> max
    float max(float,float,float) -> max
    float max(float,float) -> max
org.apache.commons.lang.math.IntRange -> org.apache.commons.lang.math.IntRange:
    long serialVersionUID -> serialVersionUID
    int min -> min
    int max -> max
    java.lang.Integer minObject -> minObject
    java.lang.Integer maxObject -> maxObject
    int hashCode -> hashCode
    java.lang.String toString -> toString
    void <init>(int) -> <init>
    void <init>(java.lang.Number) -> <init>
    void <init>(int,int) -> <init>
    void <init>(java.lang.Number,java.lang.Number) -> <init>
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    long getMinimumLong() -> getMinimumLong
    int getMinimumInteger() -> getMinimumInteger
    double getMinimumDouble() -> getMinimumDouble
    float getMinimumFloat() -> getMinimumFloat
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    long getMaximumLong() -> getMaximumLong
    int getMaximumInteger() -> getMaximumInteger
    double getMaximumDouble() -> getMaximumDouble
    float getMaximumFloat() -> getMaximumFloat
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean containsInteger(int) -> containsInteger
    boolean containsRange(org.apache.commons.lang.math.Range) -> containsRange
    boolean overlapsRange(org.apache.commons.lang.math.Range) -> overlapsRange
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int[] toArray() -> toArray
org.apache.commons.lang.math.JVMRandom -> org.apache.commons.lang.math.JVMRandom:
    long serialVersionUID -> serialVersionUID
    boolean constructed -> constructed
    void <init>() -> <init>
    void setSeed(long) -> setSeed
    double nextGaussian() -> nextGaussian
    void nextBytes(byte[]) -> nextBytes
    int nextInt() -> nextInt
    int nextInt(int) -> nextInt
    long nextLong() -> nextLong
    long nextLong(long) -> nextLong
    boolean nextBoolean() -> nextBoolean
    float nextFloat() -> nextFloat
    double nextDouble() -> nextDouble
org.apache.commons.lang.math.LongRange -> org.apache.commons.lang.math.LongRange:
    long serialVersionUID -> serialVersionUID
    long min -> min
    long max -> max
    java.lang.Long minObject -> minObject
    java.lang.Long maxObject -> maxObject
    int hashCode -> hashCode
    java.lang.String toString -> toString
    void <init>(long) -> <init>
    void <init>(java.lang.Number) -> <init>
    void <init>(long,long) -> <init>
    void <init>(java.lang.Number,java.lang.Number) -> <init>
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    long getMinimumLong() -> getMinimumLong
    int getMinimumInteger() -> getMinimumInteger
    double getMinimumDouble() -> getMinimumDouble
    float getMinimumFloat() -> getMinimumFloat
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    long getMaximumLong() -> getMaximumLong
    int getMaximumInteger() -> getMaximumInteger
    double getMaximumDouble() -> getMaximumDouble
    float getMaximumFloat() -> getMaximumFloat
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean containsLong(long) -> containsLong
    boolean containsRange(org.apache.commons.lang.math.Range) -> containsRange
    boolean overlapsRange(org.apache.commons.lang.math.Range) -> overlapsRange
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    long[] toArray() -> toArray
org.apache.commons.lang.math.NumberRange -> org.apache.commons.lang.math.NumberRange:
    long serialVersionUID -> serialVersionUID
    java.lang.Number min -> min
    java.lang.Number max -> max
    int hashCode -> hashCode
    java.lang.String toString -> toString
    void <init>(java.lang.Number) -> <init>
    void <init>(java.lang.Number,java.lang.Number) -> <init>
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.math.NumberUtils -> org.apache.commons.lang.math.NumberUtils:
    java.lang.Long LONG_ZERO -> LONG_ZERO
    java.lang.Long LONG_ONE -> LONG_ONE
    java.lang.Long LONG_MINUS_ONE -> LONG_MINUS_ONE
    java.lang.Integer INTEGER_ZERO -> INTEGER_ZERO
    java.lang.Integer INTEGER_ONE -> INTEGER_ONE
    java.lang.Integer INTEGER_MINUS_ONE -> INTEGER_MINUS_ONE
    java.lang.Short SHORT_ZERO -> SHORT_ZERO
    java.lang.Short SHORT_ONE -> SHORT_ONE
    java.lang.Short SHORT_MINUS_ONE -> SHORT_MINUS_ONE
    java.lang.Byte BYTE_ZERO -> BYTE_ZERO
    java.lang.Byte BYTE_ONE -> BYTE_ONE
    java.lang.Byte BYTE_MINUS_ONE -> BYTE_MINUS_ONE
    java.lang.Double DOUBLE_ZERO -> DOUBLE_ZERO
    java.lang.Double DOUBLE_ONE -> DOUBLE_ONE
    java.lang.Double DOUBLE_MINUS_ONE -> DOUBLE_MINUS_ONE
    java.lang.Float FLOAT_ZERO -> FLOAT_ZERO
    java.lang.Float FLOAT_ONE -> FLOAT_ONE
    java.lang.Float FLOAT_MINUS_ONE -> FLOAT_MINUS_ONE
    void <init>() -> <init>
    int stringToInt(java.lang.String) -> stringToInt
    int toInt(java.lang.String) -> toInt
    int stringToInt(java.lang.String,int) -> stringToInt
    int toInt(java.lang.String,int) -> toInt
    long toLong(java.lang.String) -> toLong
    long toLong(java.lang.String,long) -> toLong
    float toFloat(java.lang.String) -> toFloat
    float toFloat(java.lang.String,float) -> toFloat
    double toDouble(java.lang.String) -> toDouble
    double toDouble(java.lang.String,double) -> toDouble
    java.lang.Number createNumber(java.lang.String) -> createNumber
    boolean isAllZeros(java.lang.String) -> isAllZeros
    java.lang.Float createFloat(java.lang.String) -> createFloat
    java.lang.Double createDouble(java.lang.String) -> createDouble
    java.lang.Integer createInteger(java.lang.String) -> createInteger
    java.lang.Long createLong(java.lang.String) -> createLong
    java.math.BigInteger createBigInteger(java.lang.String) -> createBigInteger
    java.math.BigDecimal createBigDecimal(java.lang.String) -> createBigDecimal
    long min(long[]) -> min
    int min(int[]) -> min
    short min(short[]) -> min
    byte min(byte[]) -> min
    double min(double[]) -> min
    float min(float[]) -> min
    long max(long[]) -> max
    int max(int[]) -> max
    short max(short[]) -> max
    byte max(byte[]) -> max
    double max(double[]) -> max
    float max(float[]) -> max
    long min(long,long,long) -> min
    int min(int,int,int) -> min
    short min(short,short,short) -> min
    byte min(byte,byte,byte) -> min
    double min(double,double,double) -> min
    float min(float,float,float) -> min
    long max(long,long,long) -> max
    int max(int,int,int) -> max
    short max(short,short,short) -> max
    byte max(byte,byte,byte) -> max
    double max(double,double,double) -> max
    float max(float,float,float) -> max
    int compare(double,double) -> compare
    int compare(float,float) -> compare
    boolean isDigits(java.lang.String) -> isDigits
    boolean isNumber(java.lang.String) -> isNumber
    void <clinit>() -> <clinit>
org.apache.commons.lang.math.RandomUtils -> org.apache.commons.lang.math.RandomUtils:
    java.util.Random JVM_RANDOM -> JVM_RANDOM
    void <init>() -> <init>
    int nextInt() -> nextInt
    int nextInt(java.util.Random) -> nextInt
    int nextInt(int) -> nextInt
    int nextInt(java.util.Random,int) -> nextInt
    long nextLong() -> nextLong
    long nextLong(java.util.Random) -> nextLong
    boolean nextBoolean() -> nextBoolean
    boolean nextBoolean(java.util.Random) -> nextBoolean
    float nextFloat() -> nextFloat
    float nextFloat(java.util.Random) -> nextFloat
    double nextDouble() -> nextDouble
    double nextDouble(java.util.Random) -> nextDouble
    void <clinit>() -> <clinit>
org.apache.commons.lang.math.Range -> org.apache.commons.lang.math.Range:
    void <init>() -> <init>
    java.lang.Number getMinimumNumber() -> getMinimumNumber
    long getMinimumLong() -> getMinimumLong
    int getMinimumInteger() -> getMinimumInteger
    double getMinimumDouble() -> getMinimumDouble
    float getMinimumFloat() -> getMinimumFloat
    java.lang.Number getMaximumNumber() -> getMaximumNumber
    long getMaximumLong() -> getMaximumLong
    int getMaximumInteger() -> getMaximumInteger
    double getMaximumDouble() -> getMaximumDouble
    float getMaximumFloat() -> getMaximumFloat
    boolean containsNumber(java.lang.Number) -> containsNumber
    boolean containsLong(java.lang.Number) -> containsLong
    boolean containsLong(long) -> containsLong
    boolean containsInteger(java.lang.Number) -> containsInteger
    boolean containsInteger(int) -> containsInteger
    boolean containsDouble(java.lang.Number) -> containsDouble
    boolean containsDouble(double) -> containsDouble
    boolean containsFloat(java.lang.Number) -> containsFloat
    boolean containsFloat(float) -> containsFloat
    boolean containsRange(org.apache.commons.lang.math.Range) -> containsRange
    boolean overlapsRange(org.apache.commons.lang.math.Range) -> overlapsRange
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.Mutable -> org.apache.commons.lang.mutable.Mutable:
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
org.apache.commons.lang.mutable.MutableBoolean -> org.apache.commons.lang.mutable.MutableBoolean:
    long serialVersionUID -> serialVersionUID
    boolean value -> value
    void <init>() -> <init>
    void <init>(boolean) -> <init>
    void <init>(java.lang.Boolean) -> <init>
    boolean booleanValue() -> booleanValue
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(java.lang.Object) -> equals
    java.lang.Object getValue() -> getValue
    int hashCode() -> hashCode
    void setValue(boolean) -> setValue
    void setValue(java.lang.Object) -> setValue
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableByte -> org.apache.commons.lang.mutable.MutableByte:
    long serialVersionUID -> serialVersionUID
    byte value -> value
    void <init>() -> <init>
    void <init>(byte) -> <init>
    void <init>(java.lang.Number) -> <init>
    java.lang.Object getValue() -> getValue
    void setValue(byte) -> setValue
    void setValue(java.lang.Object) -> setValue
    byte byteValue() -> byteValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Byte toByte() -> toByte
    void increment() -> increment
    void decrement() -> decrement
    void add(byte) -> add
    void add(java.lang.Number) -> add
    void subtract(byte) -> subtract
    void subtract(java.lang.Number) -> subtract
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableDouble -> org.apache.commons.lang.mutable.MutableDouble:
    long serialVersionUID -> serialVersionUID
    double value -> value
    void <init>() -> <init>
    void <init>(double) -> <init>
    void <init>(java.lang.Number) -> <init>
    java.lang.Object getValue() -> getValue
    void setValue(double) -> setValue
    void setValue(java.lang.Object) -> setValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    java.lang.Double toDouble() -> toDouble
    void increment() -> increment
    void decrement() -> decrement
    void add(double) -> add
    void add(java.lang.Number) -> add
    void subtract(double) -> subtract
    void subtract(java.lang.Number) -> subtract
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableFloat -> org.apache.commons.lang.mutable.MutableFloat:
    long serialVersionUID -> serialVersionUID
    float value -> value
    void <init>() -> <init>
    void <init>(float) -> <init>
    void <init>(java.lang.Number) -> <init>
    java.lang.Object getValue() -> getValue
    void setValue(float) -> setValue
    void setValue(java.lang.Object) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(float) -> add
    void add(java.lang.Number) -> add
    void subtract(float) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    boolean isNaN() -> isNaN
    boolean isInfinite() -> isInfinite
    java.lang.Float toFloat() -> toFloat
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableInt -> org.apache.commons.lang.mutable.MutableInt:
    long serialVersionUID -> serialVersionUID
    int value -> value
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(java.lang.Number) -> <init>
    java.lang.Object getValue() -> getValue
    void setValue(int) -> setValue
    void setValue(java.lang.Object) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(int) -> add
    void add(java.lang.Number) -> add
    void subtract(int) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Integer toInteger() -> toInteger
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableLong -> org.apache.commons.lang.mutable.MutableLong:
    long serialVersionUID -> serialVersionUID
    long value -> value
    void <init>() -> <init>
    void <init>(long) -> <init>
    void <init>(java.lang.Number) -> <init>
    java.lang.Object getValue() -> getValue
    void setValue(long) -> setValue
    void setValue(java.lang.Object) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(long) -> add
    void add(java.lang.Number) -> add
    void subtract(long) -> subtract
    void subtract(java.lang.Number) -> subtract
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Long toLong() -> toLong
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableObject -> org.apache.commons.lang.mutable.MutableObject:
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> value
    void <init>() -> <init>
    void <init>(java.lang.Object) -> <init>
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.mutable.MutableShort -> org.apache.commons.lang.mutable.MutableShort:
    long serialVersionUID -> serialVersionUID
    short value -> value
    void <init>() -> <init>
    void <init>(short) -> <init>
    void <init>(java.lang.Number) -> <init>
    java.lang.Object getValue() -> getValue
    void setValue(short) -> setValue
    void setValue(java.lang.Object) -> setValue
    void increment() -> increment
    void decrement() -> decrement
    void add(short) -> add
    void add(java.lang.Number) -> add
    void subtract(short) -> subtract
    void subtract(java.lang.Number) -> subtract
    short shortValue() -> shortValue
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.Short toShort() -> toShort
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.apache.commons.lang.text.CompositeFormat -> org.apache.commons.lang.text.CompositeFormat:
    long serialVersionUID -> serialVersionUID
    java.text.Format parser -> parser
    java.text.Format formatter -> formatter
    void <init>(java.text.Format,java.text.Format) -> <init>
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.text.Format getParser() -> getParser
    java.text.Format getFormatter() -> getFormatter
    java.lang.String reformat(java.lang.String) -> reformat
org.apache.commons.lang.text.ExtendedMessageFormat -> org.apache.commons.lang.text.ExtendedMessageFormat:
    long serialVersionUID -> serialVersionUID
    java.lang.String DUMMY_PATTERN -> DUMMY_PATTERN
    java.lang.String ESCAPED_QUOTE -> ESCAPED_QUOTE
    char START_FMT -> START_FMT
    char END_FE -> END_FE
    char START_FE -> START_FE
    char QUOTE -> QUOTE
    java.lang.String toPattern -> toPattern
    java.util.Map registry -> registry
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.util.Locale) -> <init>
    void <init>(java.lang.String,java.util.Map) -> <init>
    void <init>(java.lang.String,java.util.Locale,java.util.Map) -> <init>
    java.lang.String toPattern() -> toPattern
    void applyPattern(java.lang.String) -> applyPattern
    void setFormat(int,java.text.Format) -> setFormat
    void setFormatByArgumentIndex(int,java.text.Format) -> setFormatByArgumentIndex
    void setFormats(java.text.Format[]) -> setFormats
    void setFormatsByArgumentIndex(java.text.Format[]) -> setFormatsByArgumentIndex
    java.text.Format getFormat(java.lang.String) -> getFormat
    int readArgumentIndex(java.lang.String,java.text.ParsePosition) -> readArgumentIndex
    java.lang.String parseFormatDescription(java.lang.String,java.text.ParsePosition) -> parseFormatDescription
    java.lang.String insertFormats(java.lang.String,java.util.ArrayList) -> insertFormats
    void seekNonWs(java.lang.String,java.text.ParsePosition) -> seekNonWs
    java.text.ParsePosition next(java.text.ParsePosition) -> next
    java.lang.StringBuffer appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuffer,boolean) -> appendQuotedString
    void getQuotedString(java.lang.String,java.text.ParsePosition,boolean) -> getQuotedString
    boolean containsElements(java.util.Collection) -> containsElements
org.apache.commons.lang.text.FormatFactory -> org.apache.commons.lang.text.FormatFactory:
    java.text.Format getFormat(java.lang.String,java.lang.String,java.util.Locale) -> getFormat
org.apache.commons.lang.text.StrBuilder -> org.apache.commons.lang.text.StrBuilder:
    int CAPACITY -> CAPACITY
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int size -> size
    java.lang.String newLine -> newLine
    java.lang.String nullText -> nullText
    void <init>() -> <init>
    void <init>(int) -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getNewLineText() -> getNewLineText
    org.apache.commons.lang.text.StrBuilder setNewLineText(java.lang.String) -> setNewLineText
    java.lang.String getNullText() -> getNullText
    org.apache.commons.lang.text.StrBuilder setNullText(java.lang.String) -> setNullText
    int length() -> length
    org.apache.commons.lang.text.StrBuilder setLength(int) -> setLength
    int capacity() -> capacity
    org.apache.commons.lang.text.StrBuilder ensureCapacity(int) -> ensureCapacity
    org.apache.commons.lang.text.StrBuilder minimizeCapacity() -> minimizeCapacity
    int size() -> size
    boolean isEmpty() -> isEmpty
    org.apache.commons.lang.text.StrBuilder clear() -> clear
    char charAt(int) -> charAt
    org.apache.commons.lang.text.StrBuilder setCharAt(int,char) -> setCharAt
    org.apache.commons.lang.text.StrBuilder deleteCharAt(int) -> deleteCharAt
    char[] toCharArray() -> toCharArray
    char[] toCharArray(int,int) -> toCharArray
    char[] getChars(char[]) -> getChars
    void getChars(int,int,char[],int) -> getChars
    org.apache.commons.lang.text.StrBuilder appendNewLine() -> appendNewLine
    org.apache.commons.lang.text.StrBuilder appendNull() -> appendNull
    org.apache.commons.lang.text.StrBuilder append(java.lang.Object) -> append
    org.apache.commons.lang.text.StrBuilder append(java.lang.String) -> append
    org.apache.commons.lang.text.StrBuilder append(java.lang.String,int,int) -> append
    org.apache.commons.lang.text.StrBuilder append(java.lang.StringBuffer) -> append
    org.apache.commons.lang.text.StrBuilder append(java.lang.StringBuffer,int,int) -> append
    org.apache.commons.lang.text.StrBuilder append(org.apache.commons.lang.text.StrBuilder) -> append
    org.apache.commons.lang.text.StrBuilder append(org.apache.commons.lang.text.StrBuilder,int,int) -> append
    org.apache.commons.lang.text.StrBuilder append(char[]) -> append
    org.apache.commons.lang.text.StrBuilder append(char[],int,int) -> append
    org.apache.commons.lang.text.StrBuilder append(boolean) -> append
    org.apache.commons.lang.text.StrBuilder append(char) -> append
    org.apache.commons.lang.text.StrBuilder append(int) -> append
    org.apache.commons.lang.text.StrBuilder append(long) -> append
    org.apache.commons.lang.text.StrBuilder append(float) -> append
    org.apache.commons.lang.text.StrBuilder append(double) -> append
    org.apache.commons.lang.text.StrBuilder appendln(java.lang.Object) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(java.lang.String) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(java.lang.String,int,int) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(java.lang.StringBuffer) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(java.lang.StringBuffer,int,int) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(org.apache.commons.lang.text.StrBuilder) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(org.apache.commons.lang.text.StrBuilder,int,int) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(char[]) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(char[],int,int) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(boolean) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(char) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(int) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(long) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(float) -> appendln
    org.apache.commons.lang.text.StrBuilder appendln(double) -> appendln
    org.apache.commons.lang.text.StrBuilder appendAll(java.lang.Object[]) -> appendAll
    org.apache.commons.lang.text.StrBuilder appendAll(java.util.Collection) -> appendAll
    org.apache.commons.lang.text.StrBuilder appendAll(java.util.Iterator) -> appendAll
    org.apache.commons.lang.text.StrBuilder appendWithSeparators(java.lang.Object[],java.lang.String) -> appendWithSeparators
    org.apache.commons.lang.text.StrBuilder appendWithSeparators(java.util.Collection,java.lang.String) -> appendWithSeparators
    org.apache.commons.lang.text.StrBuilder appendWithSeparators(java.util.Iterator,java.lang.String) -> appendWithSeparators
    org.apache.commons.lang.text.StrBuilder appendSeparator(java.lang.String) -> appendSeparator
    org.apache.commons.lang.text.StrBuilder appendSeparator(char) -> appendSeparator
    org.apache.commons.lang.text.StrBuilder appendSeparator(java.lang.String,int) -> appendSeparator
    org.apache.commons.lang.text.StrBuilder appendSeparator(char,int) -> appendSeparator
    org.apache.commons.lang.text.StrBuilder appendPadding(int,char) -> appendPadding
    org.apache.commons.lang.text.StrBuilder appendFixedWidthPadLeft(java.lang.Object,int,char) -> appendFixedWidthPadLeft
    org.apache.commons.lang.text.StrBuilder appendFixedWidthPadLeft(int,int,char) -> appendFixedWidthPadLeft
    org.apache.commons.lang.text.StrBuilder appendFixedWidthPadRight(java.lang.Object,int,char) -> appendFixedWidthPadRight
    org.apache.commons.lang.text.StrBuilder appendFixedWidthPadRight(int,int,char) -> appendFixedWidthPadRight
    org.apache.commons.lang.text.StrBuilder insert(int,java.lang.Object) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,java.lang.String) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,char[]) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,char[],int,int) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,boolean) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,char) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,int) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,long) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,float) -> insert
    org.apache.commons.lang.text.StrBuilder insert(int,double) -> insert
    void deleteImpl(int,int,int) -> deleteImpl
    org.apache.commons.lang.text.StrBuilder delete(int,int) -> delete
    org.apache.commons.lang.text.StrBuilder deleteAll(char) -> deleteAll
    org.apache.commons.lang.text.StrBuilder deleteFirst(char) -> deleteFirst
    org.apache.commons.lang.text.StrBuilder deleteAll(java.lang.String) -> deleteAll
    org.apache.commons.lang.text.StrBuilder deleteFirst(java.lang.String) -> deleteFirst
    org.apache.commons.lang.text.StrBuilder deleteAll(org.apache.commons.lang.text.StrMatcher) -> deleteAll
    org.apache.commons.lang.text.StrBuilder deleteFirst(org.apache.commons.lang.text.StrMatcher) -> deleteFirst
    void replaceImpl(int,int,int,java.lang.String,int) -> replaceImpl
    org.apache.commons.lang.text.StrBuilder replace(int,int,java.lang.String) -> replace
    org.apache.commons.lang.text.StrBuilder replaceAll(char,char) -> replaceAll
    org.apache.commons.lang.text.StrBuilder replaceFirst(char,char) -> replaceFirst
    org.apache.commons.lang.text.StrBuilder replaceAll(java.lang.String,java.lang.String) -> replaceAll
    org.apache.commons.lang.text.StrBuilder replaceFirst(java.lang.String,java.lang.String) -> replaceFirst
    org.apache.commons.lang.text.StrBuilder replaceAll(org.apache.commons.lang.text.StrMatcher,java.lang.String) -> replaceAll
    org.apache.commons.lang.text.StrBuilder replaceFirst(org.apache.commons.lang.text.StrMatcher,java.lang.String) -> replaceFirst
    org.apache.commons.lang.text.StrBuilder replace(org.apache.commons.lang.text.StrMatcher,java.lang.String,int,int,int) -> replace
    org.apache.commons.lang.text.StrBuilder replaceImpl(org.apache.commons.lang.text.StrMatcher,java.lang.String,int,int,int) -> replaceImpl
    org.apache.commons.lang.text.StrBuilder reverse() -> reverse
    org.apache.commons.lang.text.StrBuilder trim() -> trim
    boolean startsWith(java.lang.String) -> startsWith
    boolean endsWith(java.lang.String) -> endsWith
    java.lang.String substring(int) -> substring
    java.lang.String substring(int,int) -> substring
    java.lang.String leftString(int) -> leftString
    java.lang.String rightString(int) -> rightString
    java.lang.String midString(int,int) -> midString
    boolean contains(char) -> contains
    boolean contains(java.lang.String) -> contains
    boolean contains(org.apache.commons.lang.text.StrMatcher) -> contains
    int indexOf(char) -> indexOf
    int indexOf(char,int) -> indexOf
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,int) -> indexOf
    int indexOf(org.apache.commons.lang.text.StrMatcher) -> indexOf
    int indexOf(org.apache.commons.lang.text.StrMatcher,int) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    int lastIndexOf(char,int) -> lastIndexOf
    int lastIndexOf(java.lang.String) -> lastIndexOf
    int lastIndexOf(java.lang.String,int) -> lastIndexOf
    int lastIndexOf(org.apache.commons.lang.text.StrMatcher) -> lastIndexOf
    int lastIndexOf(org.apache.commons.lang.text.StrMatcher,int) -> lastIndexOf
    org.apache.commons.lang.text.StrTokenizer asTokenizer() -> asTokenizer
    java.io.Reader asReader() -> asReader
    java.io.Writer asWriter() -> asWriter
    boolean equalsIgnoreCase(org.apache.commons.lang.text.StrBuilder) -> equalsIgnoreCase
    boolean equals(org.apache.commons.lang.text.StrBuilder) -> equals
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.StringBuffer toStringBuffer() -> toStringBuffer
    int validateRange(int,int) -> validateRange
    void validateIndex(int) -> validateIndex
org.apache.commons.lang.text.StrBuilder$StrBuilderReader -> org.apache.commons.lang.text.StrBuilder$StrBuilderReader:
    int pos -> pos
    int mark -> mark
    org.apache.commons.lang.text.StrBuilder this$0 -> this$0
    void <init>(org.apache.commons.lang.text.StrBuilder) -> <init>
    void close() -> close
    int read() -> read
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer -> org.apache.commons.lang.text.StrBuilder$StrBuilderTokenizer:
    org.apache.commons.lang.text.StrBuilder this$0 -> this$0
    void <init>(org.apache.commons.lang.text.StrBuilder) -> <init>
    java.util.List tokenize(char[],int,int) -> tokenize
    java.lang.String getContent() -> getContent
org.apache.commons.lang.text.StrBuilder$StrBuilderWriter -> org.apache.commons.lang.text.StrBuilder$StrBuilderWriter:
    org.apache.commons.lang.text.StrBuilder this$0 -> this$0
    void <init>(org.apache.commons.lang.text.StrBuilder) -> <init>
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
org.apache.commons.lang.text.StrLookup -> org.apache.commons.lang.text.StrLookup:
    org.apache.commons.lang.text.StrLookup NONE_LOOKUP -> NONE_LOOKUP
    org.apache.commons.lang.text.StrLookup SYSTEM_PROPERTIES_LOOKUP -> SYSTEM_PROPERTIES_LOOKUP
    org.apache.commons.lang.text.StrLookup noneLookup() -> noneLookup
    org.apache.commons.lang.text.StrLookup systemPropertiesLookup() -> systemPropertiesLookup
    org.apache.commons.lang.text.StrLookup mapLookup(java.util.Map) -> mapLookup
    void <init>() -> <init>
    java.lang.String lookup(java.lang.String) -> lookup
    void <clinit>() -> <clinit>
org.apache.commons.lang.text.StrLookup$MapStrLookup -> org.apache.commons.lang.text.StrLookup$MapStrLookup:
    java.util.Map map -> map
    void <init>(java.util.Map) -> <init>
    java.lang.String lookup(java.lang.String) -> lookup
org.apache.commons.lang.text.StrMatcher -> org.apache.commons.lang.text.StrMatcher:
    org.apache.commons.lang.text.StrMatcher COMMA_MATCHER -> COMMA_MATCHER
    org.apache.commons.lang.text.StrMatcher TAB_MATCHER -> TAB_MATCHER
    org.apache.commons.lang.text.StrMatcher SPACE_MATCHER -> SPACE_MATCHER
    org.apache.commons.lang.text.StrMatcher SPLIT_MATCHER -> SPLIT_MATCHER
    org.apache.commons.lang.text.StrMatcher TRIM_MATCHER -> TRIM_MATCHER
    org.apache.commons.lang.text.StrMatcher SINGLE_QUOTE_MATCHER -> SINGLE_QUOTE_MATCHER
    org.apache.commons.lang.text.StrMatcher DOUBLE_QUOTE_MATCHER -> DOUBLE_QUOTE_MATCHER
    org.apache.commons.lang.text.StrMatcher QUOTE_MATCHER -> QUOTE_MATCHER
    org.apache.commons.lang.text.StrMatcher NONE_MATCHER -> NONE_MATCHER
    org.apache.commons.lang.text.StrMatcher commaMatcher() -> commaMatcher
    org.apache.commons.lang.text.StrMatcher tabMatcher() -> tabMatcher
    org.apache.commons.lang.text.StrMatcher spaceMatcher() -> spaceMatcher
    org.apache.commons.lang.text.StrMatcher splitMatcher() -> splitMatcher
    org.apache.commons.lang.text.StrMatcher trimMatcher() -> trimMatcher
    org.apache.commons.lang.text.StrMatcher singleQuoteMatcher() -> singleQuoteMatcher
    org.apache.commons.lang.text.StrMatcher doubleQuoteMatcher() -> doubleQuoteMatcher
    org.apache.commons.lang.text.StrMatcher quoteMatcher() -> quoteMatcher
    org.apache.commons.lang.text.StrMatcher noneMatcher() -> noneMatcher
    org.apache.commons.lang.text.StrMatcher charMatcher(char) -> charMatcher
    org.apache.commons.lang.text.StrMatcher charSetMatcher(char[]) -> charSetMatcher
    org.apache.commons.lang.text.StrMatcher charSetMatcher(java.lang.String) -> charSetMatcher
    org.apache.commons.lang.text.StrMatcher stringMatcher(java.lang.String) -> stringMatcher
    void <init>() -> <init>
    int isMatch(char[],int,int,int) -> isMatch
    int isMatch(char[],int) -> isMatch
    void <clinit>() -> <clinit>
org.apache.commons.lang.text.StrMatcher$CharMatcher -> org.apache.commons.lang.text.StrMatcher$CharMatcher:
    char ch -> ch
    void <init>(char) -> <init>
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrMatcher$CharSetMatcher -> org.apache.commons.lang.text.StrMatcher$CharSetMatcher:
    char[] chars -> chars
    void <init>(char[]) -> <init>
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrMatcher$NoMatcher -> org.apache.commons.lang.text.StrMatcher$NoMatcher:
    void <init>() -> <init>
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrMatcher$StringMatcher -> org.apache.commons.lang.text.StrMatcher$StringMatcher:
    char[] chars -> chars
    void <init>(java.lang.String) -> <init>
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrMatcher$TrimMatcher -> org.apache.commons.lang.text.StrMatcher$TrimMatcher:
    void <init>() -> <init>
    int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang.text.StrSubstitutor -> org.apache.commons.lang.text.StrSubstitutor:
    char DEFAULT_ESCAPE -> DEFAULT_ESCAPE
    org.apache.commons.lang.text.StrMatcher DEFAULT_PREFIX -> DEFAULT_PREFIX
    org.apache.commons.lang.text.StrMatcher DEFAULT_SUFFIX -> DEFAULT_SUFFIX
    char escapeChar -> escapeChar
    org.apache.commons.lang.text.StrMatcher prefixMatcher -> prefixMatcher
    org.apache.commons.lang.text.StrMatcher suffixMatcher -> suffixMatcher
    org.apache.commons.lang.text.StrLookup variableResolver -> variableResolver
    java.lang.String replace(java.lang.Object,java.util.Map) -> replace
    java.lang.String replace(java.lang.Object,java.util.Map,java.lang.String,java.lang.String) -> replace
    java.lang.String replaceSystemProperties(java.lang.Object) -> replaceSystemProperties
    void <init>() -> <init>
    void <init>(java.util.Map) -> <init>
    void <init>(java.util.Map,java.lang.String,java.lang.String) -> <init>
    void <init>(java.util.Map,java.lang.String,java.lang.String,char) -> <init>
    void <init>(org.apache.commons.lang.text.StrLookup) -> <init>
    void <init>(org.apache.commons.lang.text.StrLookup,java.lang.String,java.lang.String,char) -> <init>
    void <init>(org.apache.commons.lang.text.StrLookup,org.apache.commons.lang.text.StrMatcher,org.apache.commons.lang.text.StrMatcher,char) -> <init>
    java.lang.String replace(java.lang.String) -> replace
    java.lang.String replace(java.lang.String,int,int) -> replace
    java.lang.String replace(char[]) -> replace
    java.lang.String replace(char[],int,int) -> replace
    java.lang.String replace(java.lang.StringBuffer) -> replace
    java.lang.String replace(java.lang.StringBuffer,int,int) -> replace
    java.lang.String replace(org.apache.commons.lang.text.StrBuilder) -> replace
    java.lang.String replace(org.apache.commons.lang.text.StrBuilder,int,int) -> replace
    java.lang.String replace(java.lang.Object) -> replace
    boolean replaceIn(java.lang.StringBuffer) -> replaceIn
    boolean replaceIn(java.lang.StringBuffer,int,int) -> replaceIn
    boolean replaceIn(org.apache.commons.lang.text.StrBuilder) -> replaceIn
    boolean replaceIn(org.apache.commons.lang.text.StrBuilder,int,int) -> replaceIn
    boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int) -> substitute
    int substitute(org.apache.commons.lang.text.StrBuilder,int,int,java.util.List) -> substitute
    void checkCyclicSubstitution(java.lang.String,java.util.List) -> checkCyclicSubstitution
    java.lang.String resolveVariable(java.lang.String,org.apache.commons.lang.text.StrBuilder,int,int) -> resolveVariable
    char getEscapeChar() -> getEscapeChar
    void setEscapeChar(char) -> setEscapeChar
    org.apache.commons.lang.text.StrMatcher getVariablePrefixMatcher() -> getVariablePrefixMatcher
    org.apache.commons.lang.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang.text.StrMatcher) -> setVariablePrefixMatcher
    org.apache.commons.lang.text.StrSubstitutor setVariablePrefix(char) -> setVariablePrefix
    org.apache.commons.lang.text.StrSubstitutor setVariablePrefix(java.lang.String) -> setVariablePrefix
    org.apache.commons.lang.text.StrMatcher getVariableSuffixMatcher() -> getVariableSuffixMatcher
    org.apache.commons.lang.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang.text.StrMatcher) -> setVariableSuffixMatcher
    org.apache.commons.lang.text.StrSubstitutor setVariableSuffix(char) -> setVariableSuffix
    org.apache.commons.lang.text.StrSubstitutor setVariableSuffix(java.lang.String) -> setVariableSuffix
    org.apache.commons.lang.text.StrLookup getVariableResolver() -> getVariableResolver
    void setVariableResolver(org.apache.commons.lang.text.StrLookup) -> setVariableResolver
    void <clinit>() -> <clinit>
org.apache.commons.lang.text.StrTokenizer -> org.apache.commons.lang.text.StrTokenizer:
    org.apache.commons.lang.text.StrTokenizer CSV_TOKENIZER_PROTOTYPE -> CSV_TOKENIZER_PROTOTYPE
    org.apache.commons.lang.text.StrTokenizer TSV_TOKENIZER_PROTOTYPE -> TSV_TOKENIZER_PROTOTYPE
    char[] chars -> chars
    java.lang.String[] tokens -> tokens
    int tokenPos -> tokenPos
    org.apache.commons.lang.text.StrMatcher delimMatcher -> delimMatcher
    org.apache.commons.lang.text.StrMatcher quoteMatcher -> quoteMatcher
    org.apache.commons.lang.text.StrMatcher ignoredMatcher -> ignoredMatcher
    org.apache.commons.lang.text.StrMatcher trimmerMatcher -> trimmerMatcher
    boolean emptyAsNull -> emptyAsNull
    boolean ignoreEmptyTokens -> ignoreEmptyTokens
    org.apache.commons.lang.text.StrTokenizer getCSVClone() -> getCSVClone
    org.apache.commons.lang.text.StrTokenizer getCSVInstance() -> getCSVInstance
    org.apache.commons.lang.text.StrTokenizer getCSVInstance(java.lang.String) -> getCSVInstance
    org.apache.commons.lang.text.StrTokenizer getCSVInstance(char[]) -> getCSVInstance
    org.apache.commons.lang.text.StrTokenizer getTSVClone() -> getTSVClone
    org.apache.commons.lang.text.StrTokenizer getTSVInstance() -> getTSVInstance
    org.apache.commons.lang.text.StrTokenizer getTSVInstance(java.lang.String) -> getTSVInstance
    org.apache.commons.lang.text.StrTokenizer getTSVInstance(char[]) -> getTSVInstance
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,char) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(java.lang.String,org.apache.commons.lang.text.StrMatcher) -> <init>
    void <init>(java.lang.String,char,char) -> <init>
    void <init>(java.lang.String,org.apache.commons.lang.text.StrMatcher,org.apache.commons.lang.text.StrMatcher) -> <init>
    void <init>(char[]) -> <init>
    void <init>(char[],char) -> <init>
    void <init>(char[],java.lang.String) -> <init>
    void <init>(char[],org.apache.commons.lang.text.StrMatcher) -> <init>
    void <init>(char[],char,char) -> <init>
    void <init>(char[],org.apache.commons.lang.text.StrMatcher,org.apache.commons.lang.text.StrMatcher) -> <init>
    int size() -> size
    java.lang.String nextToken() -> nextToken
    java.lang.String previousToken() -> previousToken
    java.lang.String[] getTokenArray() -> getTokenArray
    java.util.List getTokenList() -> getTokenList
    org.apache.commons.lang.text.StrTokenizer reset() -> reset
    org.apache.commons.lang.text.StrTokenizer reset(java.lang.String) -> reset
    org.apache.commons.lang.text.StrTokenizer reset(char[]) -> reset
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
    void checkTokenized() -> checkTokenized
    java.util.List tokenize(char[],int,int) -> tokenize
    void addToken(java.util.List,java.lang.String) -> addToken
    int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List) -> readNextToken
    int readWithQuotes(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List,int,int) -> readWithQuotes
    boolean isQuote(char[],int,int,int,int) -> isQuote
    org.apache.commons.lang.text.StrMatcher getDelimiterMatcher() -> getDelimiterMatcher
    org.apache.commons.lang.text.StrTokenizer setDelimiterMatcher(org.apache.commons.lang.text.StrMatcher) -> setDelimiterMatcher
    org.apache.commons.lang.text.StrTokenizer setDelimiterChar(char) -> setDelimiterChar
    org.apache.commons.lang.text.StrTokenizer setDelimiterString(java.lang.String) -> setDelimiterString
    org.apache.commons.lang.text.StrMatcher getQuoteMatcher() -> getQuoteMatcher
    org.apache.commons.lang.text.StrTokenizer setQuoteMatcher(org.apache.commons.lang.text.StrMatcher) -> setQuoteMatcher
    org.apache.commons.lang.text.StrTokenizer setQuoteChar(char) -> setQuoteChar
    org.apache.commons.lang.text.StrMatcher getIgnoredMatcher() -> getIgnoredMatcher
    org.apache.commons.lang.text.StrTokenizer setIgnoredMatcher(org.apache.commons.lang.text.StrMatcher) -> setIgnoredMatcher
    org.apache.commons.lang.text.StrTokenizer setIgnoredChar(char) -> setIgnoredChar
    org.apache.commons.lang.text.StrMatcher getTrimmerMatcher() -> getTrimmerMatcher
    org.apache.commons.lang.text.StrTokenizer setTrimmerMatcher(org.apache.commons.lang.text.StrMatcher) -> setTrimmerMatcher
    boolean isEmptyTokenAsNull() -> isEmptyTokenAsNull
    org.apache.commons.lang.text.StrTokenizer setEmptyTokenAsNull(boolean) -> setEmptyTokenAsNull
    boolean isIgnoreEmptyTokens() -> isIgnoreEmptyTokens
    org.apache.commons.lang.text.StrTokenizer setIgnoreEmptyTokens(boolean) -> setIgnoreEmptyTokens
    java.lang.String getContent() -> getContent
    java.lang.Object clone() -> clone
    java.lang.Object cloneReset() -> cloneReset
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
org.apache.commons.lang.time.DateFormatUtils -> org.apache.commons.lang.time.DateFormatUtils:
    org.apache.commons.lang.time.FastDateFormat ISO_DATETIME_FORMAT -> ISO_DATETIME_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_DATETIME_TIME_ZONE_FORMAT -> ISO_DATETIME_TIME_ZONE_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_DATE_FORMAT -> ISO_DATE_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_DATE_TIME_ZONE_FORMAT -> ISO_DATE_TIME_ZONE_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_TIME_FORMAT -> ISO_TIME_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_TIME_TIME_ZONE_FORMAT -> ISO_TIME_TIME_ZONE_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_TIME_NO_T_FORMAT -> ISO_TIME_NO_T_FORMAT
    org.apache.commons.lang.time.FastDateFormat ISO_TIME_NO_T_TIME_ZONE_FORMAT -> ISO_TIME_NO_T_TIME_ZONE_FORMAT
    org.apache.commons.lang.time.FastDateFormat SMTP_DATETIME_FORMAT -> SMTP_DATETIME_FORMAT
    void <init>() -> <init>
    java.lang.String formatUTC(long,java.lang.String) -> formatUTC
    java.lang.String formatUTC(java.util.Date,java.lang.String) -> formatUTC
    java.lang.String formatUTC(long,java.lang.String,java.util.Locale) -> formatUTC
    java.lang.String formatUTC(java.util.Date,java.lang.String,java.util.Locale) -> formatUTC
    java.lang.String format(long,java.lang.String) -> format
    java.lang.String format(java.util.Date,java.lang.String) -> format
    java.lang.String format(java.util.Calendar,java.lang.String) -> format
    java.lang.String format(long,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone) -> format
    java.lang.String format(long,java.lang.String,java.util.Locale) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.Locale) -> format
    java.lang.String format(java.util.Calendar,java.lang.String,java.util.Locale) -> format
    java.lang.String format(long,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    void <clinit>() -> <clinit>
org.apache.commons.lang.time.DateUtils -> org.apache.commons.lang.time.DateUtils:
    java.util.TimeZone UTC_TIME_ZONE -> UTC_TIME_ZONE
    long MILLIS_PER_SECOND -> MILLIS_PER_SECOND
    long MILLIS_PER_MINUTE -> MILLIS_PER_MINUTE
    long MILLIS_PER_HOUR -> MILLIS_PER_HOUR
    long MILLIS_PER_DAY -> MILLIS_PER_DAY
    int SEMI_MONTH -> SEMI_MONTH
    int[][] fields -> fields
    int RANGE_WEEK_SUNDAY -> RANGE_WEEK_SUNDAY
    int RANGE_WEEK_MONDAY -> RANGE_WEEK_MONDAY
    int RANGE_WEEK_RELATIVE -> RANGE_WEEK_RELATIVE
    int RANGE_WEEK_CENTER -> RANGE_WEEK_CENTER
    int RANGE_MONTH_SUNDAY -> RANGE_MONTH_SUNDAY
    int RANGE_MONTH_MONDAY -> RANGE_MONTH_MONDAY
    int MILLIS_IN_SECOND -> MILLIS_IN_SECOND
    int MILLIS_IN_MINUTE -> MILLIS_IN_MINUTE
    int MILLIS_IN_HOUR -> MILLIS_IN_HOUR
    int MILLIS_IN_DAY -> MILLIS_IN_DAY
    void <init>() -> <init>
    boolean isSameDay(java.util.Date,java.util.Date) -> isSameDay
    boolean isSameDay(java.util.Calendar,java.util.Calendar) -> isSameDay
    boolean isSameInstant(java.util.Date,java.util.Date) -> isSameInstant
    boolean isSameInstant(java.util.Calendar,java.util.Calendar) -> isSameInstant
    boolean isSameLocalTime(java.util.Calendar,java.util.Calendar) -> isSameLocalTime
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date addYears(java.util.Date,int) -> addYears
    java.util.Date addMonths(java.util.Date,int) -> addMonths
    java.util.Date addWeeks(java.util.Date,int) -> addWeeks
    java.util.Date addDays(java.util.Date,int) -> addDays
    java.util.Date addHours(java.util.Date,int) -> addHours
    java.util.Date addMinutes(java.util.Date,int) -> addMinutes
    java.util.Date addSeconds(java.util.Date,int) -> addSeconds
    java.util.Date addMilliseconds(java.util.Date,int) -> addMilliseconds
    java.util.Date add(java.util.Date,int,int) -> add
    java.util.Date setYears(java.util.Date,int) -> setYears
    java.util.Date setMonths(java.util.Date,int) -> setMonths
    java.util.Date setDays(java.util.Date,int) -> setDays
    java.util.Date setHours(java.util.Date,int) -> setHours
    java.util.Date setMinutes(java.util.Date,int) -> setMinutes
    java.util.Date setSeconds(java.util.Date,int) -> setSeconds
    java.util.Date setMilliseconds(java.util.Date,int) -> setMilliseconds
    java.util.Date set(java.util.Date,int,int) -> set
    java.util.Date round(java.util.Date,int) -> round
    java.util.Calendar round(java.util.Calendar,int) -> round
    java.util.Date round(java.lang.Object,int) -> round
    java.util.Date truncate(java.util.Date,int) -> truncate
    java.util.Calendar truncate(java.util.Calendar,int) -> truncate
    java.util.Date truncate(java.lang.Object,int) -> truncate
    void modify(java.util.Calendar,int,boolean) -> modify
    java.util.Iterator iterator(java.util.Date,int) -> iterator
    java.util.Iterator iterator(java.util.Calendar,int) -> iterator
    java.util.Iterator iterator(java.lang.Object,int) -> iterator
    long getFragmentInMilliseconds(java.util.Date,int) -> getFragmentInMilliseconds
    long getFragmentInSeconds(java.util.Date,int) -> getFragmentInSeconds
    long getFragmentInMinutes(java.util.Date,int) -> getFragmentInMinutes
    long getFragmentInHours(java.util.Date,int) -> getFragmentInHours
    long getFragmentInDays(java.util.Date,int) -> getFragmentInDays
    long getFragmentInMilliseconds(java.util.Calendar,int) -> getFragmentInMilliseconds
    long getFragmentInSeconds(java.util.Calendar,int) -> getFragmentInSeconds
    long getFragmentInMinutes(java.util.Calendar,int) -> getFragmentInMinutes
    long getFragmentInHours(java.util.Calendar,int) -> getFragmentInHours
    long getFragmentInDays(java.util.Calendar,int) -> getFragmentInDays
    long getFragment(java.util.Date,int,int) -> getFragment
    long getFragment(java.util.Calendar,int,int) -> getFragment
    long getMillisPerUnit(int) -> getMillisPerUnit
    void <clinit>() -> <clinit>
org.apache.commons.lang.time.DateUtils$DateIterator -> org.apache.commons.lang.time.DateUtils$DateIterator:
    java.util.Calendar endFinal -> endFinal
    java.util.Calendar spot -> spot
    void <init>(java.util.Calendar,java.util.Calendar) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.commons.lang.time.DurationFormatUtils -> org.apache.commons.lang.time.DurationFormatUtils:
    java.lang.String ISO_EXTENDED_FORMAT_PATTERN -> ISO_EXTENDED_FORMAT_PATTERN
    java.lang.Object y -> y
    java.lang.Object M -> M
    java.lang.Object d -> d
    java.lang.Object H -> H
    java.lang.Object m -> m
    java.lang.Object s -> s
    java.lang.Object S -> S
    void <init>() -> <init>
    java.lang.String formatDurationHMS(long) -> formatDurationHMS
    java.lang.String formatDurationISO(long) -> formatDurationISO
    java.lang.String formatDuration(long,java.lang.String) -> formatDuration
    java.lang.String formatDuration(long,java.lang.String,boolean) -> formatDuration
    java.lang.String formatDurationWords(long,boolean,boolean) -> formatDurationWords
    java.lang.String formatPeriodISO(long,long) -> formatPeriodISO
    java.lang.String formatPeriod(long,long,java.lang.String) -> formatPeriod
    java.lang.String formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone) -> formatPeriod
    java.lang.String format(org.apache.commons.lang.time.DurationFormatUtils$Token[],int,int,int,int,int,int,int,boolean) -> format
    org.apache.commons.lang.time.DurationFormatUtils$Token[] lexx(java.lang.String) -> lexx
    void <clinit>() -> <clinit>
org.apache.commons.lang.time.DurationFormatUtils$Token -> org.apache.commons.lang.time.DurationFormatUtils$Token:
    java.lang.Object value -> value
    int count -> count
    boolean containsTokenWithValue(org.apache.commons.lang.time.DurationFormatUtils$Token[],java.lang.Object) -> containsTokenWithValue
    void <init>(java.lang.Object) -> <init>
    void <init>(java.lang.Object,int) -> <init>
    void increment() -> increment
    int getCount() -> getCount
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.time.FastDateFormat -> org.apache.commons.lang.time.FastDateFormat:
    long serialVersionUID -> serialVersionUID
    int FULL -> FULL
    int LONG -> LONG
    int MEDIUM -> MEDIUM
    int SHORT -> SHORT
    java.lang.String cDefaultPattern -> cDefaultPattern
    java.util.Map cInstanceCache -> cInstanceCache
    java.util.Map cDateInstanceCache -> cDateInstanceCache
    java.util.Map cTimeInstanceCache -> cTimeInstanceCache
    java.util.Map cDateTimeInstanceCache -> cDateTimeInstanceCache
    java.util.Map cTimeZoneDisplayCache -> cTimeZoneDisplayCache
    java.lang.String mPattern -> mPattern
    java.util.TimeZone mTimeZone -> mTimeZone
    boolean mTimeZoneForced -> mTimeZoneForced
    java.util.Locale mLocale -> mLocale
    boolean mLocaleForced -> mLocaleForced
    org.apache.commons.lang.time.FastDateFormat$Rule[] mRules -> mRules
    int mMaxLengthEstimate -> mMaxLengthEstimate
    org.apache.commons.lang.time.FastDateFormat getInstance() -> getInstance
    org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String) -> getInstance
    org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone) -> getInstance
    org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String,java.util.Locale) -> getInstance
    org.apache.commons.lang.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> getInstance
    org.apache.commons.lang.time.FastDateFormat getDateInstance(int) -> getDateInstance
    org.apache.commons.lang.time.FastDateFormat getDateInstance(int,java.util.Locale) -> getDateInstance
    org.apache.commons.lang.time.FastDateFormat getDateInstance(int,java.util.TimeZone) -> getDateInstance
    org.apache.commons.lang.time.FastDateFormat getDateInstance(int,java.util.TimeZone,java.util.Locale) -> getDateInstance
    org.apache.commons.lang.time.FastDateFormat getTimeInstance(int) -> getTimeInstance
    org.apache.commons.lang.time.FastDateFormat getTimeInstance(int,java.util.Locale) -> getTimeInstance
    org.apache.commons.lang.time.FastDateFormat getTimeInstance(int,java.util.TimeZone) -> getTimeInstance
    org.apache.commons.lang.time.FastDateFormat getTimeInstance(int,java.util.TimeZone,java.util.Locale) -> getTimeInstance
    org.apache.commons.lang.time.FastDateFormat getDateTimeInstance(int,int) -> getDateTimeInstance
    org.apache.commons.lang.time.FastDateFormat getDateTimeInstance(int,int,java.util.Locale) -> getDateTimeInstance
    org.apache.commons.lang.time.FastDateFormat getDateTimeInstance(int,int,java.util.TimeZone) -> getDateTimeInstance
    org.apache.commons.lang.time.FastDateFormat getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale) -> getDateTimeInstance
    java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale) -> getTimeZoneDisplay
    java.lang.String getDefaultPattern() -> getDefaultPattern
    void <init>(java.lang.String,java.util.TimeZone,java.util.Locale) -> <init>
    void init() -> init
    java.util.List parsePattern() -> parsePattern
    java.lang.String parseToken(java.lang.String,int[]) -> parseToken
    org.apache.commons.lang.time.FastDateFormat$NumberRule selectNumberRule(int,int) -> selectNumberRule
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.String format(long) -> format
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Calendar) -> format
    java.lang.StringBuffer format(long,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer) -> format
    java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer) -> format
    java.lang.StringBuffer applyRules(java.util.Calendar,java.lang.StringBuffer) -> applyRules
    java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.lang.String getPattern() -> getPattern
    java.util.TimeZone getTimeZone() -> getTimeZone
    boolean getTimeZoneOverridesCalendar() -> getTimeZoneOverridesCalendar
    java.util.Locale getLocale() -> getLocale
    int getMaxLengthEstimate() -> getMaxLengthEstimate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    void <clinit>() -> <clinit>
org.apache.commons.lang.time.FastDateFormat$CharacterLiteral -> org.apache.commons.lang.time.FastDateFormat$CharacterLiteral:
    char mValue -> mValue
    void <init>(char) -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$NumberRule -> org.apache.commons.lang.time.FastDateFormat$NumberRule:
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$PaddedNumberField -> org.apache.commons.lang.time.FastDateFormat$PaddedNumberField:
    int mField -> mField
    int mSize -> mSize
    void <init>(int,int) -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$Pair -> org.apache.commons.lang.time.FastDateFormat$Pair:
    java.lang.Object mObj1 -> mObj1
    java.lang.Object mObj2 -> mObj2
    void <init>(java.lang.Object,java.lang.Object) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.lang.time.FastDateFormat$Rule -> org.apache.commons.lang.time.FastDateFormat$Rule:
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$StringLiteral -> org.apache.commons.lang.time.FastDateFormat$StringLiteral:
    java.lang.String mValue -> mValue
    void <init>(java.lang.String) -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TextField -> org.apache.commons.lang.time.FastDateFormat$TextField:
    int mField -> mField
    java.lang.String[] mValues -> mValues
    void <init>(int,java.lang.String[]) -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TimeZoneDisplayKey -> org.apache.commons.lang.time.FastDateFormat$TimeZoneDisplayKey:
    java.util.TimeZone mTimeZone -> mTimeZone
    int mStyle -> mStyle
    java.util.Locale mLocale -> mLocale
    void <init>(java.util.TimeZone,boolean,int,java.util.Locale) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.lang.time.FastDateFormat$TimeZoneNameRule -> org.apache.commons.lang.time.FastDateFormat$TimeZoneNameRule:
    java.util.TimeZone mTimeZone -> mTimeZone
    boolean mTimeZoneForced -> mTimeZoneForced
    java.util.Locale mLocale -> mLocale
    int mStyle -> mStyle
    java.lang.String mStandard -> mStandard
    java.lang.String mDaylight -> mDaylight
    void <init>(java.util.TimeZone,boolean,java.util.Locale,int) -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule -> org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule:
    org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule INSTANCE_COLON -> INSTANCE_COLON
    org.apache.commons.lang.time.FastDateFormat$TimeZoneNumberRule INSTANCE_NO_COLON -> INSTANCE_NO_COLON
    boolean mColon -> mColon
    void <init>(boolean) -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void <clinit>() -> <clinit>
org.apache.commons.lang.time.FastDateFormat$TwelveHourField -> org.apache.commons.lang.time.FastDateFormat$TwelveHourField:
    org.apache.commons.lang.time.FastDateFormat$NumberRule mRule -> mRule
    void <init>(org.apache.commons.lang.time.FastDateFormat$NumberRule) -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TwentyFourHourField -> org.apache.commons.lang.time.FastDateFormat$TwentyFourHourField:
    org.apache.commons.lang.time.FastDateFormat$NumberRule mRule -> mRule
    void <init>(org.apache.commons.lang.time.FastDateFormat$NumberRule) -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TwoDigitMonthField -> org.apache.commons.lang.time.FastDateFormat$TwoDigitMonthField:
    org.apache.commons.lang.time.FastDateFormat$TwoDigitMonthField INSTANCE -> INSTANCE
    void <init>() -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
    void <clinit>() -> <clinit>
org.apache.commons.lang.time.FastDateFormat$TwoDigitNumberField -> org.apache.commons.lang.time.FastDateFormat$TwoDigitNumberField:
    int mField -> mField
    void <init>(int) -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang.time.FastDateFormat$TwoDigitYearField -> org.apache.commons.lang.time.FastDateFormat$TwoDigitYearField:
    org.apache.commons.lang.time.FastDateFormat$TwoDigitYearField INSTANCE -> INSTANCE
    void <init>() -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
    void <clinit>() -> <clinit>
org.apache.commons.lang.time.FastDateFormat$UnpaddedMonthField -> org.apache.commons.lang.time.FastDateFormat$UnpaddedMonthField:
    org.apache.commons.lang.time.FastDateFormat$UnpaddedMonthField INSTANCE -> INSTANCE
    void <init>() -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
    void <clinit>() -> <clinit>
org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField -> org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField:
    org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField INSTANCE_YEAR -> INSTANCE_YEAR
    int mField -> mField
    void <init>(int) -> <init>
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    void appendTo(java.lang.StringBuffer,int) -> appendTo
    void <clinit>() -> <clinit>
org.apache.commons.lang.time.StopWatch -> org.apache.commons.lang.time.StopWatch:
    int STATE_UNSTARTED -> STATE_UNSTARTED
    int STATE_RUNNING -> STATE_RUNNING
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_SUSPENDED -> STATE_SUSPENDED
    int STATE_UNSPLIT -> STATE_UNSPLIT
    int STATE_SPLIT -> STATE_SPLIT
    int runningState -> runningState
    int splitState -> splitState
    long startTime -> startTime
    long stopTime -> stopTime
    void <init>() -> <init>
    void start() -> start
    void stop() -> stop
    void reset() -> reset
    void split() -> split
    void unsplit() -> unsplit
    void suspend() -> suspend
    void resume() -> resume
    long getTime() -> getTime
    long getSplitTime() -> getSplitTime
    long getStartTime() -> getStartTime
    java.lang.String toString() -> toString
    java.lang.String toSplitString() -> toSplitString
